[{"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/index.js":"1","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/App.js":"2","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Profile.js":"3","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Login.js":"4","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/SignUp.js":"5","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/Footer.js":"6","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Header.js":"7","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/contexts/UserContext.js":"8","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Content.js":"9","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalForm.js":"10","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalList.js":"11","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Search.js":"12","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatSection.js":"13","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js":"14","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatFact.js":"15","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatsHeader.js":"16","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Animal.js":"17","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AddComment.js":"18","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ShareButton.js":"19","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js":"20","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Chat.js":"21","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CableContext.js":"22","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatModal.js":"23","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatWindowsManager.js":"24","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatWindowsContext.js":"25","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/chat_channel.js":"26","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/consumer.js":"27"},{"size":344,"mtime":1678575990690,"results":"28","hashOfConfig":"29"},{"size":2723,"mtime":1679420665109,"results":"30","hashOfConfig":"29"},{"size":5175,"mtime":1678658717036,"results":"31","hashOfConfig":"29"},{"size":3142,"mtime":1678657444597,"results":"32","hashOfConfig":"29"},{"size":4122,"mtime":1678657547858,"results":"33","hashOfConfig":"29"},{"size":457,"mtime":1677965164389,"results":"34","hashOfConfig":"29"},{"size":3220,"mtime":1679417526462,"results":"35","hashOfConfig":"29"},{"size":87,"mtime":1677965164390,"results":"36","hashOfConfig":"29"},{"size":1423,"mtime":1679177257601,"results":"37","hashOfConfig":"29"},{"size":3709,"mtime":1678656405785,"results":"38","hashOfConfig":"29"},{"size":1823,"mtime":1679177277881,"results":"39","hashOfConfig":"29"},{"size":1146,"mtime":1678040051668,"results":"40","hashOfConfig":"29"},{"size":1169,"mtime":1677965164389,"results":"41","hashOfConfig":"29"},{"size":1676,"mtime":1679177292780,"results":"42","hashOfConfig":"29"},{"size":412,"mtime":1677965164389,"results":"43","hashOfConfig":"29"},{"size":446,"mtime":1677965164389,"results":"44","hashOfConfig":"29"},{"size":4545,"mtime":1679177310810,"results":"45","hashOfConfig":"29"},{"size":5254,"mtime":1679177334922,"results":"46","hashOfConfig":"29"},{"size":973,"mtime":1677965164390,"results":"47","hashOfConfig":"29"},{"size":9497,"mtime":1679590582825,"results":"48","hashOfConfig":"29"},{"size":3831,"mtime":1679171952172,"results":"49","hashOfConfig":"29"},{"size":766,"mtime":1679418514041,"results":"50","hashOfConfig":"29"},{"size":5025,"mtime":1679671494512,"results":"51","hashOfConfig":"29"},{"size":1112,"mtime":1679159998494,"results":"52","hashOfConfig":"29"},{"size":224,"mtime":1679159438364,"results":"53","hashOfConfig":"29"},{"size":1551,"mtime":1679671506835,"results":"54","hashOfConfig":"29"},{"size":292,"mtime":1679352932406,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1tp4m0v",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/index.js",[],[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/App.js",["144"],[],"// useEffect(() => {\n//   if (user) {\n//     fetch(\"http://localhost:3000/conversations\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   }\n// }, [user]);\n\n  \n  import React, {useState, useEffect} from 'react';\n  import './App.css'\n  import Header from './components/header/Header'\n  import Content from './components/content/Content'\n  import Footer from './components/Footer'\n  import Login from './Login'\n  import SignUp from './SignUp'\n  import Profile from './Profile'\n  import {Routes, Route} from \"react-router-dom\"\n  import { UserContext } from './components/contexts/UserContext'\n  import ChatModal from './components/content/ChatModal'\n  import { CableProvider } from './components/content/CableContext';\n\n\nexport default function App() {\n  const [animals, setAnimals] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [newMessage, setNewMessage] = useState(null);\n\n  \n  function addNewAnimal(newAnimal) {\n    setAnimals([...animals, newAnimal]);\n  }\n\n\n\n  return (\n    <CableProvider>\n\n    <UserContext.Provider value={{ user, setUser }} >\n      <div className=\"app\">\n        \n        <Routes>\n          <Route\n            path=\"/login\"\n            element={<Login setUser={setUser} />}\n          />\n          <Route\n            path=\"/signup\"\n            element={<SignUp setUser={setUser} />}\n          />\n            <Route\n            path=\"/profile\"\n            element={<Profile setUser={setUser} />}/>\n          <Route\n            path=\"/\"\n            element={user ? (\n              <>\n              <Header \n                search={search} \n                setSearch={setSearch} \n                setUser={setUser}/>\n              <Content\n                search={search}\n                animals={animals}\n                setAnimals={setAnimals}\n                addNewAnimal={addNewAnimal}\n                setUser={setUser}\n                newMessage={newMessage}\n                setNewMessage={setNewMessage}\n              />\n              <ChatModal />\n              <Footer />\n              </>\n            ) : (\n              <div className=\"login-to-view\" >\n                <Header \n                    addNewAnimal={addNewAnimal} \n                    search={search} \n                    setSearch={setSearch} \n                    setUser={setUser}/>\n                <div className=\"error-msg\">You must be <br></br>logged in <br></br>to view this <br></br>content!</div>\n              </div>\n             \n            )}\n          />\n        </Routes>\n      </div>\n    </UserContext.Provider>\n    </CableProvider>\n  );\n}\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Profile.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Login.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/SignUp.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/Footer.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Header.js",["145"],[],"import React, {useState, useEffect} from 'react'\nimport Search from './Search'\nimport Logo from '../images/logo.png'\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components'\nimport './Header.css'\nimport ChatModal from '../content/ChatModal'\n\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\nexport default function Header({ search, setSearch, setUser }) {\n  const { user = null } = useContext(UserContext); \n  const userImage = localStorage.getItem(\"userImage\");\n\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [hasReceivedMessage, setHasReceivedMessage] = useState(false);\n\n  const handleLogout = () => {\n    fetch(\"http://localhost:3000/logout\", { method: 'DELETE' })\n      .then(() => {\n        setUser(null);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const handleMessagesClick = () => {\n    \n        setShowChatModal(true);\n    setHasReceivedMessage(false); // reset the hasReceivedMessage state\n  };\n  \n\n  // useEffect(() => {\n  //   if (user) {\n  //     fetch(`http://localhost:3000/messages?user_id=${user.id}`)\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         if (data.length > 0) {\n  //           setHasReceivedMessage(true);\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         console.error(error);\n  //       });\n  //   }\n  // }, [user]);\n  \n  // const handleMessagesClick = () => {\n  //   if (hasReceivedMessage) {\n  //     setShowChatModal(true);\n  //   }\n  // };\n\n\n  return (\n    <div className=\"header-div\">\n      <Link to=\"/\">\n        <LogoImg src={Logo} alt=\"logo\" />\n      </Link>\n      {user ? (\n        <>\n          <Search search={search} setSearch={setSearch} />\n          <div className='header-links'>\n            {hasReceivedMessage && (\n  <div className='nav-link' onClick={handleMessagesClick}>\n    ✉️ Messages\n  </div>\n)}\n            {userImage && (\n              <img className=\"userImg\" src={userImage} alt=\"User\" />\n            )}           \n            <Link to=\"/profile\" className=\"nav-link\">\n              {user.full_name}\n            </Link>\n            <button onClick={handleLogout} className=\"logoutBtn\">\n              Log Out\n            </button>\n          </div>\n        </>\n      ) : (\n        <div className=\"header-links\">\n          <button className=\"navBtn\">\n            <Link to=\"/login\"  className=\"navLink\">\n              Login\n            </Link>\n          </button>\n          <button  className=\"navBtn\">\n            <Link to=\"/signup\"className=\"navLink\" >\n              Sign Up\n            </Link>\n          </button>\n        </div>\n      )}\n      {showChatModal && user && (\n        <ChatModal\n          currentUser={{ id: user.id }}\n          handleClose={() => setShowChatModal(false)}\n          setHasReceivedMessage={setHasReceivedMessage} // pass the function to update the hasReceivedMessage state\n\n        />\n      )}\n    </div>\n  );\n}\n\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\n\nconst LogoImg = styled.img`\n  width:140px;\n  @media (max-width:600px) {\n    width:100px;\n    position: absolute;\n    top: 15px;\n    left: 0;\n  }\n`\n\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/contexts/UserContext.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Content.js",["146","147","148"],[],"import React, { useEffect} from 'react'\nimport AnimalList from './AnimalList'\nimport styled from 'styled-components'\nimport CatSection from '../cats/CatSection'\nimport AnimalForm from './AnimalForm'\nimport './Content.css'\nimport ChatModal from './ChatModal'\n\nexport default function Content({newMessage, setNewMessage, search, animals, setAnimals, addNewAnimal, setUser}) {\n  \n  useEffect(() => {\n    fetch(\"http://localhost:3000/animals\")\n      .then((response) => response.json())\n      .then(setAnimals)\n      .catch((error) => console.error(error));\n  }, []);\n\n  const filteredAnimals = animals.filter(\n    (animal) =>\n      animal.name.toLowerCase().includes(search.toLowerCase()) ||\n      animal.breed.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"content-box\">\n      <AnimalForm addNewAnimal={addNewAnimal} animals={animals} setAnimals={setAnimals}/>\n      <ContentDiv >\n        <AnimalList \n            animals={filteredAnimals} \n            setAnimals={setAnimals}\n            setUser={setUser}\n            newMessage={newMessage}\n            setNewMessage={setNewMessage}/>\n        {/* <CatSection/> */}\n     \n      </ContentDiv>\n    </div>\n  )\n}\n\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\nconst ContentDiv= styled.div \n`  display:grid;\ngrid-template-columns: auto  auto auto;\nmargin-top:30px;\nposition:relative;\n;\n\n`\n\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalForm.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalList.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Search.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatSection.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js",["149"],[],"import React, { useState } from \"react\";\nimport Animal from \"./Animal\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\n// The AnimalDetail component displays the detailed information about a specific animal\nexport default function AnimalDetail({ newMessage, setNewMessage, animal,setUser ,setAnimals}) {\n  const { likes} = animal;\n  const [isLiked, setIsLiked] = useState(false);\n  const [showComments, setshowComments] = useState(false);\n  const { user} = useContext(UserContext); \n\n  \n  // Determine the correct wording for the likes count (e.g. 1 like or 2 likes)\n  function likesFunction() {\n    return likes.length === 1 ? \"Like\" : \"Likes\";\n  }\n\n  function addLikes(updatedAnimal) {\n    setAnimals((prevAnimals) => {\n      return prevAnimals.map((prevAnimal) => {\n        if (prevAnimal.id === updatedAnimal.id) {\n          return { ...prevAnimal, likes: updatedAnimal.likes || [] };\n        } else {\n          return prevAnimal;\n        }\n      });\n    })}\n\n  function showCom() {\n    setshowComments((prev) => !prev);\n  }\n\n  // Set the styles for the like button based on whether the animal is liked or not\n  const likeButtonStyle = {\n    backgroundColor: isLiked ? \"red\" : \"white\",\n    color: isLiked ? \"white\" : \"red\",\n  };\n\n  return (\n    <Animal\n      animal={animal}\n      likeButtonStyle={likeButtonStyle}\n      likesFunction={likesFunction}\n      showCom={showCom}\n      showComments={showComments}\n      setShowComments={setshowComments}\n      setAnimals={setAnimals}\n      setUser={setUser}\n      user={user}\n      addLikes={addLikes}\n      newMessage={newMessage}\n      setNewMessage={setNewMessage}\n    />\n  );\n}\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatFact.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatsHeader.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Animal.js",["150","151","152"],[],"import React, {useState} from 'react'\nimport Paw from '../images/paw.png'\nimport AddComment from './AddComment'\nimport ShareButton from './ShareButton'\nimport styled from 'styled-components'\n\nexport default function Animal({animal, \n  likeButtonStyle, \n  handleClick, \n  likesFunction, \n  showCom,\n   showComments, \n   setAnimals,\n   setUser, user, addLikes,\n   newMessage, \n   setNewMessage\n  }) {\n\n    const { id, name, image, hobbies, breed, likes, comments } = animal;\n  const [isLiked, setIsLiked] = useState(likes.some((like) => like.user_id === user.id));\n\n  function handleClick() {\n    const userLikes = likes.filter((like) => like.user_id === user.id);\n    if (userLikes.length === 0) {\n      const newLikes = [...likes, { user_id: user.id }];\n      setIsLiked(true);\n      const updatedAnimal = { ...animal, likes: newLikes };\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(updatedAnimal),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          addLikes(data);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      const likeIndex = likes.findIndex((like) => like.user_id === user.id);\n      const newLikes = [\n        ...likes.slice(0, likeIndex),\n        ...likes.slice(likeIndex + 1),\n      ];\n      setIsLiked(false);\n      const updatedAnimal = { ...animal, likes: newLikes };\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(updatedAnimal),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          addLikes(data);\n        })\n        .catch((error) => console.log(error));\n    }\n  }\n\n  \n  return (\n    <AnimalDiv>\n      <AnimalImage src={image} alt={name} />\n      <AnimalData>\n        <AnimalName>{name}</AnimalName>\n        <AnimalBreed> {breed}</AnimalBreed>\n      </AnimalData>\n      <AnimalHobbies><strong>{name}</strong> likes {hobbies}</AnimalHobbies>\n      <LineDiv>\n        <Line />\n      </LineDiv>\n      <LikeCommentShare>\n        <AnimalLikes style={likeButtonStyle} onClick={handleClick}>\n          <PawImg src={Paw} alt=\"paw\" />\n          {likes.length} {likesFunction()}\n        </AnimalLikes>\n        <button onClick={showCom} className=\"btn-comments\">\n          {comments && comments.length}{\" \"}\n          {comments && comments.length === 1 ? \"Comment\" : \"Comments\"}\n        </button>\n        <ShareButton animal={animal} />\n      </LikeCommentShare>\n      <br />\n      {showComments ? (\n        <AddComment\n          key={animal.image}\n          setAnimals={setAnimals}\n          animal={animal}\n          setUser={setUser}\n          newMessage={newMessage}\n          setNewMessage={setNewMessage}\n        />\n      ) : null}\n    </AnimalDiv>\n  );\n}\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\nconst AnimalDiv = styled.div`\n  background-color: white;\n  margin-bottom:20px;\n  border: 1px solid rgb(233, 227, 227);\n  width: 500px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);\n  padding-bottom: 20px;\n  position: relative;\n  @media (max-width:600px) {\n    width:350px;\n    margin-top:40px;\n`;\n\nconst AnimalImage = styled.img`\n  width: 100%;\n  height: 290px;\n`;\n\nconst AnimalName = styled.h2`\n  padding-left: 20px;\n  color: rgb(224, 110, 182);\n`;\n\nconst AnimalBreed = styled.h4`\n  font-size: 18px;\n  padding-left: 20px;\n  color: rgb(178, 173, 178);\n`;\n\nconst LineDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst Line = styled.p`\n  border: 1px solid rgb(221, 217, 217);\n  width: 400px;\n  margin-bottom: 10px;\n`;\n\nconst AnimalHobbies = styled.p`\n  text-align: center;\n`;\n\nconst LikeCommentShare = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-top: 5px;\n`;\n\nconst AnimalLikes = styled.button`\n  text-align: center;\n  border: 2px solid rgb(150, 144, 144);\n  padding: 3px 5px;\n  border-radius: 5px;\n  font-weight: bold;\n`;\n\nconst PawImg = styled.img \n`width:20px;\nmargin-right:3px;`\n\nconst AnimalData = styled.div `\ndisplay:flex;\nalign-items: center;\njustify-content: space-between;\nmargin-right:30px;\nmargin-top:10px;\nmargin-bottom:10px;\n`;","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AddComment.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ShareButton.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js",["153","154","155","156","157","158","159","160"],[],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport \"./CommentAndReplies.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { CableContext } from \"./CableContext\";\nimport ChatModal from \"./ChatModal\";\n\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { TooltipProps, tooltipClasses } from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\n\nimport createChatChannel from '../javascript/channels/chat_channel'\nimport ChatWindowsContext from './ChatWindowsContext';\n\n\n\nconst HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: \"12px\",\n    border: \"1px solid #dadde9\",\n  },\n}));\n\nexport default function CommentAndReplyForm({\n  handleCommentChange,\n  handleCommentSubmit,\n  animal,\n  setAnimals,\n  likeComments,\n  likeComment,\n  showCommentReplies,\n  showReply,\n  newReply,\n  handleReplyChange,\n  handleReplySubmit,\n  newComment,\n  handleCommentDelete,\n  user_id,\n  setUser,\n  newMessage, \n  setNewMessage\n}) {\n  const { user } = useContext(UserContext);\n  const userImage = localStorage.getItem(\"userImage\");\n\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const handleChatButtonClick = (author, shouldOpen, isSendButton, message) => {\n    if (shouldOpen) {\n      setSelectedAuthor(author);\n      setShowChatModal({ show: true, position: \"fixed\" });\n    } else if (!isSendButton) {\n      setShowChatModal(false);\n    }\n    if (newMessage) {\n      setNewMessage(null);\n    } else if (message && !showChatModal.show) {\n      setNewMessage(message);\n    }\n  };\n  \nconst handleCloseChatModal = () => {\n  console.log(\"handleCloseChatModal called\");\n  setShowChatModal(false);\n};\n  const { cable } = useContext(CableContext);\n  \n  useEffect(() => {\n    if (cable && Object.keys(commentAuthors).length > 0) {\n      const chatChannel = createChatChannel(\n        (data) => {\n          if (data.user_id !== user.id) {\n            handleChatButtonClick({\n              id: data.user_id,\n              full_name: commentAuthors[data.user_id],\n            }, true);\n          }\n        },\n        user.id\n      );\n  \n      return () => {\n        cable.subscriptions.remove(chatChannel);\n      };\n    }\n  }, [cable, user, commentAuthors]);\n  \n  \n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const authors = {};\n    users.forEach((user) => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors);\n  }, [users]);\n\n\n  // Generate unique IDs for each comment\n  const generateCommentId = (index) => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = (commentIndex) =>\n    `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) =>\n    `comment-${commentIndex}-reply-${replyIndex}`;\n\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true);\n  }\n\n  return (\n    <form onSubmit={(event) => handleCommentSubmit(event, user)}>\n      {/* Map over the comments in the `animal` object and render a `CommentsList` component for each comment */}\n      {animal.comments &&\n        animal.comments?.map((comment, commentIndex) => (\n          <div key={generateCommentId(commentIndex)}>\n            <div className=\"imgAuthor\">\n              {/* <div className='author'>\n                {userImage && (<img className=\"commentator\" src={userImage} alt=\"User\"/>)}   \n                </div> */}\n              <div\n                className=\"comments-list\"\n                animal={animal}\n                setAnimals={setAnimals}\n              >\n                <div\n                  className=\"commentAuthor\"\n                  onClick={() => handleCommentAuthorClick(comment.user_id)}\n                >\n                  <HtmlTooltip\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\">\n                          Send a message to{\" \"}\n                          {commentAuthors[comment.user_id] ||\n                            `User ${comment.user_id}`}\n                        </Typography>\n                        <button\n  onClick={() => {\n    handleChatButtonClick(\n      {\n        id: comment.user_id,\n        full_name: commentAuthors[comment.user_id],\n      },\n      true,\n      true\n    );\n  }}\n>\n  Chat\n</button>\n\n                      </React.Fragment>\n                    }\n                  >\n                    <Button>\n                      {commentAuthors[comment.user_id] ||\n                        `User ${comment.user_id}`}\n                    </Button>\n                  </HtmlTooltip>\n                </div>\n                <div className=\"userImgComment\">{comment.comment}</div>\n              </div>\n            </div>\n            {showChatModal && user && selectedAuthor && (\n  <ChatModal\n    currentUser={user && { id: user.id }}\n    author={selectedAuthor && { id: selectedAuthor.id }}\n    handleClose={handleCloseChatModal}\n    position={showChatModal.position}\n    handleChatButtonClick={handleChatButtonClick}\n    newMessage={newMessage}\n    setNewMessage={setNewMessage}\n    show={showChatModal.show}\n  />\n)}\n\n\n            {/* {selectedUser && <UserDetails show={show} handleClose={handleClose} user_id={selectedUser} />} */}\n            <LikeReply\n              key={generateCommentLikeId(commentIndex)}\n              onClick={() => likeComments(commentIndex)}\n            >\n              {/* Display a heart icon depending on whether the comment has been liked */}\n              <div className=\"likeBtn\">\n                {likeComment ? \"♥\" : \"♡\"} {comment.likes} Like\n              </div>\n            </LikeReply>\n            <LikeReply onClick={(e) => showCommentReplies(commentIndex)}>\n              ↳ Reply\n            </LikeReply>\n            <LikeReply onClick={(e) => handleDelete(commentIndex)}>\n              {user_id === comment.user_id && <>&#9746; Delete</>}\n            </LikeReply>\n            <ul>\n              {comment.replies &&\n              Array.isArray(comment.replies) &&\n              comment.replies.length > 0\n                ? comment.replies.map((reply, replyIndex) => (\n                    <Replies\n                      key={generateCommentReplyId(commentIndex, replyIndex)}\n                    >\n                      {reply.reply}\n                    </Replies>\n                  ))\n                : null}\n            </ul>\n            {/* If `showReply[commentIndex]` is truthy, render a form for submitting a reply to the comment */}\n            {showReply[commentIndex] ? (\n              <CommentForm>\n                <TypeReply\n                  type=\"text\"\n                  value={newReply}\n                  onChange={handleReplyChange}\n                  placeholder=\"Write a reply...\"\n                />\n                <PostCommentBtn\n                  className=\"replyBtn\"\n                  type=\"submit\"\n                  onClick={(e) => handleReplySubmit(e, commentIndex)}\n                >\n                  Reply\n                </PostCommentBtn>\n              </CommentForm>\n            ) : null}\n          </div>\n        ))}\n\n      {/* If `showComment` is truthy and there is text on the textarea, render the new comment */}\n      {/* {showComment && newComment && <NewReplyLi key=\"new-comment\">{newComment}</NewReplyLi>} */}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n        />\n        <PostCommentBtn key=\"post-comment\" type=\"submit\">\n          Post\n        </PostCommentBtn>\n      </div>\n    </form>\n  );\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom: 5px;\n`;\n\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Chat.js",["161","162","163","164","165"],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CableContext.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatModal.js",["166"],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatWindowsManager.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatWindowsContext.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/chat_channel.js",["167"],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/consumer.js",[],[],{"ruleId":"168","severity":1,"message":"169","line":14,"column":28,"nodeType":"170","messageId":"171","endLine":14,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":1,"column":26,"nodeType":"170","messageId":"171","endLine":1,"endColumn":35},{"ruleId":"168","severity":1,"message":"172","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":18},{"ruleId":"168","severity":1,"message":"173","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":16,"column":6,"nodeType":"176","endLine":16,"endColumn":8,"suggestions":"177"},{"ruleId":"168","severity":1,"message":"178","line":9,"column":19,"nodeType":"170","messageId":"171","endLine":9,"endColumn":29},{"ruleId":"168","severity":1,"message":"179","line":19,"column":13,"nodeType":"170","messageId":"171","endLine":19,"endColumn":15},{"ruleId":"168","severity":1,"message":"180","line":20,"column":10,"nodeType":"170","messageId":"171","endLine":20,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":22,"column":12,"nodeType":"170","messageId":"183","endLine":22,"endColumn":23},{"ruleId":"168","severity":1,"message":"184","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":13},{"ruleId":"168","severity":1,"message":"185","line":15,"column":8,"nodeType":"170","messageId":"171","endLine":15,"endColumn":26},{"ruleId":"168","severity":1,"message":"186","line":51,"column":9,"nodeType":"170","messageId":"171","endLine":51,"endColumn":18},{"ruleId":"168","severity":1,"message":"187","line":55,"column":10,"nodeType":"170","messageId":"171","endLine":55,"endColumn":14},{"ruleId":"168","severity":1,"message":"188","line":56,"column":9,"nodeType":"170","messageId":"171","endLine":56,"endColumn":20},{"ruleId":"168","severity":1,"message":"189","line":57,"column":9,"nodeType":"170","messageId":"171","endLine":57,"endColumn":19},{"ruleId":"168","severity":1,"message":"190","line":58,"column":10,"nodeType":"170","messageId":"171","endLine":58,"endColumn":22},{"ruleId":"174","severity":1,"message":"191","line":100,"column":6,"nodeType":"176","endLine":100,"endColumn":35,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"193","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":25},{"ruleId":"168","severity":1,"message":"194","line":6,"column":24,"nodeType":"170","messageId":"171","endLine":6,"endColumn":39},{"ruleId":"168","severity":1,"message":"195","line":9,"column":23,"nodeType":"170","messageId":"171","endLine":9,"endColumn":37},{"ruleId":"168","severity":1,"message":"196","line":35,"column":9,"nodeType":"170","messageId":"171","endLine":35,"endColumn":30},{"ruleId":"174","severity":1,"message":"197","line":66,"column":8,"nodeType":"176","endLine":66,"endColumn":10,"suggestions":"198"},{"ruleId":"168","severity":1,"message":"199","line":9,"column":7,"nodeType":"170","messageId":"171","endLine":9,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CatSection' is defined but never used.","'ChatModal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAnimals'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'setIsLiked' is assigned a value but never used.","'id' is assigned a value but never used.","'isLiked' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","'Modal' is defined but never used.","'ChatWindowsContext' is defined but never used.","'userImage' is assigned a value but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleChatButtonClick'. Either include it or remove the dependency array.",["201"],"'createChatChannel' is defined but never used.","'setConversation' is assigned a value but never used.","'setChatChannel' is assigned a value but never used.","'handleReceivedMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'author.id', 'currentUser.id', 'handleReceivedMessage', and 'newMessage'. Either include them or remove the dependency array.",["202"],"'sendMessage' is assigned a value but never used.",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [setAnimals]",{"range":"209","text":"210"},"Update the dependencies array to be: [cable, user, commentAuthors, handleChatButtonClick]",{"range":"211","text":"212"},"Update the dependencies array to be: [author.id, currentUser.id, handleReceivedMessage, newMessage]",{"range":"213","text":"214"},[559,561],"[setAnimals]",[2868,2897],"[cable, user, commentAuthors, handleChatButtonClick]",[1819,1821],"[author.id, currentUser.id, handleReceivedMessage, newMessage]"]