[{"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/index.js":"1","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/App.js":"2","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Profile.js":"3","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Login.js":"4","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/SignUp.js":"5","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/Footer.js":"6","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Header.js":"7","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/contexts/UserContext.js":"8","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Content.js":"9","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalForm.js":"10","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalList.js":"11","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Search.js":"12","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatSection.js":"13","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js":"14","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatFact.js":"15","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatsHeader.js":"16","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Animal.js":"17","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AddComment.js":"18","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ShareButton.js":"19","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js":"20"},{"size":344,"mtime":1678575990690,"results":"21","hashOfConfig":"22"},{"size":2143,"mtime":1678991663257,"results":"23","hashOfConfig":"22"},{"size":5175,"mtime":1678658717036,"results":"24","hashOfConfig":"22"},{"size":3142,"mtime":1678657444597,"results":"25","hashOfConfig":"22"},{"size":4122,"mtime":1678657547858,"results":"26","hashOfConfig":"22"},{"size":457,"mtime":1677965164389,"results":"27","hashOfConfig":"22"},{"size":1958,"mtime":1678657613226,"results":"28","hashOfConfig":"22"},{"size":87,"mtime":1677965164390,"results":"29","hashOfConfig":"22"},{"size":1277,"mtime":1678657754548,"results":"30","hashOfConfig":"22"},{"size":3709,"mtime":1678656405785,"results":"31","hashOfConfig":"22"},{"size":1727,"mtime":1677965164389,"results":"32","hashOfConfig":"22"},{"size":1146,"mtime":1678040051668,"results":"33","hashOfConfig":"22"},{"size":1169,"mtime":1677965164389,"results":"34","hashOfConfig":"22"},{"size":1583,"mtime":1678658475245,"results":"35","hashOfConfig":"22"},{"size":412,"mtime":1677965164389,"results":"36","hashOfConfig":"22"},{"size":446,"mtime":1677965164389,"results":"37","hashOfConfig":"22"},{"size":4437,"mtime":1678658379903,"results":"38","hashOfConfig":"22"},{"size":5161,"mtime":1678984661958,"results":"39","hashOfConfig":"22"},{"size":973,"mtime":1677965164390,"results":"40","hashOfConfig":"22"},{"size":7053,"mtime":1678992052364,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tp4m0v",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/index.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/App.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Profile.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Login.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/SignUp.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/Footer.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Header.js",["108"],[],"import React from 'react'\nimport Search from './Search'\nimport Logo from '../images/logo.png'\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components'\nimport './Header.css'\n\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\nexport default function Header({ search, setSearch, setUser }) {\n  const { user = null } = useContext(UserContext); // provide a default value for user\n  const userImage = localStorage.getItem(\"userImage\");\n\n  const handleLogout = () => {\n    fetch(\"http://localhost:3000/logout\", { method: 'DELETE' })\n      .then(() => {\n        setUser(null);\n      })\n      .catch((error) => console.error(error));\n  };\n  return (\n    <div className=\"header-div\">\n      <Link to=\"/\">\n        <LogoImg src={Logo} alt=\"logo\" />\n      </Link>\n      {user ? (\n        <>\n        <Search search={search} setSearch={setSearch} />\n          <div className='header-links'>\n        {/* {userImage && (\n            <img className=\"userImg\" src={userImage} alt=\"User\" />\n          )}            */}\n            <Link to=\"/profile\" className=\"nav-link\">\n              {user.full_name}\n            </Link>\n            <button onClick={handleLogout} className=\"logoutBtn\">\n              Log Out\n            </button>\n          </div>\n        </>\n      ) : (\n        <div className=\"header-links\">\n          <button className=\"navBtn\">\n            <Link to=\"/login\"  className=\"navLink\">\n              Login\n            </Link>\n          </button>\n          <button  className=\"navBtn\">\n            <Link to=\"/signup\"className=\"navLink\" >\n              Sign Up\n            </Link>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n  \n  \n}\n\n\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\n\nconst LogoImg = styled.img`\n  width:140px;\n  @media (max-width:600px) {\n    width:100px;\n    position: absolute;\n    top: 15px;\n    left: 0;\n  }\n`\n\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/contexts/UserContext.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Content.js",["109","110"],[],"import React, { useEffect} from 'react'\nimport AnimalList from './AnimalList'\nimport styled from 'styled-components'\nimport CatSection from '../cats/CatSection'\nimport AnimalForm from './AnimalForm'\nimport './Content.css'\n\n\nexport default function Content({search, animals, setAnimals, addNewAnimal, setUser}) {\n  \n  useEffect(() => {\n    fetch(\"http://localhost:3000/animals\")\n      .then((response) => response.json())\n      .then(setAnimals)\n      .catch((error) => console.error(error));\n  }, []);\n\n  const filteredAnimals = animals.filter(\n    (animal) =>\n      animal.name.toLowerCase().includes(search.toLowerCase()) ||\n      animal.breed.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"content-box\">\n      <AnimalForm addNewAnimal={addNewAnimal} animals={animals} setAnimals={setAnimals}/>\n      <ContentDiv >\n        <AnimalList \n            animals={filteredAnimals} \n            setAnimals={setAnimals}\n            setUser={setUser}/>\n        {/* <CatSection/> */}\n      </ContentDiv>\n    </div>\n  )\n}\n\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\nconst ContentDiv= styled.div \n`  display:grid;\ngrid-template-columns: auto  auto auto;\nmargin-top:30px;\nposition:relative;\n;\n\n`\n\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalForm.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalList.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Search.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatSection.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js",["111"],[],"import React, { useState } from \"react\";\nimport Animal from \"./Animal\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\n// The AnimalDetail component displays the detailed information about a specific animal\nexport default function AnimalDetail({ animal,setUser ,setAnimals}) {\n  const { likes} = animal;\n  const [isLiked, setIsLiked] = useState(false);\n  const [showComments, setshowComments] = useState(false);\n  const { user} = useContext(UserContext); \n\n  \n  // Determine the correct wording for the likes count (e.g. 1 like or 2 likes)\n  function likesFunction() {\n    return likes.length === 1 ? \"Like\" : \"Likes\";\n  }\n\n  function addLikes(updatedAnimal) {\n    setAnimals((prevAnimals) => {\n      return prevAnimals.map((prevAnimal) => {\n        if (prevAnimal.id === updatedAnimal.id) {\n          return { ...prevAnimal, likes: updatedAnimal.likes || [] };\n        } else {\n          return prevAnimal;\n        }\n      });\n    })}\n\n  function showCom() {\n    setshowComments((prev) => !prev);\n  }\n\n  // Set the styles for the like button based on whether the animal is liked or not\n  const likeButtonStyle = {\n    backgroundColor: isLiked ? \"red\" : \"white\",\n    color: isLiked ? \"white\" : \"red\",\n  };\n\n  return (\n    <Animal\n      animal={animal}\n      likeButtonStyle={likeButtonStyle}\n      likesFunction={likesFunction}\n      showCom={showCom}\n      showComments={showComments}\n      setShowComments={setshowComments}\n      setAnimals={setAnimals}\n      setUser={setUser}\n      user={user}\n      addLikes={addLikes}\n    />\n  );\n}\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatFact.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatsHeader.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Animal.js",["112","113","114"],[],"import React, {useState} from 'react'\nimport Paw from '../images/paw.png'\nimport AddComment from './AddComment'\nimport ShareButton from './ShareButton'\nimport styled from 'styled-components'\n\nexport default function Animal({animal, \n  likeButtonStyle, \n  handleClick, \n  likesFunction, \n  showCom,\n   showComments, \n   setAnimals,\n   setUser, user, addLikes\n  }) {\n\n    const { id, name, image, hobbies, breed, likes, comments } = animal;\n  const [isLiked, setIsLiked] = useState(likes.some((like) => like.user_id === user.id));\n\n  function handleClick() {\n    const userLikes = likes.filter((like) => like.user_id === user.id);\n    if (userLikes.length === 0) {\n      const newLikes = [...likes, { user_id: user.id }];\n      setIsLiked(true);\n      const updatedAnimal = { ...animal, likes: newLikes };\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(updatedAnimal),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          addLikes(data);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      const likeIndex = likes.findIndex((like) => like.user_id === user.id);\n      const newLikes = [\n        ...likes.slice(0, likeIndex),\n        ...likes.slice(likeIndex + 1),\n      ];\n      setIsLiked(false);\n      const updatedAnimal = { ...animal, likes: newLikes };\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(updatedAnimal),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          addLikes(data);\n        })\n        .catch((error) => console.log(error));\n    }\n  }\n\n  \n  return (\n    <AnimalDiv>\n      <AnimalImage src={image} alt={name} />\n      <AnimalData>\n        <AnimalName>{name}</AnimalName>\n        <AnimalBreed> {breed}</AnimalBreed>\n      </AnimalData>\n      <AnimalHobbies><strong>{name}</strong> likes {hobbies}</AnimalHobbies>\n      <LineDiv>\n        <Line />\n      </LineDiv>\n      <LikeCommentShare>\n        <AnimalLikes style={likeButtonStyle} onClick={handleClick}>\n          <PawImg src={Paw} alt=\"paw\" />\n          {likes.length} {likesFunction()}\n        </AnimalLikes>\n        <button onClick={showCom} className=\"btn-comments\">\n          {comments && comments.length}{\" \"}\n          {comments && comments.length === 1 ? \"Comment\" : \"Comments\"}\n        </button>\n        <ShareButton animal={animal} />\n      </LikeCommentShare>\n      <br />\n      {showComments ? (\n        <AddComment\n          key={animal.image}\n          setAnimals={setAnimals}\n          animal={animal}\n          setUser={setUser}\n        />\n      ) : null}\n    </AnimalDiv>\n  );\n}\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\nconst AnimalDiv = styled.div`\n  background-color: white;\n  margin-bottom:20px;\n  border: 1px solid rgb(233, 227, 227);\n  width: 500px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);\n  padding-bottom: 20px;\n  position: relative;\n  @media (max-width:600px) {\n    width:350px;\n    margin-top:40px;\n`;\n\nconst AnimalImage = styled.img`\n  width: 100%;\n  height: 290px;\n`;\n\nconst AnimalName = styled.h2`\n  padding-left: 20px;\n  color: rgb(224, 110, 182);\n`;\n\nconst AnimalBreed = styled.h4`\n  font-size: 18px;\n  padding-left: 20px;\n  color: rgb(178, 173, 178);\n`;\n\nconst LineDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst Line = styled.p`\n  border: 1px solid rgb(221, 217, 217);\n  width: 400px;\n  margin-bottom: 10px;\n`;\n\nconst AnimalHobbies = styled.p`\n  text-align: center;\n`;\n\nconst LikeCommentShare = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-top: 5px;\n`;\n\nconst AnimalLikes = styled.button`\n  text-align: center;\n  border: 2px solid rgb(150, 144, 144);\n  padding: 3px 5px;\n  border-radius: 5px;\n  font-weight: bold;\n`;\n\nconst PawImg = styled.img \n`width:20px;\nmargin-right:3px;`\n\nconst AnimalData = styled.div `\ndisplay:flex;\nalign-items: center;\njustify-content: space-between;\nmargin-right:30px;\nmargin-top:10px;\nmargin-bottom:10px;\n`;","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AddComment.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ShareButton.js",[],[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js",["115","116","117"],[],"import React,{ useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport './CommentAndReplies.css'\nimport Modal from 'react-bootstrap/Modal';\n\n\nexport default function CommentAndReplyForm({\n  handleCommentChange,\n  handleCommentSubmit,\n  animal,\n  setAnimals,\n  likeComments,\n  likeComment,\n  showCommentReplies,\n  showReply,\n  newReply,\n  handleReplyChange,\n  handleReplySubmit,\n  newComment,\n  handleCommentDelete,\n  user_id,\n  setUser\n}) {\n  const { user} = useContext(UserContext)\n  const userImage = localStorage.getItem(\"userImage\");\n\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n\n  useEffect(() => {\n    fetch('http://localhost:3000/users')\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n  \n  useEffect(() => {\n    const authors = {};\n    users.forEach((user) => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors)\n  }, [users]);\n  \n  // useEffect(() => {\n  //   const authors = {};\n  //   users.forEach((user) => {\n  //     authors[user.id] = user.full_name;\n  //   });\n  //   setReplyAuthors(authors)\n  // }, [users]);\n\n\n  // Generate unique IDs for each comment\n  const generateCommentId = (index) => `comment-${index}`;\n  \n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = (commentIndex) =>\n  `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) =>\n  `comment-${commentIndex}-reply-${replyIndex}`;\n  \n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n\n\n\n\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true)\n  }\n\n\n  // This component renders a form that allows the user to submit comments and replies\n  return (\n<form onSubmit={(event) => handleCommentSubmit(event, user)}>\n      {/* Map over the comments in the `animal` object and render a `CommentsList` component for each comment */}\n      {animal.comments &&\n        animal.comments?.map((comment, commentIndex) => (\n          <div key={generateCommentId(commentIndex)}>\n            <div className='imgAuthor'>\n                {/* <div className='author'>\n                {userImage && (<img className=\"commentator\" src={userImage} alt=\"User\"/>)}   \n                </div> */}\n                <div className=\"comments-list\" \n                  animal={animal} \n                  setAnimals={setAnimals}>\n                  <div className='commentAuthor' onClick={() => handleCommentAuthorClick(comment.user_id)}>\n                 \n\n                    {commentAuthors[comment.user_id] || `User ${comment.user_id}`} \n                  </div>\n                  <div className=\"userImgComment\">\n                    {comment.comment}\n                  </div>\n                </div>\n            </div>\n            <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n            <Modal.Header closeButton>\n            </Modal.Header>\n            <Modal.Body>\n              <div>\n                {/* <img src={user.image} alt={user.full_name} /> */}\n                <h2>Would you like to say \"Hi\" to {user.full_name}</h2>\n                <button>Send Message</button>\n              </div>\n            </Modal.Body>\n          </Modal>\n            {/* {selectedUser && <UserDetails show={show} handleClose={handleClose} user_id={selectedUser} />} */}\n\n            <LikeReply\n              key={generateCommentLikeId(commentIndex)}\n              onClick={() => likeComments(commentIndex)}\n            >\n              {/* Display a heart icon depending on whether the comment has been liked */}\n              <div className='likeBtn'>\n                {likeComment ? \"♥\" : \"♡\"} {comment.likes} Like\n              </div>\n            </LikeReply>\n            <LikeReply onClick={(e) => showCommentReplies(commentIndex)}>\n              ↳ Reply\n            </LikeReply>\n            <LikeReply onClick={(e) => handleDelete(commentIndex)}>\n                {user_id === comment.user_id && <>&#9746; Delete</>}\n            </LikeReply>\n            <ul>\n              {comment.replies && Array.isArray(comment.replies) && comment.replies.length > 0\n                ? comment.replies.map((reply, replyIndex) => (\n                    <Replies\n                      key={generateCommentReplyId(commentIndex, replyIndex)}\n                    >\n                     {reply.reply}\n                    </Replies>\n                  ))\n                : null}\n            </ul>\n\n            {/* If `showReply[commentIndex]` is truthy, render a form for submitting a reply to the comment */}\n            {showReply[commentIndex] ? (\n              <CommentForm>\n                <TypeReply\n                  type=\"text\"\n                  value={newReply}\n                  onChange={handleReplyChange}\n                  placeholder=\"Write a reply...\"\n                />\n                <PostCommentBtn\n                  className=\"replyBtn\"\n                  type=\"submit\"\n                  onClick={(e) => handleReplySubmit(e, commentIndex)}\n                >\n                  Reply\n                </PostCommentBtn>\n              </CommentForm>\n            ) : null}\n          </div>\n        ))}\n\n      {/* If `showComment` is truthy and there is text on the textarea, render the new comment */}\n      {/* {showComment && newComment && <NewReplyLi key=\"new-comment\">{newComment}</NewReplyLi>} */}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n        />\n        <PostCommentBtn key=\"post-comment\" type=\"submit\">\n          Post\n        </PostCommentBtn>\n      </div>\n    </form>\n  );\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n\n\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n\n`;\n\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom:5px;\n`;\n\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;",{"ruleId":"118","severity":1,"message":"119","line":13,"column":9,"nodeType":"120","messageId":"121","endLine":13,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":16,"column":6,"nodeType":"125","endLine":16,"endColumn":8,"suggestions":"126"},{"ruleId":"118","severity":1,"message":"127","line":9,"column":19,"nodeType":"120","messageId":"121","endLine":9,"endColumn":29},{"ruleId":"118","severity":1,"message":"128","line":17,"column":13,"nodeType":"120","messageId":"121","endLine":17,"endColumn":15},{"ruleId":"118","severity":1,"message":"129","line":18,"column":10,"nodeType":"120","messageId":"121","endLine":18,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":20,"column":12,"nodeType":"120","messageId":"132","endLine":20,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":27,"column":9,"nodeType":"120","messageId":"121","endLine":27,"endColumn":18},{"ruleId":"118","severity":1,"message":"133","line":33,"column":9,"nodeType":"120","messageId":"121","endLine":33,"endColumn":19},{"ruleId":"118","severity":1,"message":"134","line":34,"column":10,"nodeType":"120","messageId":"121","endLine":34,"endColumn":22},"no-unused-vars","'userImage' is assigned a value but never used.","Identifier","unusedVar","'CatSection' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAnimals'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'setIsLiked' is assigned a value but never used.","'id' is assigned a value but never used.","'isLiked' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","'handleShow' is assigned a value but never used.","'selectedUser' is assigned a value but never used.",{"desc":"136","fix":"137"},"Update the dependencies array to be: [setAnimals]",{"range":"138","text":"139"},[497,499],"[setAnimals]"]