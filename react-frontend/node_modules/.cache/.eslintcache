[{"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/index.js":"1","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/App.js":"2","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Profile.js":"3","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Login.js":"4","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/SignUp.js":"5","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/Footer.js":"6","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Header.js":"7","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/contexts/UserContext.js":"8","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Content.js":"9","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalForm.js":"10","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalList.js":"11","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Search.js":"12","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatSection.js":"13","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js":"14","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatFact.js":"15","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatsHeader.js":"16","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Animal.js":"17","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AddComment.js":"18","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ShareButton.js":"19","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js":"20","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Chat.js":"21","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CableContext.js":"22","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatModal.js":"23","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/chat_channel.js":"24","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/consumer.js":"25"},{"size":344,"mtime":1678575990690,"results":"26","hashOfConfig":"27"},{"size":2723,"mtime":1679675401565,"results":"28","hashOfConfig":"27"},{"size":5175,"mtime":1678658717036,"results":"29","hashOfConfig":"27"},{"size":3142,"mtime":1678657444597,"results":"30","hashOfConfig":"27"},{"size":4122,"mtime":1678657547858,"results":"31","hashOfConfig":"27"},{"size":457,"mtime":1677965164389,"results":"32","hashOfConfig":"27"},{"size":2649,"mtime":1679764418183,"results":"33","hashOfConfig":"27"},{"size":87,"mtime":1677965164390,"results":"34","hashOfConfig":"27"},{"size":1423,"mtime":1679177257601,"results":"35","hashOfConfig":"27"},{"size":3709,"mtime":1678656405785,"results":"36","hashOfConfig":"27"},{"size":1823,"mtime":1679177277881,"results":"37","hashOfConfig":"27"},{"size":1146,"mtime":1678040051668,"results":"38","hashOfConfig":"27"},{"size":1169,"mtime":1677965164389,"results":"39","hashOfConfig":"27"},{"size":425,"mtime":1679678641950,"results":"40","hashOfConfig":"27"},{"size":412,"mtime":1677965164389,"results":"41","hashOfConfig":"27"},{"size":446,"mtime":1677965164389,"results":"42","hashOfConfig":"27"},{"size":5235,"mtime":1679783420397,"results":"43","hashOfConfig":"27"},{"size":5595,"mtime":1679795708085,"results":"44","hashOfConfig":"27"},{"size":973,"mtime":1677965164390,"results":"45","hashOfConfig":"27"},{"size":9788,"mtime":1679795725144,"results":"46","hashOfConfig":"27"},{"size":3831,"mtime":1679171952172,"results":"47","hashOfConfig":"27"},{"size":766,"mtime":1679418514041,"results":"48","hashOfConfig":"27"},{"size":5025,"mtime":1679671494512,"results":"49","hashOfConfig":"27"},{"size":1551,"mtime":1679671506835,"results":"50","hashOfConfig":"27"},{"size":292,"mtime":1679352932406,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1tp4m0v",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"55"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"55"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/index.js",[],[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/App.js",["134"],[],"// useEffect(() => {\n//   if (user) {\n//     fetch(\"http://localhost:3000/conversations\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   }\n// }, [user]);\n\n  \n  import React, {useState, useEffect} from 'react';\n  import './App.css'\n  import Header from './components/header/Header'\n  import Content from './components/content/Content'\n  import Footer from './components/Footer'\n  import Login from './Login'\n  import SignUp from './SignUp'\n  import Profile from './Profile'\n  import {Routes, Route} from \"react-router-dom\"\n  import { UserContext } from './components/contexts/UserContext'\n  import ChatModal from './components/content/ChatModal'\n  import { CableProvider } from './components/content/CableContext';\n\n\nexport default function App() {\n  const [animals, setAnimals] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [newMessage, setNewMessage] = useState(null);\n\n  \n  function addNewAnimal(newAnimal) {\n    setAnimals([newAnimal, ...animals]);\n  }\n\n\n\n  return (\n    <CableProvider>\n\n    <UserContext.Provider value={{ user, setUser }} >\n      <div className=\"app\">\n        \n        <Routes>\n          <Route\n            path=\"/login\"\n            element={<Login setUser={setUser} />}\n          />\n          <Route\n            path=\"/signup\"\n            element={<SignUp setUser={setUser} />}\n          />\n            <Route\n            path=\"/profile\"\n            element={<Profile setUser={setUser} />}/>\n          <Route\n            path=\"/\"\n            element={user ? (\n              <>\n              <Header \n                search={search} \n                setSearch={setSearch} \n                setUser={setUser}/>\n              <Content\n                search={search}\n                animals={animals}\n                setAnimals={setAnimals}\n                addNewAnimal={addNewAnimal}\n                setUser={setUser}\n                newMessage={newMessage}\n                setNewMessage={setNewMessage}\n              />\n              <ChatModal />\n              <Footer />\n              </>\n            ) : (\n              <div className=\"login-to-view\" >\n                <Header \n                    addNewAnimal={addNewAnimal} \n                    search={search} \n                    setSearch={setSearch} \n                    setUser={setUser}/>\n                <div className=\"error-msg\">You must be <br></br>logged in <br></br>to view this <br></br>content!</div>\n              </div>\n             \n            )}\n          />\n        </Routes>\n      </div>\n    </UserContext.Provider>\n    </CableProvider>\n  );\n}\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Profile.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/Login.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/SignUp.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/Footer.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Header.js",["135"],[],"import React, {useState, useEffect} from 'react'\nimport Search from './Search'\nimport Logo from '../images/logo.png'\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components'\nimport './Header.css'\nimport ChatModal from '../content/ChatModal'\n\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\nexport default function Header({ search, setSearch, setUser }) {\n  const { user = null } = useContext(UserContext); \n  const userImage = localStorage.getItem(\"userImage\");\n\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [hasReceivedMessage, setHasReceivedMessage] = useState(false);\n\n  const handleLogout = () => {\n    fetch(\"http://localhost:3000/logout\", { method: 'DELETE' })\n      .then(() => {\n        setUser(null);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const handleMessagesClick = () => {\n    \n        setShowChatModal(true);\n    setHasReceivedMessage(false); \n  };\n\n\n  return (\n    <div className=\"header-div\">\n      <Link to=\"/\">\n        <LogoImg src={Logo} alt=\"logo\" />\n      </Link>\n      {user ? (\n        <>\n          <Search search={search} setSearch={setSearch} />\n          <div className='header-links'>\n            {hasReceivedMessage && (\n  <div className='nav-link' onClick={handleMessagesClick}>\n    ✉️ Messages\n  </div>\n)}\n            {userImage && (\n              <img className=\"userImg\" src={userImage} alt=\"User\" />\n            )}           \n            <Link to=\"/profile\" className=\"nav-link\">\n              {user.full_name}\n            </Link>\n            <button onClick={handleLogout} className=\"logoutBtn\">\n              Log Out\n            </button>\n          </div>\n        </>\n      ) : (\n        <div className=\"header-links\">\n          <button className=\"navBtn\">\n            <Link to=\"/login\"  className=\"navLink\">\n              Login\n            </Link>\n          </button>\n          <button  className=\"navBtn\">\n            <Link to=\"/signup\"className=\"navLink\" >\n              Sign Up\n            </Link>\n          </button>\n        </div>\n      )}\n      {showChatModal && user && (\n        <ChatModal\n          currentUser={{ id: user.id }}\n          handleClose={() => setShowChatModal(false)}\n          setHasReceivedMessage={setHasReceivedMessage} // pass the function to update the hasReceivedMessage state\n\n        />\n      )}\n    </div>\n  );\n}\n\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\n\nconst LogoImg = styled.img`\n  width:140px;\n  @media (max-width:600px) {\n    width:100px;\n    position: absolute;\n    top: 15px;\n    left: 0;\n  }\n`\n\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/contexts/UserContext.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Content.js",["136","137","138"],[],"import React, { useEffect} from 'react'\nimport AnimalList from './AnimalList'\nimport styled from 'styled-components'\nimport CatSection from '../cats/CatSection'\nimport AnimalForm from './AnimalForm'\nimport './Content.css'\nimport ChatModal from './ChatModal'\n\nexport default function Content({newMessage, setNewMessage, search, animals, setAnimals, addNewAnimal, setUser}) {\n  \n  useEffect(() => {\n    fetch(\"http://localhost:3000/animals\")\n      .then((response) => response.json())\n      .then(setAnimals)\n      .catch((error) => console.error(error));\n  }, []);\n\n  const filteredAnimals = animals.filter(\n    (animal) =>\n      animal.name.toLowerCase().includes(search.toLowerCase()) ||\n      animal.breed.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"content-box\">\n      <AnimalForm addNewAnimal={addNewAnimal} animals={animals} setAnimals={setAnimals}/>\n      <ContentDiv >\n        <AnimalList \n            animals={filteredAnimals} \n            setAnimals={setAnimals}\n            setUser={setUser}\n            newMessage={newMessage}\n            setNewMessage={setNewMessage}/>\n        {/* <CatSection/> */}\n     \n      </ContentDiv>\n    </div>\n  )\n}\n\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\nconst ContentDiv= styled.div \n`  display:grid;\ngrid-template-columns: auto  auto auto;\nmargin-top:30px;\nposition:relative;\n;\n\n`\n\n\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalForm.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalList.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/header/Search.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatSection.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatFact.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/cats/CatsHeader.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Animal.js",["139","140","141"],[],"import React, {useState, useEffect} from 'react'\nimport Paw from '../images/paw.png'\nimport AddComment from './AddComment'\nimport ShareButton from './ShareButton'\nimport styled from 'styled-components'\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport './Animal.css'\n\n\n\nexport default function Animal({animal,setAnimals,setUser, addLikes,newMessage,setNewMessage,}) {\n    \n    const { user} = useContext(UserContext); \n    const { id, name, image, hobbies, breed, likes, comments } = animal;\n    const [showComments, setshowComments] = useState(false);\n    const [isLiked, setIsLiked] = useState(false);\n  \n  function handleClick() {\n    const userLikes = animal.likes.filter((like) => like.user_id === user.id);\n    if (userLikes.length === 0) {\n      const newLikes = [...animal.likes, { user_id: user.id }];\n      setIsLiked(true);\n      const updatedAnimal = { ...animal, likes: newLikes };\n      setAnimals((prevAnimals) => {\n        return prevAnimals.map((prevAnimal) => {\n          if (prevAnimal.id === updatedAnimal.id) {\n            return updatedAnimal;\n          } else {\n            return prevAnimal;\n      }\n        });\n      });\n      addLikes(updatedAnimal);\n    } else {\n      const likeIndex = animal.likes.findIndex(\n        (like) => like.user_id === user.id\n      );\n      const newLikes = [\n        ...animal.likes.slice(0, likeIndex),\n        ...animal.likes.slice(likeIndex + 1),\n      ];\n      setIsLiked(false);\n      const updatedAnimal = { ...animal, likes: newLikes };\n          setAnimals((prevAnimals) => {\n            return prevAnimals.map((prevAnimal) => {\n              if (prevAnimal.id === updatedAnimal.id) {\n                return updatedAnimal;\n              } else {\n                return prevAnimal;\n              }\n            });\n          });\n      addLikes(updatedAnimal);\n    }\n    }\n    \n    function likesFunction() {\n      return likes.length === 1 ? \"Like\" : \"Likes\";\n    }\n  \n    async function addLikes(updatedAnimal) {\n      try {\n        const response = await fetch(`/animals/${updatedAnimal.id}/update_likes`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ user_id: user.id }),\n        });\n    \n        if (!response.ok) {\n          throw new Error(`Request failed with status code ${response.status}`);\n        }\n    \n        const data = await response.json();\n        const { likes_count } = data;\n    \n        setAnimals((prevAnimals) => {\n          return prevAnimals.map((prevAnimal) => {\n            if (prevAnimal.id === updatedAnimal.id) {\n              return { ...prevAnimal, likes: Array(likes_count).fill({ user_id: user.id }) };\n            } else {\n              return prevAnimal;\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error updating likes:', error);\n      }\n    }\n  \n  \n    function showCom() {\n      setshowComments((prev) => !prev);\n    }\n  \n  \n    const likeButtonStyle = {\n      backgroundColor: isLiked ? \"red\" : \"white\",\n      color: isLiked ? \"white\" : \"red\",\n    };\n\n\n  return (\n    <div className=\"animalDiv\">\n      <img className=\"animalImg\" src={image} alt={name} />\n      <AnimalData>\n        <AnimalName>{name}</AnimalName>\n        <AnimalBreed> {breed}</AnimalBreed>\n      </AnimalData>\n      <AnimalHobbies><strong>{name}</strong> likes {hobbies}</AnimalHobbies>\n      <LineDiv>\n        <Line />\n      </LineDiv>\n      <LikeCommentShare>\n        <div className=\"animalLikes\" style={likeButtonStyle} onClick={handleClick}>\n          <PawImg src={Paw} alt=\"paw\" />\n          {likes.length} {likesFunction()}\n        </div>\n        <button onClick={showCom} className=\"btn-comments\">\n          {comments && comments.length}{\" \"}\n          {comments && comments.length === 1 ? \"Comment\" : \"Comments\"}\n        </button>\n        <ShareButton animal={animal} />\n      </LikeCommentShare>\n      <br />\n      {showComments ? (\n        <AddComment\n          key={animal.image}\n          setAnimals={setAnimals}\n          animal={animal}\n          setUser={setUser}\n          newMessage={newMessage}\n          setNewMessage={setNewMessage}\n          handleClick={handleClick}\n        />\n      ) : null}\n    </div>\n  );\n}\n/*******************************\n*   STYLED COMPONENTS          *\n*******************************/\n\nconst AnimalName = styled.h2`\n  padding-left: 20px;\n  color: rgb(224, 110, 182);\n`;\n\nconst AnimalBreed = styled.h4`\n  font-size: 18px;\n  padding-left: 20px;\n  color: rgb(178, 173, 178);\n`;\n\nconst LineDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst Line = styled.p`\n  border: 1px solid rgb(221, 217, 217);\n  width: 400px;\n  margin-bottom: 10px;\n`;\n\nconst AnimalHobbies = styled.p`\n  text-align: center;\n`;\n\nconst LikeCommentShare = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-top: 5px;\n`;\n\nconst PawImg = styled.img \n`width:20px;\nmargin-right:3px;`\n\nconst AnimalData = styled.div `\ndisplay:flex;\nalign-items: center;\njustify-content: space-between;\nmargin-right:30px;\nmargin-top:10px;\nmargin-bottom:10px;\n`;","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AddComment.js",["142"],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ShareButton.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js",["143","144","145","146"],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Chat.js",["147","148","149","150","151"],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CableContext.js",[],[],"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatModal.js",["152"],[],"import React, { useState, useEffect , useCallback} from \"react\";\nimport createChatChannel from \"../javascript/channels/chat_channel\";\nimport \"./ChatModal.css\";\n\n\nconst ChatModal = ({\n  currentUser,\n  author,\n  handleClose,\n  handleChatButtonClick,\n  newMessage,\n  setNewMessage,\n  show\n}) => {\n  \n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [chatChannel, setChatChannel] = useState(null);\n\n\n  \n  const handleReceivedMessage = useCallback((message) => {\n    console.log(\"Received message:\", message);\n    if (message.receiver_id === currentUser.id) {\n      setMessages((prevMessages) => {\n        const messageExists = prevMessages.some(\n          (msg) => msg.messageId === message.messageId\n        );\n  \n        if (!messageExists) {\n          const receivedMessage = {\n            ...message,\n            messageId: Date.now() + Math.random(),\n          };\n  \n          handleChatButtonClick(author, true, false, receivedMessage);\n          return [...prevMessages, receivedMessage];\n        } else {\n          return prevMessages;\n        }\n      });\n    }\n  }, [currentUser, author, handleChatButtonClick]);\n  \n    \n    \n    useEffect(() => {\n      if (newMessage) {\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\n      }\n    }, [newMessage]);\n    \n    useEffect(() => {\n      if (currentUser?.id && author?.id) {\n        const channel = createChatChannel(handleReceivedMessage, currentUser.id, author.id);\n        setChatChannel(channel);\n        if (newMessage) {\n          channel.sendMessage(newMessage.content, currentUser?.id, author?.id);\n        }\n    \n        // Return a cleanup function to unsubscribe when the component is unmounted\n        return () => {\n          channel.unsubscribe();\n        };\n      }\n    }, []);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSendMessage = useCallback((event) => {\n    if (inputValue.trim()) {\n      const newSentMessage = {\n        content: inputValue,\n        user_id: currentUser?.id,\n        messageId: Date.now() + Math.random(),\n      };\n      setMessages((prevMessages) => [...prevMessages, newSentMessage]);\n  \n      if (!chatChannel) {\n        const channel = createChatChannel(handleReceivedMessage, currentUser.id);\n        setChatChannel(channel);\n        channel.sendMessage(inputValue, currentUser?.id, author?.id);\n      } else {\n        chatChannel.sendMessage(inputValue, currentUser?.id, author?.id);\n      }\n  \n      setInputValue('');\n      console.log('New message sent:', newSentMessage.content);\n    }\n  }, [inputValue, currentUser, chatChannel, handleReceivedMessage, author]);\n  \n\n\n  return (\n    <>\n    {show && (\n\n      <section style={{ backgroundColor: \"#eee\" }} className=\"section\">\n        <div className=\"chatModal py-5\">\n          <div className=\"\">\n            <div className=\"\">\n              <div className=\"card\">\n                <div\n                  className=\"card-header d-flex justify-content-between align-items-center p-3\"\n                  style={{ borderTop: \"4px solid #ffa900\" }}\n                >\n                  <h5 className=\"mb-0\">Chat </h5>\n                  <button onClick={handleClose}>Close</button>\n                </div>\n                <div\n                  className=\"card-body\"\n                  data-mdb-perfect-scrollbar=\"true\"\n                  style={{ position: \"relative\", height: \"300px\" }}\n                >\n                  {/* <p>Message 1 </p> */}\n                  {messages.map((message) => (\n                    <div\n                      key={message.messageId}\n                      className={\n                        message.user_id === currentUser.id\n                          ? \"currentUserMessage\"\n                          : \"authorMessage\"\n                      }\n                    >\n                      <p> {message.content}</p>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"card-footer text-muted d-flex justify-content-start align-items-center p-3\">\n                  <div className=\"input-group mb-0\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Type message\"\n                      aria-label=\"Recipient's username\"\n                      aria-describedby=\"button-addon2\"\n                      value={inputValue}\n                      onChange={handleInputChange}\n                    />\n                    <button\n                      className=\"btn btn-warning\"\n                      type=\"button\"\n                      style={{ paddingTop: \".55rem\" }}\n                      onClick={handleSendMessage}\n                    >\n                      Send\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )}\n    </>\n  );\n};\n\nexport default ChatModal;\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/chat_channel.js",["153"],[],"import { createConsumer } from '@rails/actioncable';\n\nconst getWebSocketURL = () => {\n  return 'ws://localhost:3000/cable';\n};\n\nconst consumer = createConsumer(getWebSocketURL());\n\nconst sendMessage = (channel, content, user_id, receiver_id) => {\n  channel.perform('send_message', { content, user_id, receiver_id });\n};\n\n\nconst createChatChannel = (receivedMessageCallback, user_id, receiver_id) => {\n  console.log('Creating chat channel');\n  \n  const channel = consumer.subscriptions.create(\n    {\n      channel: 'ChatChannel',\n      user_id: user_id,\n      receiver_id: receiver_id\n    },\n    {\n      connected() {\n        console.log('Connected to chat channel');\n      },\n\n      disconnected() {\n        console.log('Disconnected from chat channel');\n      },\n\n      received(data) {\n        console.log(\"Received data:\", data);\n        if (data.message && data.message.trim() !== \"\") {\n          receivedMessageCallback({\n            content: data.message.trim(),\n            user_id: data.user_id,\n            receiver_id: data.receiver_id,\n          });\n        } else {\n          console.warn(\"Received empty message or message is not defined\");\n        }\n      },\n      \n\n      send_message(content, user_id, receiver_id) {\n        this.perform('send_message', { content, user_id, receiver_id });\n      },\n    }\n  );\n\n  return {\n    sendMessage: (content, user_id, receiver_id) => channel.send_message(content, user_id, receiver_id),\n    unsubscribe: () => consumer.subscriptions.remove(channel),\n\n  };\n};\n\n\nexport default createChatChannel;\n","/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/consumer.js",[],[],{"ruleId":"154","severity":1,"message":"155","line":14,"column":28,"nodeType":"156","messageId":"157","endLine":14,"endColumn":37},{"ruleId":"154","severity":1,"message":"155","line":1,"column":26,"nodeType":"156","messageId":"157","endLine":1,"endColumn":35},{"ruleId":"154","severity":1,"message":"158","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":18},{"ruleId":"154","severity":1,"message":"159","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":16,"column":6,"nodeType":"162","endLine":16,"endColumn":8,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":26,"nodeType":"156","messageId":"157","endLine":1,"endColumn":35},{"ruleId":"154","severity":1,"message":"164","line":15,"column":13,"nodeType":"156","messageId":"157","endLine":15,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":62,"column":20,"nodeType":"156","messageId":"167","endLine":62,"endColumn":28},{"ruleId":"154","severity":1,"message":"168","line":10,"column":23,"nodeType":"156","messageId":"157","endLine":10,"endColumn":37},{"ruleId":"154","severity":1,"message":"169","line":46,"column":9,"nodeType":"156","messageId":"157","endLine":46,"endColumn":18},{"ruleId":"154","severity":1,"message":"170","line":50,"column":10,"nodeType":"156","messageId":"157","endLine":50,"endColumn":14},{"ruleId":"154","severity":1,"message":"171","line":51,"column":10,"nodeType":"156","messageId":"157","endLine":51,"endColumn":22},{"ruleId":"160","severity":1,"message":"172","line":93,"column":6,"nodeType":"162","endLine":93,"endColumn":35,"suggestions":"173"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"174","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":25},{"ruleId":"154","severity":1,"message":"175","line":6,"column":24,"nodeType":"156","messageId":"157","endLine":6,"endColumn":39},{"ruleId":"154","severity":1,"message":"176","line":9,"column":23,"nodeType":"156","messageId":"157","endLine":9,"endColumn":37},{"ruleId":"154","severity":1,"message":"177","line":35,"column":9,"nodeType":"156","messageId":"157","endLine":35,"endColumn":30},{"ruleId":"160","severity":1,"message":"178","line":66,"column":8,"nodeType":"162","endLine":66,"endColumn":10,"suggestions":"179"},{"ruleId":"154","severity":1,"message":"180","line":9,"column":7,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CatSection' is defined but never used.","'ChatModal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAnimals'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'id' is assigned a value but never used.","no-redeclare","'addLikes' is already defined.","redeclared","'setLikeComment' is assigned a value but never used.","'userImage' is assigned a value but never used.","'show' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleChatButtonClick'. Either include it or remove the dependency array.",["182"],"'createChatChannel' is defined but never used.","'setConversation' is assigned a value but never used.","'setChatChannel' is assigned a value but never used.","'handleReceivedMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'author.id', 'currentUser.id', 'handleReceivedMessage', and 'newMessage'. Either include them or remove the dependency array.",["183"],"'sendMessage' is assigned a value but never used.",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [setAnimals]",{"range":"190","text":"191"},"Update the dependencies array to be: [cable, user, commentAuthors, handleChatButtonClick]",{"range":"192","text":"193"},"Update the dependencies array to be: [author.id, currentUser.id, handleReceivedMessage, newMessage]",{"range":"194","text":"195"},[559,561],"[setAnimals]",[2710,2739],"[cable, user, commentAuthors, handleChatButtonClick]",[1819,1821],"[author.id, currentUser.id, handleReceivedMessage, newMessage]"]