{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport createChatChannel from '../javascript/channels/chat_channel';\nimport './ChatModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatModal = _ref => {\n  _s();\n  let {\n    currentUser,\n    author,\n    handleClose\n  } = _ref;\n  const [conversation, setConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [chatChannel, setChatChannel] = useState(null);\n\n  // useEffect(() => {\n  //   if (!conversation) {\n  //     // Create or fetch the conversation between the current user and the author\n  //     fetch('http://localhost:3000/conversations', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Accept': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         conversation: {\n  //           sender_id: currentUser.id,\n  //           receiver_id: author.id,\n  //         },\n  //       }),\n  //     })\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         setConversation(data);\n  //         const channel = createChatChannel(data.id, handleReceivedMessage);\n  //         setChatChannel(channel);\n  //       });\n  //   }\n  // }, [conversation, currentUser, author]);\n  const handleReceivedMessage = message => {\n    setMessages(prevMessages => [...prevMessages, message]);\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (inputValue.trim()) {\n      chatChannel.sendMessage(inputValue, currentUser.id, conversation.id);\n      setInputValue('');\n    }\n  };\n  const renderMessages = () => {\n    return messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.user_id === currentUser.id ? 'currentUserMessage' : 'authorMessage',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        backgroundColor: '#eee'\n      },\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatModal py-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header d-flex justify-content-between align-items-center p-3\",\n                style: {\n                  borderTop: '4px solid #ffa900'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-0\",\n                  children: \"Messages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleClose,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                \"data-mdb-perfect-scrollbar\": \"true\",\n                style: {\n                  position: 'relative',\n                  height: '300px'\n                },\n                children: renderMessages()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-footer text-muted d-flex justify-content-start align-items-center p-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    placeholder: \"Type message\",\n                    \"aria-label\": \"Recipient's username\",\n                    \"aria-describedby\": \"button-addon2\",\n                    value: inputValue,\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning\",\n                    type: \"button\",\n                    id: \"button-addon2\",\n                    style: {\n                      paddingTop: '.55rem'\n                    },\n                    onClick: handleSendMessage,\n                    children: \"Send Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChatModal, \"9zNK68R63Jh0Dvsz+cCNHKik23U=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","createChatChannel","ChatModal","currentUser","author","handleClose","conversation","setConversation","messages","setMessages","inputValue","setInputValue","chatChannel","setChatChannel","handleReceivedMessage","message","prevMessages","handleInputChange","event","target","value","handleSendMessage","trim","sendMessage","id","renderMessages","map","index","user_id","content","backgroundColor","borderTop","position","height","paddingTop"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport createChatChannel from '../javascript/channels/chat_channel';\nimport './ChatModal.css';\n\nconst ChatModal = ({ currentUser, author, handleClose }) => {\n  const [conversation, setConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [chatChannel, setChatChannel] = useState(null);\n\n  // useEffect(() => {\n  //   if (!conversation) {\n  //     // Create or fetch the conversation between the current user and the author\n  //     fetch('http://localhost:3000/conversations', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Accept': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         conversation: {\n  //           sender_id: currentUser.id,\n  //           receiver_id: author.id,\n  //         },\n  //       }),\n  //     })\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         setConversation(data);\n  //         const channel = createChatChannel(data.id, handleReceivedMessage);\n  //         setChatChannel(channel);\n  //       });\n  //   }\n  // }, [conversation, currentUser, author]);\n  const handleReceivedMessage = (message) => {\n    setMessages((prevMessages) => [...prevMessages, message]);\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (inputValue.trim()) {\n      chatChannel.sendMessage(inputValue, currentUser.id, conversation.id);\n      setInputValue('');\n    }\n  };\n\n  const renderMessages = () => {\n    return messages.map((message, index) => (\n      <div key={index} className={message.user_id === currentUser.id ? 'currentUserMessage' : 'authorMessage'}>\n        <p>{message.content}</p>\n      </div>\n    ));\n  };\n\n  return (\n    <>\n      <section style={{ backgroundColor: '#eee' }} className=\"section\">\n        <div className=\"chatModal py-5\">\n          <div className=\"\">\n            <div className=\"\">\n              <div className=\"card\">\n                <div\n                  className=\"card-header d-flex justify-content-between align-items-center p-3\"\n                  style={{ borderTop: '4px solid #ffa900' }}\n                >\n                  <h5 className=\"mb-0\">Messages</h5>\n                  <button onClick={handleClose}>Close</button>\n                </div>\n                <div\n                  className=\"card-body\"\n                  data-mdb-perfect-scrollbar=\"true\"\n                  style={{ position: 'relative', height: '300px' }}\n                >\n                  {renderMessages()}\n                </div>\n                <div className=\"card-footer text-muted d-flex justify-content-start align-items-center p-3\">\n                  <div className=\"input-group mb-0\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Type message\"\n                      aria-label=\"Recipient's username\"\n                      aria-describedby=\"button-addon2\"\n                      value={inputValue}\n                      onChange={handleInputChange}\n                    />\n                    <button\n                      className=\"btn btn-warning\"\n                      type=\"button\"\n                      id=\"button-addon2\"\n                      style={{ paddingTop: '.55rem' }}\n                      onClick={handleSendMessage}\n                    >\n                      Send Message\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ChatModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}