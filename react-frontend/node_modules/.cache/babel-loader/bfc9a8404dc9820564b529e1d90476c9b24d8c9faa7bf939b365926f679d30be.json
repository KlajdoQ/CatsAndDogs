{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/PawBook/react-frontend/src/components/content/CommentAndReplyForm.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentAndReplyForm(_ref) {\n  var _animal$comments;\n  let {\n    handleCommentChange,\n    handleCommentSubmit,\n    animal,\n    setAnimals,\n    likeComments,\n    likeComment,\n    showCommentReplies,\n    showReply,\n    newReply,\n    handleReplyChange,\n    handleReplySubmit,\n    showComment,\n    newComment\n  } = _ref;\n  // Generate unique IDs for each comment\n  const generateCommentId = index => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = commentIndex => `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) => `comment-${commentIndex}-reply-${replyIndex}`;\n  function deleteComment(commentId) {\n    fetch(`http://localhost:3000/comments/${commentId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      setAnimals(prevAnimals => prevAnimals.map(currentAnimal => {\n        if (currentAnimal.id === animal.id) {\n          return {\n            ...currentAnimal,\n            comments: currentAnimal.comments.filter(comment => comment.id !== commentId)\n          };\n        } else {\n          return currentAnimal;\n        }\n      }));\n    }).catch(error => console.error(error));\n  }\n\n  // This component renders a form that allows the user to submit comments and replies\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCommentSubmit,\n    children: [animal.comments && ((_animal$comments = animal.comments) === null || _animal$comments === void 0 ? void 0 : _animal$comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentsList, {\n        animal: animal,\n        setAnimals: setAnimals,\n        children: comment.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: () => likeComments(commentIndex),\n        children: [likeComment[commentIndex] ? \"♥\" : \"♡\", \" \", comment.likes, \" Like\"]\n      }, generateCommentLikeId(commentIndex), true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: e => showCommentReplies(commentIndex),\n        children: \"\\u21B3 Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: e => deleteComment(commentIndex),\n        children: \"\\u2612 Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array.isArray(comment.replies) && comment.replies.length > 0 ? comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(Replies, {\n          children: reply.reply\n        }, generateCommentReplyId(commentIndex, replyIndex), false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), showReply[commentIndex] ? /*#__PURE__*/_jsxDEV(CommentForm, {\n        children: [/*#__PURE__*/_jsxDEV(TypeReply, {\n          type: \"text\",\n          value: newReply,\n          onChange: handleReplyChange,\n          placeholder: \"Write a reply...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n          className: \"replyBtn\",\n          type: \"submit\",\n          onClick: e => handleReplySubmit(e, commentIndex),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this) : null]\n    }, generateCommentId(commentIndex), true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this))), showComment && newComment && /*#__PURE__*/_jsxDEV(NewReplyLi, {\n      children: newComment\n    }, \"new-comment\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleCommentChange,\n        placeholder: \"Write a comment...\",\n        className: \"type-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n        type: \"submit\",\n        children: \"Post\"\n      }, \"post-comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n_c = CommentAndReplyForm;\nconst CommentsList = styled.li`\n  list-style: none;\n  background-color: rgb(243, 243, 243);\n  height: auto;\n  padding: 10px;\n  margin: 20px;\n  display: flex;\n  align-items: center;\n  border-radius: 10px;\n  margin-bottom: -4px;\n`;\n_c2 = CommentsList;\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n_c3 = LikeReply;\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n_c4 = Replies;\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c5 = CommentForm;\nconst PostCommentBtn = styled.button`\n  width: 70px;\n  height: 40px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n`;\n_c6 = PostCommentBtn;\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n_c7 = TypeReply;\nconst NewReplyLi = styled.li`\n  list-style: none;\n`;\n_c8 = NewReplyLi;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"CommentAndReplyForm\");\n$RefreshReg$(_c2, \"CommentsList\");\n$RefreshReg$(_c3, \"LikeReply\");\n$RefreshReg$(_c4, \"Replies\");\n$RefreshReg$(_c5, \"CommentForm\");\n$RefreshReg$(_c6, \"PostCommentBtn\");\n$RefreshReg$(_c7, \"TypeReply\");\n$RefreshReg$(_c8, \"NewReplyLi\");","map":{"version":3,"names":["React","styled","CommentAndReplyForm","handleCommentChange","handleCommentSubmit","animal","setAnimals","likeComments","likeComment","showCommentReplies","showReply","newReply","handleReplyChange","handleReplySubmit","showComment","newComment","generateCommentId","index","generateCommentLikeId","commentIndex","generateCommentReplyId","replyIndex","deleteComment","commentId","fetch","method","headers","Accept","then","response","json","data","prevAnimals","map","currentAnimal","id","comments","filter","comment","catch","error","console","likes","e","Array","isArray","replies","length","reply","CommentsList","li","LikeReply","button","Replies","CommentForm","div","PostCommentBtn","TypeReply","textarea","NewReplyLi"],"sources":["/Users/kqasolli/Desktop/PawBook/react-frontend/src/components/content/CommentAndReplyForm.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function CommentAndReplyForm({\n  handleCommentChange,\n  handleCommentSubmit,\n  animal,\n  setAnimals,\n  likeComments,\n  likeComment,\n  showCommentReplies,\n  showReply,\n  newReply,\n  handleReplyChange,\n  handleReplySubmit,\n  showComment,\n  newComment,\n\n}) {\n  // Generate unique IDs for each comment\n  const generateCommentId = (index) => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = (commentIndex) =>\n    `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) =>\n    `comment-${commentIndex}-reply-${replyIndex}`;\n\n\n    function deleteComment(commentId) {\n      fetch(`http://localhost:3000/comments/${commentId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setAnimals((prevAnimals) =>\n            prevAnimals.map((currentAnimal) => {\n              if (currentAnimal.id === animal.id) {\n                return {\n                  ...currentAnimal,\n                  comments: currentAnimal.comments.filter(\n                    (comment) => comment.id !== commentId\n                  ),\n                };\n              } else {\n                return currentAnimal;\n              }\n            })\n          );\n        })\n        .catch((error) => console.error(error));\n    }\n\n\n\n  // This component renders a form that allows the user to submit comments and replies\n  return (\n    <form onSubmit={handleCommentSubmit}>\n      {/* Map over the comments in the `animal` object and render a `CommentsList` component for each comment */}\n      {animal.comments &&\n        animal.comments?.map((comment, commentIndex) => (\n          <div key={generateCommentId(commentIndex)}>\n            <CommentsList animal={animal} setAnimals={setAnimals}>\n              {comment.comment}\n            </CommentsList>\n            <LikeReply\n              key={generateCommentLikeId(commentIndex)}\n              onClick={() => likeComments(commentIndex)}\n            >\n              {/* Display a heart icon depending on whether the comment has been liked */}\n              {likeComment[commentIndex] ? \"♥\" : \"♡\"} {comment.likes} Like\n            </LikeReply>\n            <LikeReply onClick={(e) => showCommentReplies(commentIndex)}>\n              ↳ Reply\n            </LikeReply>\n            <LikeReply onClick={(e) => deleteComment(commentIndex)}>\n            &#9746; Delete\n            </LikeReply>\n            <ul>\n              {Array.isArray(comment.replies) && comment.replies.length > 0\n                ? comment.replies.map((reply, replyIndex) => (\n                    <Replies\n                      key={generateCommentReplyId(commentIndex, replyIndex)}\n                    >\n                      {reply.reply}\n                    </Replies>\n                  ))\n                : null}\n            </ul>\n\n            {/* If `showReply[commentIndex]` is truthy, render a form for submitting a reply to the comment */}\n            {showReply[commentIndex] ? (\n              <CommentForm>\n                <TypeReply\n                  type=\"text\"\n                  value={newReply}\n                  onChange={handleReplyChange}\n                  placeholder=\"Write a reply...\"\n                />\n                <PostCommentBtn\n                  className=\"replyBtn\"\n                  type=\"submit\"\n                  onClick={(e) => handleReplySubmit(e, commentIndex)}\n                >\n                  Reply\n                </PostCommentBtn>\n              </CommentForm>\n            ) : null}\n          </div>\n        ))}\n      {/* If `showComment` is truthy and there is text on the textarea, render the new comment */}\n      {showComment && newComment && <NewReplyLi key=\"new-comment\">{newComment}</NewReplyLi>}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n        />\n        <PostCommentBtn key=\"post-comment\" type=\"submit\">\n          Post\n        </PostCommentBtn>\n      </div>\n    </form>\n  );\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\nconst CommentsList = styled.li`\n  list-style: none;\n  background-color: rgb(243, 243, 243);\n  height: auto;\n  padding: 10px;\n  margin: 20px;\n  display: flex;\n  align-items: center;\n  border-radius: 10px;\n  margin-bottom: -4px;\n`;\n\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PostCommentBtn = styled.button`\n  width: 70px;\n  height: 40px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n`;\n\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n\nconst NewReplyLi = styled.li`\n  list-style: none;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}