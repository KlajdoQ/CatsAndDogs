{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport \"./CommentAndReplies.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { CableContext } from \"./CableContext\";\nimport ChatModal from \"./ChatModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CommentAndReplyForm(_ref) {\n  _s();\n  var _animal$comments;\n  let {\n    handleCommentChange,\n    handleCommentSubmit,\n    animal,\n    setAnimals,\n    likeComments,\n    likeComment,\n    showCommentReplies,\n    showReply,\n    newReply,\n    handleReplyChange,\n    handleReplySubmit,\n    newComment,\n    handleCommentDelete,\n    user_id,\n    setUser\n  } = _ref;\n  const {\n    user\n  } = useContext(UserContext);\n  const userImage = localStorage.getItem(\"userImage\");\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showChatModal, setShowChatModal] = useState(false);\n  const handleChatButtonClick = () => {\n    setShowChatModal(true);\n  };\n  const {\n    cable\n  } = useContext(CableContext);\n  useEffect(() => {\n    if (cable) {\n      const chatChannel = cable.subscriptions.create(\"ChatChannel\", {\n        received: data => {\n          // Handle the incoming message here\n        }\n      });\n      return () => {\n        cable.subscriptions.remove(chatChannel);\n      };\n    }\n  }, [cable]);\n\n  // function handleSendMessage() {\n  //   // Assuming you have the senderId and receiverId\n  //   cable.send({ message: 'Hi', sender_id: senderId, receiver_id: receiverId });\n  // }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\").then(response => response.json()).then(data => {\n      setUsers(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    const authors = {};\n    users.forEach(user => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors);\n  }, [users]);\n\n  // useEffect(() => {\n  //   const authors = {};\n  //   users.forEach((user) => {\n  //     authors[user.id] = user.full_name;\n  //   });\n  //   setReplyAuthors(authors)\n  // }, [users]);\n\n  // Generate unique IDs for each comment\n  const generateCommentId = index => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = commentIndex => `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) => `comment-${commentIndex}-reply-${replyIndex}`;\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true);\n  }\n\n  // This component renders a form that allows the user to submit comments and replies\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => handleCommentSubmit(event, user),\n    children: [animal.comments && ((_animal$comments = animal.comments) === null || _animal$comments === void 0 ? void 0 : _animal$comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgAuthor\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          animal: animal,\n          setAnimals: setAnimals,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentAuthor\",\n            onClick: () => handleCommentAuthorClick(comment.user_id),\n            children: commentAuthors[comment.user_id] || `User ${comment.user_id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userImgComment\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        backdrop: \"static\",\n        keyboard: false,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Would you like to say \\\"Hi\\\" to \", user.full_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleChatButtonClick,\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), showChatModal && /*#__PURE__*/_jsxDEV(ChatModal, {\n          currentUser: user,\n          author: selectedUser,\n          handleClose: () => setShowChatModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: () => likeComments(commentIndex),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likeBtn\",\n          children: [likeComment ? \"♥\" : \"♡\", \" \", comment.likes, \" Like\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)\n      }, generateCommentLikeId(commentIndex), false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: e => showCommentReplies(commentIndex),\n        children: \"\\u21B3 Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: e => handleDelete(commentIndex),\n        children: user_id === comment.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\u2612 Delete\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comment.replies && Array.isArray(comment.replies) && comment.replies.length > 0 ? comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(Replies, {\n          children: reply.reply\n        }, generateCommentReplyId(commentIndex, replyIndex), false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), showReply[commentIndex] ? /*#__PURE__*/_jsxDEV(CommentForm, {\n        children: [/*#__PURE__*/_jsxDEV(TypeReply, {\n          type: \"text\",\n          value: newReply,\n          onChange: handleReplyChange,\n          placeholder: \"Write a reply...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n          className: \"replyBtn\",\n          type: \"submit\",\n          onClick: e => handleReplySubmit(e, commentIndex),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }, this) : null]\n    }, generateCommentId(commentIndex), true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this))), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleCommentChange,\n        placeholder: \"Write a comment...\",\n        className: \"type-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n        type: \"submit\",\n        children: \"Post\"\n      }, \"post-comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n_s(CommentAndReplyForm, \"EKMsjrpAEogClLL9m0piVb1ts1A=\");\n_c = CommentAndReplyForm;\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n_c2 = LikeReply;\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n_c3 = Replies;\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c4 = CommentForm;\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom: 5px;\n`;\n_c5 = PostCommentBtn;\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n_c6 = TypeReply;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CommentAndReplyForm\");\n$RefreshReg$(_c2, \"LikeReply\");\n$RefreshReg$(_c3, \"Replies\");\n$RefreshReg$(_c4, \"CommentForm\");\n$RefreshReg$(_c5, \"PostCommentBtn\");\n$RefreshReg$(_c6, \"TypeReply\");","map":{"version":3,"names":["React","useState","useEffect","styled","useContext","UserContext","Modal","CableContext","ChatModal","CommentAndReplyForm","handleCommentChange","handleCommentSubmit","animal","setAnimals","likeComments","likeComment","showCommentReplies","showReply","newReply","handleReplyChange","handleReplySubmit","newComment","handleCommentDelete","user_id","setUser","user","userImage","localStorage","getItem","commentAuthors","setCommentAuthors","users","setUsers","show","setShow","handleClose","handleShow","selectedUser","setSelectedUser","showChatModal","setShowChatModal","handleChatButtonClick","cable","chatChannel","subscriptions","create","received","data","remove","fetch","then","response","json","catch","error","console","authors","forEach","id","full_name","generateCommentId","index","generateCommentLikeId","commentIndex","generateCommentReplyId","replyIndex","handleDelete","handleCommentAuthorClick","commentUserId","event","comments","map","comment","likes","e","replies","Array","isArray","length","reply","LikeReply","button","Replies","li","CommentForm","div","PostCommentBtn","TypeReply","textarea"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport \"./CommentAndReplies.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { CableContext } from \"./CableContext\";\nimport ChatModal from \"./ChatModal\";\n\nexport default function CommentAndReplyForm({\n  handleCommentChange,\n  handleCommentSubmit,\n  animal,\n  setAnimals,\n  likeComments,\n  likeComment,\n  showCommentReplies,\n  showReply,\n  newReply,\n  handleReplyChange,\n  handleReplySubmit,\n  newComment,\n  handleCommentDelete,\n  user_id,\n  setUser,\n}) {\n  const { user } = useContext(UserContext);\n  const userImage = localStorage.getItem(\"userImage\");\n\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showChatModal, setShowChatModal] = useState(false);\n\n  const handleChatButtonClick = () => {\n    setShowChatModal(true);\n  };\n\n  const { cable } = useContext(CableContext);\n  useEffect(() => {\n    if (cable) {\n      const chatChannel = cable.subscriptions.create(\"ChatChannel\", {\n        received: (data) => {\n          // Handle the incoming message here\n        },\n      });\n\n      return () => {\n        cable.subscriptions.remove(chatChannel);\n      };\n    }\n  }, [cable]);\n\n  // function handleSendMessage() {\n  //   // Assuming you have the senderId and receiverId\n  //   cable.send({ message: 'Hi', sender_id: senderId, receiver_id: receiverId });\n  // }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const authors = {};\n    users.forEach((user) => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors);\n  }, [users]);\n\n  // useEffect(() => {\n  //   const authors = {};\n  //   users.forEach((user) => {\n  //     authors[user.id] = user.full_name;\n  //   });\n  //   setReplyAuthors(authors)\n  // }, [users]);\n\n  // Generate unique IDs for each comment\n  const generateCommentId = (index) => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = (commentIndex) =>\n    `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) =>\n    `comment-${commentIndex}-reply-${replyIndex}`;\n\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true);\n  }\n\n  // This component renders a form that allows the user to submit comments and replies\n  return (\n    <form onSubmit={(event) => handleCommentSubmit(event, user)}>\n      {/* Map over the comments in the `animal` object and render a `CommentsList` component for each comment */}\n      {animal.comments &&\n        animal.comments?.map((comment, commentIndex) => (\n          <div key={generateCommentId(commentIndex)}>\n            <div className=\"imgAuthor\">\n              {/* <div className='author'>\n                {userImage && (<img className=\"commentator\" src={userImage} alt=\"User\"/>)}   \n                </div> */}\n              <div\n                className=\"comments-list\"\n                animal={animal}\n                setAnimals={setAnimals}\n              >\n                <div\n                  className=\"commentAuthor\"\n                  onClick={() => handleCommentAuthorClick(comment.user_id)}\n                >\n                  {commentAuthors[comment.user_id] || `User ${comment.user_id}`}\n                </div>\n                <div className=\"userImgComment\">{comment.comment}</div>\n              </div>\n            </div>\n            <Modal\n              show={show}\n              onHide={handleClose}\n              backdrop=\"static\"\n              keyboard={false}\n            >\n              <Modal.Header closeButton></Modal.Header>\n              <Modal.Body>\n                <div>\n                  {/* <img src={user.image} alt={user.full_name} /> */}\n                  <h2>Would you like to say \"Hi\" to {user.full_name}</h2>\n                  <button onClick={handleChatButtonClick}>Chat</button>\n                </div>\n              </Modal.Body>\n            {showChatModal && (\n              <ChatModal\n                currentUser={user}\n                author={selectedUser}\n                handleClose={() => setShowChatModal(false)}\n              />\n            )}\n            </Modal>\n\n            {/* {selectedUser && <UserDetails show={show} handleClose={handleClose} user_id={selectedUser} />} */}\n\n            <LikeReply\n              key={generateCommentLikeId(commentIndex)}\n              onClick={() => likeComments(commentIndex)}\n            >\n              {/* Display a heart icon depending on whether the comment has been liked */}\n              <div className=\"likeBtn\">\n                {likeComment ? \"♥\" : \"♡\"} {comment.likes} Like\n              </div>\n            </LikeReply>\n            <LikeReply onClick={(e) => showCommentReplies(commentIndex)}>\n              ↳ Reply\n            </LikeReply>\n            <LikeReply onClick={(e) => handleDelete(commentIndex)}>\n              {user_id === comment.user_id && <>&#9746; Delete</>}\n            </LikeReply>\n            <ul>\n              {comment.replies &&\n              Array.isArray(comment.replies) &&\n              comment.replies.length > 0\n                ? comment.replies.map((reply, replyIndex) => (\n                    <Replies\n                      key={generateCommentReplyId(commentIndex, replyIndex)}\n                    >\n                      {reply.reply}\n                    </Replies>\n                  ))\n                : null}\n            </ul>\n\n            {/* If `showReply[commentIndex]` is truthy, render a form for submitting a reply to the comment */}\n            {showReply[commentIndex] ? (\n              <CommentForm>\n                <TypeReply\n                  type=\"text\"\n                  value={newReply}\n                  onChange={handleReplyChange}\n                  placeholder=\"Write a reply...\"\n                />\n                <PostCommentBtn\n                  className=\"replyBtn\"\n                  type=\"submit\"\n                  onClick={(e) => handleReplySubmit(e, commentIndex)}\n                >\n                  Reply\n                </PostCommentBtn>\n              </CommentForm>\n            ) : null}\n          </div>\n        ))}\n\n      {/* If `showComment` is truthy and there is text on the textarea, render the new comment */}\n      {/* {showComment && newComment && <NewReplyLi key=\"new-comment\">{newComment}</NewReplyLi>} */}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n        />\n        <PostCommentBtn key=\"post-comment\" type=\"submit\">\n          Post\n        </PostCommentBtn>\n      </div>\n    </form>\n  );\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom: 5px;\n`;\n\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}