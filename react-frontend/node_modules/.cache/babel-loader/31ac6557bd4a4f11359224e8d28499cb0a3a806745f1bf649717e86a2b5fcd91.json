{"ast":null,"code":"import { createConsumer } from '@rails/actioncable';\nconst getWebSocketURL = () => {\n  return 'ws://localhost:3000/cable';\n};\nconst consumer = createConsumer(getWebSocketURL());\nconst sendMessage = (channel, content, user_id) => {\n  channel.perform('send_message', {\n    content,\n    user_id\n  });\n};\nconst createChatChannel = (receivedMessageCallback, user_id) => {\n  console.log('Creating chat channel');\n  console.log('Consumer:', consumer);\n  const channel = consumer.subscriptions.create({\n    channel: 'ChatChannel',\n    user_id: user_id\n  }, {\n    connected() {\n      console.log('Connected to chat channel');\n    },\n    disconnected() {\n      console.log('Disconnected from chat channel');\n    },\n    received(data) {\n      console.log('Received message:', data);\n      receivedMessageCallback(data);\n    }\n  });\n  console.log('Chat channel:', channel);\n  return (content, user_id) => sendMessage(channel, content, user_id);\n};\nexport default createChatChannel;","map":{"version":3,"names":["createConsumer","getWebSocketURL","consumer","sendMessage","channel","content","user_id","perform","createChatChannel","receivedMessageCallback","console","log","subscriptions","create","connected","disconnected","received","data"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/javascript/channels/chat_channel.js"],"sourcesContent":["import { createConsumer } from '@rails/actioncable';\n\nconst getWebSocketURL = () => {\n  return 'ws://localhost:3000/cable';\n};\n\nconst consumer = createConsumer(getWebSocketURL());\n\nconst sendMessage = (channel, content, user_id) => {\n  channel.perform('send_message', { content, user_id });\n};\n\nconst createChatChannel = (receivedMessageCallback, user_id) => {\n  console.log('Creating chat channel');\n  console.log('Consumer:', consumer);\n\n  const channel = consumer.subscriptions.create(\n    {\n      channel: 'ChatChannel',\n      user_id: user_id,\n    },\n    {\n      connected() {\n        console.log('Connected to chat channel');\n      },\n\n      disconnected() {\n        console.log('Disconnected from chat channel');\n      },\n\n      received(data) {\n        console.log('Received message:', data);\n        receivedMessageCallback(data);\n      },\n    }\n  );\n\n  console.log('Chat channel:', channel);\n\n  return (content, user_id) => sendMessage(channel, content, user_id);\n};\n\nexport default createChatChannel;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,oBAAoB;AAEnD,MAAMC,eAAe,GAAG,MAAM;EAC5B,OAAO,2BAA2B;AACpC,CAAC;AAED,MAAMC,QAAQ,GAAGF,cAAc,CAACC,eAAe,EAAE,CAAC;AAElD,MAAME,WAAW,GAAG,CAACC,OAAO,EAAEC,OAAO,EAAEC,OAAO,KAAK;EACjDF,OAAO,CAACG,OAAO,CAAC,cAAc,EAAE;IAAEF,OAAO;IAAEC;EAAQ,CAAC,CAAC;AACvD,CAAC;AAED,MAAME,iBAAiB,GAAG,CAACC,uBAAuB,EAAEH,OAAO,KAAK;EAC9DI,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAET,QAAQ,CAAC;EAElC,MAAME,OAAO,GAAGF,QAAQ,CAACU,aAAa,CAACC,MAAM,CAC3C;IACET,OAAO,EAAE,aAAa;IACtBE,OAAO,EAAEA;EACX,CAAC,EACD;IACEQ,SAAS,GAAG;MACVJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC;IAEDI,YAAY,GAAG;MACbL,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC;IAEDK,QAAQ,CAACC,IAAI,EAAE;MACbP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEM,IAAI,CAAC;MACtCR,uBAAuB,CAACQ,IAAI,CAAC;IAC/B;EACF,CAAC,CACF;EAEDP,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,OAAO,CAAC;EAErC,OAAO,CAACC,OAAO,EAAEC,OAAO,KAAKH,WAAW,CAACC,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;AACrE,CAAC;AAED,eAAeE,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}