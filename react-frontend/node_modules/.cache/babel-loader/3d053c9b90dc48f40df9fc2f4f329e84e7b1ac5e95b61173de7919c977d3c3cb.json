{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddComment(_ref) {\n  _s();\n  let {\n    animal,\n    setAnimals\n  } = _ref;\n  const [newComment, setNewComment] = useState(\"\");\n  function handleCommentChange(event) {\n    setNewComment(event.target.value);\n  }\n  function handleCommentSubmit(event) {\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        comments: [...animal.comments, [newComment]]\n      })\n    }).then(response => response.json()).then(updatedAnimals => {\n      const updatedAnimalsArray = animal.map(currentAnimals => {\n        if (currentAnimals.id === updatedAnimals.id) {\n          return updatedAnimals;\n        } else {\n          return currentAnimals;\n        }\n      });\n      setAnimals(updatedAnimalsArray);\n    });\n    setNewComment(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [animal.comments.map((comments, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comments\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)), newComment !== \"\" && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: newComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Add a comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: handleCommentChange,\n            placeholder: \"Write a comment...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AddComment, \"hdmU//CB++ZG3hy6Wzlv3cAh5aM=\");\n_c = AddComment;\nvar _c;\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["React","useState","AddComment","animal","setAnimals","newComment","setNewComment","handleCommentChange","event","target","value","handleCommentSubmit","fetch","id","method","headers","accept","body","JSON","stringify","comments","then","response","json","updatedAnimals","updatedAnimalsArray","map","currentAnimals","index"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function AddComment({animal, setAnimals}) {\n  const [newComment, setNewComment] = useState(\"\")\n\n  function handleCommentChange(event) {\n    setNewComment(event.target.value)\n  }\n\n  function handleCommentSubmit(event) {\n    \n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        comments: [...animal.comments, [newComment]]\n      })\n    })\n    .then(response => response.json())\n    .then(updatedAnimals => {\n        const updatedAnimalsArray = animal.map(currentAnimals => {\n            if(currentAnimals.id === updatedAnimals.id) {\n                return updatedAnimals\n            } else {\n                return currentAnimals\n            }\n        })\n        setAnimals(updatedAnimalsArray)\n    })\n    setNewComment(\"\")\n  }\n\n  return (\n    <div>\n        <ul>\n        {animal.comments.map((comments, index) => (\n      <li key={index}>{comments}</li>\n    ))}\n    {newComment !== \"\" && <li>{newComment}</li>}\n    <form onSubmit={handleCommentSubmit}>\n      <label>\n        Add a comment:\n        <input \n          type=\"text\" \n          value={newComment} \n          onChange={handleCommentChange} \n          placeholder=\"Write a comment...\"\n        />\n      </label>\n      <button type=\"submit\">Post</button>\n    </form>\n    </ul>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,eAAe,SAASC,UAAU,OAAuB;EAAA;EAAA,IAAtB;IAACC,MAAM;IAAEC;EAAU,CAAC;EACrD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASM,mBAAmB,CAACC,KAAK,EAAE;IAClCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC;EAEA,SAASC,mBAAmB,CAACH,KAAK,EAAE;IAElCI,KAAK,CAAE,iCAAgCT,MAAM,CAACU,EAAG,EAAC,EAAE;MAClDC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACV,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAE,CAAC,GAAGjB,MAAM,CAACiB,QAAQ,EAAE,CAACf,UAAU,CAAC;MAC7C,CAAC;IACH,CAAC,CAAC,CACDgB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,cAAc,IAAI;MACpB,MAAMC,mBAAmB,GAAGtB,MAAM,CAACuB,GAAG,CAACC,cAAc,IAAI;QACrD,IAAGA,cAAc,CAACd,EAAE,KAAKW,cAAc,CAACX,EAAE,EAAE;UACxC,OAAOW,cAAc;QACzB,CAAC,MAAM;UACH,OAAOG,cAAc;QACzB;MACJ,CAAC,CAAC;MACFvB,UAAU,CAACqB,mBAAmB,CAAC;IACnC,CAAC,CAAC;IACFnB,aAAa,CAAC,EAAE,CAAC;EACnB;EAEA,oBACE;IAAA,uBACI;MAAA,WACCH,MAAM,CAACiB,QAAQ,CAACM,GAAG,CAAC,CAACN,QAAQ,EAAEQ,KAAK,kBACvC;QAAA,UAAiBR;MAAQ,GAAhBQ,KAAK;QAAA;QAAA;QAAA;MAAA,QACf,CAAC,EACDvB,UAAU,KAAK,EAAE,iBAAI;QAAA,UAAKA;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3C;QAAM,QAAQ,EAAEM,mBAAoB;QAAA,wBAClC;UAAA,WAAO,gBAEL;YACE,IAAI,EAAC,MAAM;YACX,KAAK,EAAEN,UAAW;YAClB,QAAQ,EAAEE,mBAAoB;YAC9B,WAAW,EAAC;UAAoB;YAAA;YAAA;YAAA;UAAA,QAChC;QAAA;UAAA;UAAA;UAAA;QAAA,QACI,eACR;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACC;AAEV;AAAC,GAvDuBL,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}