{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddComment(_ref) {\n  _s();\n  let {\n    animal,\n    setAnimals\n  } = _ref;\n  const [newComment, setNewComment] = useState(\"\");\n  function handleCommentChange(event) {\n    setNewComment(event.target.value);\n  }\n  function handleCommentSubmit(event) {\n    event.preventDefault();\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        'accept': \"application/json\"\n      },\n      body: JSON.stringify({\n        comments: [...animal.comments, [, newComment]]\n      })\n    }).then(response => response.json()).then(updatedAnimal => {\n      const updatedAnimalsArray = animal.map(currentAnimal => {\n        if (currentAnimal.id === updatedAnimal.id) {\n          return updatedAnimal;\n        } else {\n          return currentAnimal;\n        }\n      });\n      setAnimals(updatedAnimalsArray);\n    });\n    setNewComment(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCommentSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Add a comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleCommentChange,\n        placeholder: \"Write a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(AddComment, \"hdmU//CB++ZG3hy6Wzlv3cAh5aM=\");\n_c = AddComment;\nvar _c;\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["React","useState","AddComment","animal","setAnimals","newComment","setNewComment","handleCommentChange","event","target","value","handleCommentSubmit","preventDefault","fetch","id","method","headers","body","JSON","stringify","comments","then","response","json","updatedAnimal","updatedAnimalsArray","map","currentAnimal"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function AddComment({animal, setAnimals}) {\n  const [newComment, setNewComment] = useState(\"\")\n\n  function handleCommentChange(event) {\n    setNewComment(event.target.value)\n  }\n\n  function handleCommentSubmit(event) {\n    event.preventDefault()\n\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        'accept': \"application/json\"\n      },\n      body: JSON.stringify({\n        comments: [\n          ...animal.comments,[\n          ,\n            newComment] \n        ]\n      })\n    })\n    .then(response => response.json())\n    .then(updatedAnimal => {\n        const updatedAnimalsArray = animal.map(currentAnimal => {\n            if(currentAnimal.id === updatedAnimal.id) {\n                return updatedAnimal\n            } else {\n                return currentAnimal\n            }\n        })\n        setAnimals(updatedAnimalsArray)\n    })\n    setNewComment(\"\")\n  }\n\n  return (\n    <form onSubmit={handleCommentSubmit}>\n      <label>\n        Add a comment:\n        <input \n          type=\"text\" \n          value={newComment} \n          onChange={handleCommentChange} \n          placeholder=\"Write a comment...\"\n        />\n      </label>\n      <button type=\"submit\">Post</button>\n    </form>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,eAAe,SAASC,UAAU,OAAuB;EAAA;EAAA,IAAtB;IAACC,MAAM;IAAEC;EAAU,CAAC;EACrD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASM,mBAAmB,CAACC,KAAK,EAAE;IAClCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC;EAEA,SAASC,mBAAmB,CAACH,KAAK,EAAE;IAClCA,KAAK,CAACI,cAAc,EAAE;IAEtBC,KAAK,CAAE,iCAAgCV,MAAM,CAACW,EAAG,EAAC,EAAE;MAClDC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAE,CACR,GAAGjB,MAAM,CAACiB,QAAQ,EAAC,GAEjBf,UAAU,CAAC;MAEjB,CAAC;IACH,CAAC,CAAC,CACDgB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,aAAa,IAAI;MACnB,MAAMC,mBAAmB,GAAGtB,MAAM,CAACuB,GAAG,CAACC,aAAa,IAAI;QACpD,IAAGA,aAAa,CAACb,EAAE,KAAKU,aAAa,CAACV,EAAE,EAAE;UACtC,OAAOU,aAAa;QACxB,CAAC,MAAM;UACH,OAAOG,aAAa;QACxB;MACJ,CAAC,CAAC;MACFvB,UAAU,CAACqB,mBAAmB,CAAC;IACnC,CAAC,CAAC;IACFnB,aAAa,CAAC,EAAE,CAAC;EACnB;EAEA,oBACE;IAAM,QAAQ,EAAEK,mBAAoB;IAAA,wBAClC;MAAA,WAAO,gBAEL;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEN,UAAW;QAClB,QAAQ,EAAEE,mBAAoB;QAC9B,WAAW,EAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAChC;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEX;AAAC,GApDuBL,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}