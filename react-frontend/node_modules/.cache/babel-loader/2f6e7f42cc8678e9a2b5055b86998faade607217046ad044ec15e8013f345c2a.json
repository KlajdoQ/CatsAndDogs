{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CableContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { createConsumer } from '@rails/actioncable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CableContext = /*#__PURE__*/createContext();\nconst CableProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cable, setCable] = useState(null);\n  const [receivedMessage, setReceivedMessage] = useState(null);\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n  };\n  useEffect(() => {\n    const cableConsumer = createConsumer('ws://localhost:3000/cable');\n    setCable(cableConsumer);\n    return () => cableConsumer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CableContext.Provider, {\n    value: {\n      cable,\n      receivedMessage,\n      handleReceivedMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CableProvider, \"KK1+LEAff8YEpv3s0Zz/ykFc0cg=\");\n_c = CableProvider;\nexport { CableContext, CableProvider };\nvar _c;\n$RefreshReg$(_c, \"CableProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","createConsumer","CableContext","CableProvider","children","cable","setCable","receivedMessage","setReceivedMessage","handleReceivedMessage","message","cableConsumer","disconnect"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CableContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { createConsumer } from '@rails/actioncable';\n\nconst CableContext = createContext();\n\nconst CableProvider = ({ children }) => {\n  const [cable, setCable] = useState(null);\n  const [receivedMessage, setReceivedMessage] = useState(null);\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n  };\n  \n  useEffect(() => {\n    const cableConsumer = createConsumer('ws://localhost:3000/cable');\n    setCable(cableConsumer);\n\n    return () => cableConsumer.disconnect();\n  }, []);\n\n  return (\n    <CableContext.Provider value={{ cable, receivedMessage, handleReceivedMessage }}>\n      {children}\n    </CableContext.Provider>\n  )\n}\n\nexport { CableContext, CableProvider };\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,cAAc,QAAQ,oBAAoB;AAAC;AAEpD,MAAMC,YAAY,gBAAGJ,aAAa,EAAE;AAEpC,MAAMK,aAAa,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAMU,qBAAqB,GAAIC,OAAO,IAAK;IACzCF,kBAAkB,CAACE,OAAO,CAAC;EAC7B,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAGV,cAAc,CAAC,2BAA2B,CAAC;IACjEK,QAAQ,CAACK,aAAa,CAAC;IAEvB,OAAO,MAAMA,aAAa,CAACC,UAAU,EAAE;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEP,KAAK;MAAEE,eAAe;MAAEE;IAAsB,CAAE;IAAA,UAC7EL;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAE5B,CAAC;AAAA,GAnBKD,aAAa;AAAA,KAAbA,aAAa;AAqBnB,SAASD,YAAY,EAAEC,aAAa;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}