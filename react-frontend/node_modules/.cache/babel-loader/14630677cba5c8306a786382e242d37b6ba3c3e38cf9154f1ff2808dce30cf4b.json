{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/Cats and Dogs copy/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import necessary components and libraries\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/header/Header';\nimport Content from './components/content/Content';\nimport Footer from './components/Footer';\nimport CatPictures from './components/header/CatPictures';\nimport DogPictures from './components/header/DogPictures';\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // initialize state for the list of animals and search query\n  const [animals, setAnimals] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  // Fetch the list of animals when the component is mounted\n  useEffect(() => {\n    fetch('http://localhost:3000/animals').then(response => response.json()).then(setAnimals);\n  }, []);\n\n  // add a new animal to the list of animals\n  function addNewAnimal(newAnimal) {\n    setAnimals([newAnimal, ...animals]);\n  }\n\n  // filter the list of animals based on the search query\n  const filteredAnimals = animals.filter(animal => {\n    // check if the animal's name or breed matches the search query\n    const nameMatch = animal.name.toLowerCase().includes(search.toLowerCase());\n    const breedMatch = animal.breed.toLowerCase().includes(search.toLowerCase());\n\n    // check if any of the animal's comments or replies match the search query\n    const commentsMatch = animal.comments.some(comment => {\n      const commentMatch = comment.comment.toLowerCase().includes(search.toLowerCase());\n\n      // check if any of the comment's replies match the search query\n      const repliesMatch = comment.replies.some(reply => {\n        return reply.reply.toLowerCase().includes(search.toLowerCase());\n      });\n      return commentMatch || repliesMatch;\n    });\n\n    // return true if the animal or its comments/replies match the search query\n    return nameMatch || breedMatch || commentsMatch;\n  });\n\n  // update the likes of an animal\n  function addLikes(updatedAnimal) {\n    setAnimals(prevAnimals => {\n      const index = prevAnimals.findIndex(animal => animal.id === updatedAnimal.id);\n      return [...prevAnimals.slice(0, index), updatedAnimal, ...prevAnimals.slice(index + 1)];\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      addNewAnimal: addNewAnimal,\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/cat-pictures\",\n        element: /*#__PURE__*/_jsxDEV(CatPictures, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dog-pictures\",\n        element: /*#__PURE__*/_jsxDEV(DogPictures, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Content, {\n          animals: filteredAnimals,\n          addLikes: addLikes,\n          setAnimals: setAnimals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"It1KlkvNUPTiaTXunr66uo4GKB4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Content","Footer","CatPictures","DogPictures","Routes","Route","App","animals","setAnimals","search","setSearch","fetch","then","response","json","addNewAnimal","newAnimal","filteredAnimals","filter","animal","nameMatch","name","toLowerCase","includes","breedMatch","breed","commentsMatch","comments","some","comment","commentMatch","repliesMatch","replies","reply","addLikes","updatedAnimal","prevAnimals","index","findIndex","id","slice"],"sources":["/Users/kqasolli/Desktop/Cats and Dogs copy/react-frontend/src/App.js"],"sourcesContent":["// import necessary components and libraries\nimport React, {useState, useEffect} from 'react';\nimport Header from './components/header/Header'\nimport Content from './components/content/Content'\nimport Footer from './components/Footer'\nimport CatPictures from './components/header/CatPictures'\nimport DogPictures from './components/header/DogPictures'\nimport {Routes, Route} from \"react-router-dom\"\n\nfunction App() {\n    // initialize state for the list of animals and search query\n  const [animals, setAnimals] = useState([])\n  const [search, setSearch] = useState(\"\")\n\n  // Fetch the list of animals when the component is mounted\n  useEffect(() => {\n    fetch('http://localhost:3000/animals')\n    .then((response) =>response.json())\n    .then(setAnimals)\n  },[])\n\n    // add a new animal to the list of animals\n  function addNewAnimal(newAnimal) {\n    setAnimals([\n      newAnimal,\n      ...animals\n    ])\n  }\n\n    // filter the list of animals based on the search query\n    const filteredAnimals = animals.filter(animal => {\n      // check if the animal's name or breed matches the search query\n      const nameMatch = animal.name.toLowerCase().includes(search.toLowerCase());\n      const breedMatch = animal.breed.toLowerCase().includes(search.toLowerCase());\n    \n      // check if any of the animal's comments or replies match the search query\n      const commentsMatch = animal.comments.some(comment => {\n        const commentMatch = comment.comment.toLowerCase().includes(search.toLowerCase());\n    \n        // check if any of the comment's replies match the search query\n        const repliesMatch = comment.replies.some(reply => {\n          return reply.reply.toLowerCase().includes(search.toLowerCase());\n        });\n    \n        return commentMatch || repliesMatch;\n      });\n    \n      // return true if the animal or its comments/replies match the search query\n      return nameMatch || breedMatch || commentsMatch;\n    });\n\n    // update the likes of an animal\n    function addLikes(updatedAnimal) {\n      setAnimals(prevAnimals => {\n        const index = prevAnimals.findIndex(animal => animal.id === updatedAnimal.id);\n        return [\n          ...prevAnimals.slice(0, index),\n          updatedAnimal,\n          ...prevAnimals.slice(index + 1),\n        ];\n      });\n    }\n    \n    return (\n      <div className=\"app\">\n        <Header \n          addNewAnimal={addNewAnimal}\n          search={search}\n          setSearch={setSearch}/>\n          <Routes>\n            <Route exact path='/cat-pictures' element={<CatPictures/>}></Route>\n            <Route path='/dog-pictures' element={<DogPictures/>}/>\n            <Route path='/' element={<Content animals={filteredAnimals} addLikes={addLikes}setAnimals={setAnimals} />}></Route>\n          </Routes> \n        <Footer />\n      </div>\n    )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}