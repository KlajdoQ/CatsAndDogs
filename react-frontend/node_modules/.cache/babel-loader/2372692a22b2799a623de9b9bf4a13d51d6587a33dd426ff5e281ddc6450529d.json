{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/travel-ed/src/components/content/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n  var _this = this;\n  let {\n    comment,\n    handleLikeClick,\n    handleReplyClick\n  } = _ref;\n  return function (handleLikeClick, handleReplyClick) {\n    const {\n      text,\n      likes,\n      replies,\n      id\n    } = comment;\n    const [isReplying, setIsReplying] = useState(false);\n    const [newReply, setNewReply] = useState(\"\");\n    function handleLikeClick() {\n      fetch(`http://localhost:3000/comments/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify({\n          likes: comment.likes + 1\n        })\n      }).then(response => response.json()).then(handleLikeClick);\n    }\n    function handleReplyClick() {\n      setIsReplying(!isReplying);\n    }\n    function handleReplyChange(event) {\n      setNewReply(event.target.value);\n    }\n    function handleReplySubmit(event) {\n      event.preventDefault();\n      const newReplyObject = {\n        id: replies.length + 1,\n        text: newReply,\n        likes: 0,\n        replies: []\n      };\n      //setReplies([...replies, newReplyObject])\n      setNewReply(\"\");\n      setIsReplying(false);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLikeClick,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [likes, \" Likes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReplyClick,\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, _this), isReplying && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReplySubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newReply,\n          onChange: handleReplyChange,\n          placeholder: \"Add a reply...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, _this), replies.map(reply => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: reply,\n        handleLikeClick: handleLikeClick,\n        handleReplyClick: handleReplyClick\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, _this);\n  }(handleLikeClick, handleReplyClick);\n}\n_s(Comment, \"g9QS+iwFWTCemUQshFnrnY7zDvY=\");\n_c = Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Comment","comment","handleLikeClick","handleReplyClick","text","likes","replies","id","isReplying","setIsReplying","newReply","setNewReply","fetch","method","headers","body","JSON","stringify","then","response","json","handleReplyChange","event","target","value","handleReplySubmit","preventDefault","newReplyObject","length","map","reply"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/Comment.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function Comment({ comment, handleLikeClick, handleReplyClick }) {\n  const { text, likes, replies, id } = comment;\n  const [isReplying, setIsReplying] = useState(false);\n  const [newReply, setNewReply] = useState(\"\");\n\n  function handleLikeClick() {\n    fetch(`http://localhost:3000/comments/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'application/json',\n      },\n      body: JSON.stringify({ likes: comment.likes + 1 })\n    })\n      .then(response => response.json())\n      .then(handleLikeClick)\n  }\n\n  function handleReplyClick() {\n    setIsReplying(!isReplying)\n  }\n\n  function handleReplyChange(event) {\n    setNewReply(event.target.value)\n  }\n\n  function handleReplySubmit(event) {\n    event.preventDefault()\n    const newReplyObject = {\n      id: replies.length + 1,\n      text: newReply,\n      likes: 0,\n      replies: []\n    }\n    //setReplies([...replies, newReplyObject])\n    setNewReply(\"\")\n    setIsReplying(false)\n  }\n\n  return (\n    <div className=\"comment\">\n      <p>{text}</p>\n      <button onClick={handleLikeClick}>Like</button>\n      <span>{likes} Likes</span>\n      <button onClick={handleReplyClick}>Reply</button>\n      {isReplying && <form onSubmit={handleReplySubmit}>\n        <input type=\"text\" value={newReply} onChange={handleReplyChange} placeholder=\"Add a reply...\" />\n        <button type=\"submit\">Post</button>\n      </form>}\n      {replies.map((reply) => (\n        <Comment key={reply.id} comment={reply} handleLikeClick={handleLikeClick} handleReplyClick={handleReplyClick} />\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,eAAe,SAASC,OAAO;EAAA;EAAA;EAAA,IAAC;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAiB,CAAC;EAAA,oDAAE;IAC9E,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,OAAO;MAAEC;IAAG,CAAC,GAAGN,OAAO;IAC5C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;IACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;IAE5C,SAASG,eAAe,GAAG;MACzBU,KAAK,CAAE,kCAAiCL,EAAG,EAAC,EAAE;QAC5CM,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACZ,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,KAAK,EAAEJ,OAAO,CAACI,KAAK,GAAG;QAAE,CAAC;MACnD,CAAC,CAAC,CACCa,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAChB,eAAe,CAAC;IAC1B;IAEA,SAASC,gBAAgB,GAAG;MAC1BM,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B;IAEA,SAASa,iBAAiB,CAACC,KAAK,EAAE;MAChCX,WAAW,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjC;IAEA,SAASC,iBAAiB,CAACH,KAAK,EAAE;MAChCA,KAAK,CAACI,cAAc,EAAE;MACtB,MAAMC,cAAc,GAAG;QACrBpB,EAAE,EAAED,OAAO,CAACsB,MAAM,GAAG,CAAC;QACtBxB,IAAI,EAAEM,QAAQ;QACdL,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE;MACX,CAAC;MACD;MACAK,WAAW,CAAC,EAAE,CAAC;MACfF,aAAa,CAAC,KAAK,CAAC;IACtB;IAEA,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB;QAAA,UAAIL;MAAI;QAAA;QAAA;QAAA;MAAA,SAAK,eACb;QAAQ,OAAO,EAAEF,eAAgB;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,SAAS,eAC/C;QAAA,WAAOG,KAAK,EAAC,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,SAAO,eAC1B;QAAQ,OAAO,EAAEF,gBAAiB;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,SAAS,EAChDK,UAAU,iBAAI;QAAM,QAAQ,EAAEiB,iBAAkB;QAAA,wBAC/C;UAAO,IAAI,EAAC,MAAM;UAAC,KAAK,EAAEf,QAAS;UAAC,QAAQ,EAAEW,iBAAkB;UAAC,WAAW,EAAC;QAAgB;UAAA;UAAA;UAAA;QAAA,SAAG,eAChG;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,SAAS;MAAA;QAAA;QAAA;QAAA;MAAA,SAC9B,EACNf,OAAO,CAACuB,GAAG,CAAEC,KAAK,iBACjB,QAAC,OAAO;QAAgB,OAAO,EAAEA,KAAM;QAAC,eAAe,EAAE5B,eAAgB;QAAC,gBAAgB,EAAEC;MAAiB,GAA/F2B,KAAK,CAACvB,EAAE;QAAA;QAAA;QAAA;MAAA,SACvB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,SACE;EAEV,CAAC;AAAA;AAAA,GAtDuBP,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}