{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport \"./CommentAndReplies.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { CableContext } from \"./CableContext\";\nimport ChatModal from \"./ChatModal\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { TooltipProps, tooltipClasses } from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HtmlTooltip = styled(_ref => {\n  let {\n    className,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    ...props,\n    classes: {\n      popper: className\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: \"#f5f5f9\",\n      color: \"rgba(0, 0, 0, 0.87)\",\n      maxWidth: 220,\n      fontSize: \"12px\",\n      border: \"1px solid #dadde9\"\n    }\n  };\n});\n_c = HtmlTooltip;\nexport default function CommentAndReplyForm(_ref3) {\n  _s();\n  var _animal$comments;\n  let {\n    handleCommentChange,\n    handleCommentSubmit,\n    animal,\n    setAnimals,\n    likeComments,\n    likeComment,\n    showCommentReplies,\n    showReply,\n    newReply,\n    handleReplyChange,\n    handleReplySubmit,\n    newComment,\n    handleCommentDelete,\n    user_id,\n    setUser\n  } = _ref3;\n  const {\n    user\n  } = useContext(UserContext);\n  const userImage = localStorage.getItem(\"userImage\");\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n  const handleChatButtonClick = author => {\n    setSelectedAuthor(author);\n    setShowChatModal(true);\n  };\n  const handleCloseChatModal = () => {\n    setShowChatModal(false);\n  };\n  const {\n    cable\n  } = useContext(CableContext);\n  useEffect(() => {\n    if (cable) {\n      const chatChannel = cable.subscriptions.create(\"ChatChannel\", {\n        received: data => {\n          // Handle the incoming message here\n        }\n      });\n      return () => {\n        cable.subscriptions.remove(chatChannel);\n      };\n    }\n  }, [cable]);\n\n  // function handleSendMessage() {\n  //   // Assuming you have the senderId and receiverId\n  //   cable.send({ message: 'Hi', sender_id: senderId, receiver_id: receiverId });\n  // }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\").then(response => response.json()).then(data => {\n      setUsers(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    const authors = {};\n    users.forEach(user => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors);\n  }, [users]);\n\n  // useEffect(() => {\n  //   const authors = {};\n  //   users.forEach((user) => {\n  //     authors[user.id] = user.full_name;\n  //   });\n  //   setReplyAuthors(authors)\n  // }, [users]);\n\n  // Generate unique IDs for each comment\n  const generateCommentId = index => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = commentIndex => `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) => `comment-${commentIndex}-reply-${replyIndex}`;\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true);\n  }\n\n  // This component renders a form that allows the user to submit comments and replies\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => handleCommentSubmit(event, user),\n    children: [animal.comments && ((_animal$comments = animal.comments) === null || _animal$comments === void 0 ? void 0 : _animal$comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgAuthor\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          animal: animal,\n          setAnimals: setAnimals,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentAuthor\",\n            onClick: () => handleCommentAuthorClick(comment.user_id),\n            children: [/*#__PURE__*/_jsxDEV(HtmlTooltip, {\n              title: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"inherit\",\n                  children: [\"Send a message to \", commentAuthors[comment.user_id] || `User ${comment.user_id}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleChatButtonClick({\n                    id: comment.user_id,\n                    full_name: commentAuthors[comment.user_id]\n                  }),\n                  children: \"Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 5\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: commentAuthors[comment.user_id] || `User ${comment.user_id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this), \"Update the ChatModal component to use author prop instead of selectedUser. jsx Copy code const ChatModal = (\", (currentUser, author, handleClose), \") => \", \"; These changes should enable the chat functionality as described in your question. The logged-in user can now hover over the tooltip, click the chat button, and open the ChatModal component to send messages to the author of the comment. The messages will appear on the lower right side of the screen with the same styling.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userImgComment\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), \" \", showChatModal && /*#__PURE__*/_jsxDEV(ChatModal, {\n        currentUser: user,\n        author: selectedUser,\n        handleClose: handleCloseChatModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: () => likeComments(commentIndex),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likeBtn\",\n          children: [likeComment ? \"♥\" : \"♡\", \" \", comment.likes, \" Like\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)\n      }, generateCommentLikeId(commentIndex), false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: e => showCommentReplies(commentIndex),\n        children: \"\\u21B3 Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n        onClick: e => handleDelete(commentIndex),\n        children: user_id === comment.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\u2612 Delete\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comment.replies && Array.isArray(comment.replies) && comment.replies.length > 0 ? comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(Replies, {\n          children: reply.reply\n        }, generateCommentReplyId(commentIndex, replyIndex), false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), showReply[commentIndex] ? /*#__PURE__*/_jsxDEV(CommentForm, {\n        children: [/*#__PURE__*/_jsxDEV(TypeReply, {\n          type: \"text\",\n          value: newReply,\n          onChange: handleReplyChange,\n          placeholder: \"Write a reply...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n          className: \"replyBtn\",\n          type: \"submit\",\n          onClick: e => handleReplySubmit(e, commentIndex),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }, this) : null]\n    }, generateCommentId(commentIndex), true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this))), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleCommentChange,\n        placeholder: \"Write a comment...\",\n        className: \"type-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n        type: \"submit\",\n        children: \"Post\"\n      }, \"post-comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n_s(CommentAndReplyForm, \"RvQbJcfGITxtnZqCUFUGTHuQV5A=\");\n_c2 = CommentAndReplyForm;\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n_c3 = LikeReply;\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n_c4 = Replies;\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c5 = CommentForm;\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom: 5px;\n`;\n_c6 = PostCommentBtn;\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n_c7 = TypeReply;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"HtmlTooltip\");\n$RefreshReg$(_c2, \"CommentAndReplyForm\");\n$RefreshReg$(_c3, \"LikeReply\");\n$RefreshReg$(_c4, \"Replies\");\n$RefreshReg$(_c5, \"CommentForm\");\n$RefreshReg$(_c6, \"PostCommentBtn\");\n$RefreshReg$(_c7, \"TypeReply\");","map":{"version":3,"names":["React","useState","useEffect","styled","useContext","UserContext","Modal","CableContext","ChatModal","Button","Tooltip","TooltipProps","tooltipClasses","Typography","HtmlTooltip","className","props","popper","theme","tooltip","backgroundColor","color","maxWidth","fontSize","border","CommentAndReplyForm","handleCommentChange","handleCommentSubmit","animal","setAnimals","likeComments","likeComment","showCommentReplies","showReply","newReply","handleReplyChange","handleReplySubmit","newComment","handleCommentDelete","user_id","setUser","user","userImage","localStorage","getItem","commentAuthors","setCommentAuthors","users","setUsers","show","setShow","handleClose","handleShow","selectedUser","setSelectedUser","showChatModal","setShowChatModal","selectedAuthor","setSelectedAuthor","handleChatButtonClick","author","handleCloseChatModal","cable","chatChannel","subscriptions","create","received","data","remove","fetch","then","response","json","catch","error","console","authors","forEach","id","full_name","generateCommentId","index","generateCommentLikeId","commentIndex","generateCommentReplyId","replyIndex","handleDelete","handleCommentAuthorClick","commentUserId","event","comments","map","comment","currentUser","likes","e","replies","Array","isArray","length","reply","LikeReply","button","Replies","li","CommentForm","div","PostCommentBtn","TypeReply","textarea"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport \"./CommentAndReplies.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { CableContext } from \"./CableContext\";\nimport ChatModal from \"./ChatModal\";\n\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { TooltipProps, tooltipClasses } from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\n\nconst HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: \"12px\",\n    border: \"1px solid #dadde9\",\n  },\n}));\n\nexport default function CommentAndReplyForm({\n  handleCommentChange,\n  handleCommentSubmit,\n  animal,\n  setAnimals,\n  likeComments,\n  likeComment,\n  showCommentReplies,\n  showReply,\n  newReply,\n  handleReplyChange,\n  handleReplySubmit,\n  newComment,\n  handleCommentDelete,\n  user_id,\n  setUser,\n}) {\n  const { user } = useContext(UserContext);\n  const userImage = localStorage.getItem(\"userImage\");\n\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n\n  const handleChatButtonClick = (author) => {\n    setSelectedAuthor(author);\n    setShowChatModal(true);\n  };\n\n  const handleCloseChatModal = () => {\n    setShowChatModal(false);\n  };\n  const { cable } = useContext(CableContext);\n  useEffect(() => {\n    if (cable) {\n      const chatChannel = cable.subscriptions.create(\"ChatChannel\", {\n        received: (data) => {\n          // Handle the incoming message here\n        },\n      });\n\n      return () => {\n        cable.subscriptions.remove(chatChannel);\n      };\n    }\n  }, [cable]);\n\n  // function handleSendMessage() {\n  //   // Assuming you have the senderId and receiverId\n  //   cable.send({ message: 'Hi', sender_id: senderId, receiver_id: receiverId });\n  // }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const authors = {};\n    users.forEach((user) => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors);\n  }, [users]);\n\n  // useEffect(() => {\n  //   const authors = {};\n  //   users.forEach((user) => {\n  //     authors[user.id] = user.full_name;\n  //   });\n  //   setReplyAuthors(authors)\n  // }, [users]);\n\n  // Generate unique IDs for each comment\n  const generateCommentId = (index) => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = (commentIndex) =>\n    `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) =>\n    `comment-${commentIndex}-reply-${replyIndex}`;\n\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true);\n  }\n\n  // This component renders a form that allows the user to submit comments and replies\n  return (\n    <form onSubmit={(event) => handleCommentSubmit(event, user)}>\n      {/* Map over the comments in the `animal` object and render a `CommentsList` component for each comment */}\n      {animal.comments &&\n        animal.comments?.map((comment, commentIndex) => (\n          <div key={generateCommentId(commentIndex)}>\n            <div className=\"imgAuthor\">\n              {/* <div className='author'>\n                {userImage && (<img className=\"commentator\" src={userImage} alt=\"User\"/>)}   \n                </div> */}\n              <div\n                className=\"comments-list\"\n                animal={animal}\n                setAnimals={setAnimals}\n              >\n                <div\n                  className=\"commentAuthor\"\n                  onClick={() => handleCommentAuthorClick(comment.user_id)}\n                >\n                    <HtmlTooltip\n  title={\n    <React.Fragment>\n      <Typography color=\"inherit\">\n        Send a message to {commentAuthors[comment.user_id] ||\n          `User ${comment.user_id}`}\n      </Typography>\n      <button\n        onClick={() => handleChatButtonClick({\n          id: comment.user_id,\n          full_name: commentAuthors[comment.user_id]\n        })}\n      >\n        Chat\n      </button>\n    </React.Fragment>\n  }\n>\n  <Button>\n    {commentAuthors[comment.user_id] || `User ${comment.user_id}`}\n  </Button>\n</HtmlTooltip>\nUpdate the ChatModal component to use author prop instead of selectedUser.\njsx\nCopy code\nconst ChatModal = ({ currentUser, author, handleClose }) => {\n  // ... (the rest of your ChatModal implementation)\n};\nThese changes should enable the chat functionality as described in your question. The logged-in user can now hover over the tooltip, click the chat button, and open the ChatModal component to send messages to the author of the comment. The messages will appear on the lower right side of the screen with the same styling.\n\n\n\n\n\n\n                </div>\n                <div className=\"userImgComment\">{comment.comment}</div>\n              </div>\n            </div>\n            {/* <Modal\n              show={show}\n              onHide={handleClose}\n              backdrop=\"static\"\n              keyboard={false}\n            >\n              <Modal.Header closeButton></Modal.Header>\n              <Modal.Body>\n                <div>\n                  {/* <img src={user.image} alt={user.full_name} /> */}\n            {/* <h2>Would you like to say \"Hi\" to {user.full_name}</h2>\n                  <button onClick={handleChatButtonClick}>Chat</button>\n                </div>\n              </Modal.Body>\n            </Modal> */}{\" \"}\n            {/* <div>\n            */}\n            {showChatModal && (\n              <ChatModal\n                currentUser={user}\n                author={selectedUser}\n                handleClose={handleCloseChatModal}\n              />\n            )}\n            {/* {selectedUser && <UserDetails show={show} handleClose={handleClose} user_id={selectedUser} />} */}\n            <LikeReply\n              key={generateCommentLikeId(commentIndex)}\n              onClick={() => likeComments(commentIndex)}\n            >\n              {/* Display a heart icon depending on whether the comment has been liked */}\n              <div className=\"likeBtn\">\n                {likeComment ? \"♥\" : \"♡\"} {comment.likes} Like\n              </div>\n            </LikeReply>\n            <LikeReply onClick={(e) => showCommentReplies(commentIndex)}>\n              ↳ Reply\n            </LikeReply>\n            <LikeReply onClick={(e) => handleDelete(commentIndex)}>\n              {user_id === comment.user_id && <>&#9746; Delete</>}\n            </LikeReply>\n            <ul>\n              {comment.replies &&\n              Array.isArray(comment.replies) &&\n              comment.replies.length > 0\n                ? comment.replies.map((reply, replyIndex) => (\n                    <Replies\n                      key={generateCommentReplyId(commentIndex, replyIndex)}\n                    >\n                      {reply.reply}\n                    </Replies>\n                  ))\n                : null}\n            </ul>\n            {/* If `showReply[commentIndex]` is truthy, render a form for submitting a reply to the comment */}\n            {showReply[commentIndex] ? (\n              <CommentForm>\n                <TypeReply\n                  type=\"text\"\n                  value={newReply}\n                  onChange={handleReplyChange}\n                  placeholder=\"Write a reply...\"\n                />\n                <PostCommentBtn\n                  className=\"replyBtn\"\n                  type=\"submit\"\n                  onClick={(e) => handleReplySubmit(e, commentIndex)}\n                >\n                  Reply\n                </PostCommentBtn>\n              </CommentForm>\n            ) : null}\n          </div>\n        ))}\n\n      {/* If `showComment` is truthy and there is text on the textarea, render the new comment */}\n      {/* {showComment && newComment && <NewReplyLi key=\"new-comment\">{newComment}</NewReplyLi>} */}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n        />\n        <PostCommentBtn key=\"post-comment\" type=\"submit\">\n          Post\n        </PostCommentBtn>\n      </div>\n    </form>\n  );\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom: 5px;\n`;\n\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}