{"ast":null,"code":"import React from \"react\";\nexport default function Fetch(_ref) {\n  let {\n    animal,\n    newComment,\n    setanimals\n  } = _ref;\n  return fetch(`http://localhost:3000/animals/${animal.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      comments: [...animal.comments, {\n        comment: newComment,\n        replies: [],\n        likes: 0\n      }]\n    })\n  }).then(response => response.json()).then(updatedAnimals => {\n    const updatedAnimalsArray = animal.map(currentAnimals => {\n      if (currentAnimals.id === updatedAnimals.id) {\n        return updatedAnimals;\n      } else {\n        return currentAnimals;\n      }\n    });\n    setanimals(updatedAnimalsArray);\n  });\n}\n_c = Fetch;\nvar _c;\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"names":["React","Fetch","animal","newComment","setanimals","fetch","id","method","headers","accept","body","JSON","stringify","comments","comment","replies","likes","then","response","json","updatedAnimals","updatedAnimalsArray","map","currentAnimals"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/Fetch.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Fetch({animal, newComment, setanimals}) {\n  return (\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"content-type\": \"application/json\",\n            accept: \"application/json\",\n          },\n          body: JSON.stringify({ comments: \n            [...animal.comments, { comment: newComment, replies: [], likes: 0 }] }),\n        })\n          .then((response) => response.json())\n          .then((updatedAnimals) => {\n            const updatedAnimalsArray = animal.map((currentAnimals) => {\n              if (currentAnimals.id === updatedAnimals.id) {\n                return updatedAnimals;\n              } else {\n                return currentAnimals;\n              }\n            });\n            setanimals(updatedAnimalsArray);\n          })\n  )\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,KAAK,OAAmC;EAAA,IAAlC;IAACC,MAAM;IAAEC,UAAU;IAAEC;EAAU,CAAC;EAC5D,OACEC,KAAK,CAAE,iCAAgCH,MAAM,CAACI,EAAG,EAAC,EAAE;IAC9CC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,MAAM,EAAE;IACV,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,QAAQ,EAC7B,CAAC,GAAGX,MAAM,CAACW,QAAQ,EAAE;QAAEC,OAAO,EAAEX,UAAU;QAAEY,OAAO,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAE,CAAC;IAAE,CAAC;EAC1E,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,cAAc,IAAK;IACxB,MAAMC,mBAAmB,GAAGnB,MAAM,CAACoB,GAAG,CAAEC,cAAc,IAAK;MACzD,IAAIA,cAAc,CAACjB,EAAE,KAAKc,cAAc,CAACd,EAAE,EAAE;QAC3C,OAAOc,cAAc;MACvB,CAAC,MAAM;QACL,OAAOG,cAAc;MACvB;IACF,CAAC,CAAC;IACFnB,UAAU,CAACiB,mBAAmB,CAAC;EACjC,CAAC,CAAC;AAEZ;AAAC,KAvBuBpB,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}