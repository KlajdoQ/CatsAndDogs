{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport \"./CommentAndReplies.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { CableContext } from \"./CableContext\";\nimport ChatModal from \"./ChatModal\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { TooltipProps, tooltipClasses } from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport ChatWindowsContext from './ChatWindowsContext';\nimport ChatWindowsManager from './ChatWindowsManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HtmlTooltip = styled(_ref => {\n  let {\n    className,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    ...props,\n    classes: {\n      popper: className\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: \"#f5f5f9\",\n      color: \"rgba(0, 0, 0, 0.87)\",\n      maxWidth: 220,\n      fontSize: \"12px\",\n      border: \"1px solid #dadde9\"\n    }\n  };\n});\n_c = HtmlTooltip;\nexport default function CommentAndReplyForm(_ref3) {\n  _s();\n  let {\n    handleCommentChange,\n    handleCommentSubmit,\n    animal,\n    setAnimals,\n    likeComments,\n    likeComment,\n    showCommentReplies,\n    showReply,\n    newReply,\n    handleReplyChange,\n    handleReplySubmit,\n    newComment,\n    handleCommentDelete,\n    user_id,\n    setUser\n  } = _ref3;\n  const {\n    user\n  } = useContext(UserContext);\n  const userImage = localStorage.getItem(\"userImage\");\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n  const handleChatButtonClick = author => {\n    ChatWindowsContext.openChatWindow(author);\n  };\n  const handleCloseChatModal = () => {\n    setShowChatModal(false);\n  };\n  const {\n    cable\n  } = useContext(CableContext);\n  useEffect(() => {\n    if (cable) {\n      const chatChannel = cable.subscriptions.create(\"ChatChannel\", {\n        received: data => {\n          // Handle the incoming message here\n        }\n      });\n      return () => {\n        cable.subscriptions.remove(chatChannel);\n      };\n    }\n  }, [cable]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\").then(response => response.json()).then(data => {\n      setUsers(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    const authors = {};\n    users.forEach(user => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors);\n  }, [users]);\n\n  // useEffect(() => {\n  //   const authors = {};\n  //   users.forEach((user) => {\n  //     authors[user.id] = user.full_name;\n  //   });\n  //   setReplyAuthors(authors)\n  // }, [users]);\n\n  // Generate unique IDs for each comment\n  const generateCommentId = index => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = commentIndex => `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) => `comment-${commentIndex}-reply-${replyIndex}`;\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true);\n  }\n\n  // This component renders a form that allows the user to submit comments and replies\n  return /*#__PURE__*/_jsxDEV(ChatWindowsContext.Consumer, {\n    children: _ref4 => {\n      var _animal$comments;\n      let {\n        openChatWindow\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => handleCommentSubmit(event, user),\n        children: [animal.comments && ((_animal$comments = animal.comments) === null || _animal$comments === void 0 ? void 0 : _animal$comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgAuthor\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-list\",\n              animal: animal,\n              setAnimals: setAnimals,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"commentAuthor\",\n                onClick: () => handleCommentAuthorClick(comment.user_id),\n                children: /*#__PURE__*/_jsxDEV(HtmlTooltip, {\n                  title: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"inherit\",\n                      children: [\"Send a message to\", \" \", commentAuthors[comment.user_id] || `User ${comment.user_id}`]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleChatButtonClick({\n                        id: comment.user_id,\n                        full_name: commentAuthors[comment.user_id]\n                      }),\n                      children: \"Chat\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    children: commentAuthors[comment.user_id] || `User ${comment.user_id}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"userImgComment\",\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), showChatModal && /*#__PURE__*/_jsxDEV(ChatModal, {\n            currentUser: user,\n            author: selectedUser,\n            handleClose: handleCloseChatModal,\n            position: showChatModal.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n            onClick: () => likeComments(commentIndex),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"likeBtn\",\n              children: [likeComment ? \"♥\" : \"♡\", \" \", comment.likes, \" Like\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, generateCommentLikeId(commentIndex), false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n            onClick: e => showCommentReplies(commentIndex),\n            children: \"\\u21B3 Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n            onClick: e => handleDelete(commentIndex),\n            children: user_id === comment.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"\\u2612 Delete\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: comment.replies && Array.isArray(comment.replies) && comment.replies.length > 0 ? comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(Replies, {\n              children: reply.reply\n            }, generateCommentReplyId(commentIndex, replyIndex), false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), showReply[commentIndex] ? /*#__PURE__*/_jsxDEV(CommentForm, {\n            children: [/*#__PURE__*/_jsxDEV(TypeReply, {\n              type: \"text\",\n              value: newReply,\n              onChange: handleReplyChange,\n              placeholder: \"Write a reply...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n              className: \"replyBtn\",\n              type: \"submit\",\n              onClick: e => handleReplySubmit(e, commentIndex),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this) : null]\n        }, generateCommentId(commentIndex), true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this))), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: newComment,\n            onChange: handleCommentChange,\n            placeholder: \"Write a comment...\",\n            className: \"type-comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n            type: \"submit\",\n            children: \"Post\"\n          }, \"post-comment\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n_s(CommentAndReplyForm, \"RvQbJcfGITxtnZqCUFUGTHuQV5A=\");\n_c2 = CommentAndReplyForm;\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n_c3 = LikeReply;\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n_c4 = Replies;\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c5 = CommentForm;\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom: 5px;\n`;\n_c6 = PostCommentBtn;\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n_c7 = TypeReply;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"HtmlTooltip\");\n$RefreshReg$(_c2, \"CommentAndReplyForm\");\n$RefreshReg$(_c3, \"LikeReply\");\n$RefreshReg$(_c4, \"Replies\");\n$RefreshReg$(_c5, \"CommentForm\");\n$RefreshReg$(_c6, \"PostCommentBtn\");\n$RefreshReg$(_c7, \"TypeReply\");","map":{"version":3,"names":["React","useState","useEffect","styled","useContext","UserContext","Modal","CableContext","ChatModal","Button","Tooltip","TooltipProps","tooltipClasses","Typography","ChatWindowsContext","ChatWindowsManager","HtmlTooltip","className","props","popper","theme","tooltip","backgroundColor","color","maxWidth","fontSize","border","CommentAndReplyForm","handleCommentChange","handleCommentSubmit","animal","setAnimals","likeComments","likeComment","showCommentReplies","showReply","newReply","handleReplyChange","handleReplySubmit","newComment","handleCommentDelete","user_id","setUser","user","userImage","localStorage","getItem","commentAuthors","setCommentAuthors","users","setUsers","show","setShow","handleClose","handleShow","selectedUser","setSelectedUser","showChatModal","setShowChatModal","selectedAuthor","setSelectedAuthor","handleChatButtonClick","author","openChatWindow","handleCloseChatModal","cable","chatChannel","subscriptions","create","received","data","remove","fetch","then","response","json","catch","error","console","authors","forEach","id","full_name","generateCommentId","index","generateCommentLikeId","commentIndex","generateCommentReplyId","replyIndex","handleDelete","handleCommentAuthorClick","commentUserId","event","comments","map","comment","position","likes","e","replies","Array","isArray","length","reply","LikeReply","button","Replies","li","CommentForm","div","PostCommentBtn","TypeReply","textarea"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport \"./CommentAndReplies.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { CableContext } from \"./CableContext\";\nimport ChatModal from \"./ChatModal\";\n\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { TooltipProps, tooltipClasses } from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\n\n\nimport ChatWindowsContext from './ChatWindowsContext';\nimport ChatWindowsManager from './ChatWindowsManager';\n\n\nconst HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: \"12px\",\n    border: \"1px solid #dadde9\",\n  },\n}));\n\nexport default function CommentAndReplyForm({\n  handleCommentChange,\n  handleCommentSubmit,\n  animal,\n  setAnimals,\n  likeComments,\n  likeComment,\n  showCommentReplies,\n  showReply,\n  newReply,\n  handleReplyChange,\n  handleReplySubmit,\n  newComment,\n  handleCommentDelete,\n  user_id,\n  setUser,\n}) {\n  const { user } = useContext(UserContext);\n  const userImage = localStorage.getItem(\"userImage\");\n\n  const [commentAuthors, setCommentAuthors] = useState({});\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const handleChatButtonClick = (author) => {\n    ChatWindowsContext.openChatWindow(author);\n  };\n\n  const handleCloseChatModal = () => {\n    setShowChatModal(false);\n  };\n  const { cable } = useContext(CableContext);\n  useEffect(() => {\n    if (cable) {\n      const chatChannel = cable.subscriptions.create(\"ChatChannel\", {\n        received: (data) => {\n          // Handle the incoming message here\n        },\n      });\n\n      return () => {\n        cable.subscriptions.remove(chatChannel);\n      };\n    }\n  }, [cable]);\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const authors = {};\n    users.forEach((user) => {\n      authors[user.id] = user.full_name;\n    });\n    setCommentAuthors(authors);\n  }, [users]);\n\n  // useEffect(() => {\n  //   const authors = {};\n  //   users.forEach((user) => {\n  //     authors[user.id] = user.full_name;\n  //   });\n  //   setReplyAuthors(authors)\n  // }, [users]);\n\n  // Generate unique IDs for each comment\n  const generateCommentId = (index) => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = (commentIndex) =>\n    `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) =>\n    `comment-${commentIndex}-reply-${replyIndex}`;\n\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n\n  function handleCommentAuthorClick(commentUserId) {\n    setSelectedUser(commentUserId);\n    setShow(true);\n  }\n\n  // This component renders a form that allows the user to submit comments and replies\n  return (\n    <ChatWindowsContext.Consumer>\n    {({ openChatWindow }) => (\n    <form onSubmit={(event) => handleCommentSubmit(event, user)}>\n      {/* Map over the comments in the `animal` object and render a `CommentsList` component for each comment */}\n      {animal.comments &&\n        animal.comments?.map((comment, commentIndex) => (\n          <div key={generateCommentId(commentIndex)}>\n            <div className=\"imgAuthor\">\n              {/* <div className='author'>\n                {userImage && (<img className=\"commentator\" src={userImage} alt=\"User\"/>)}   \n                </div> */}\n              <div\n                className=\"comments-list\"\n                animal={animal}\n                setAnimals={setAnimals}\n              >\n                <div\n                  className=\"commentAuthor\"\n                  onClick={() => handleCommentAuthorClick(comment.user_id)}\n                >\n                  <HtmlTooltip\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\">\n                          Send a message to{\" \"}\n                          {commentAuthors[comment.user_id] ||\n                            `User ${comment.user_id}`}\n                        </Typography>\n                        <button\n                          onClick={() =>\n                            handleChatButtonClick({\n                              id: comment.user_id,\n                              full_name: commentAuthors[comment.user_id],\n                            })\n                          }\n                        >\n                          Chat\n                        </button>\n                      </React.Fragment>\n                    }\n                  >\n                    <Button>\n                      {commentAuthors[comment.user_id] ||\n                        `User ${comment.user_id}`}\n                    </Button>\n                  </HtmlTooltip>\n                </div>\n                <div className=\"userImgComment\">{comment.comment}</div>\n              </div>\n            </div>\n            {showChatModal && (\n              <ChatModal\n                currentUser={user}\n                author={selectedUser}\n                handleClose={handleCloseChatModal}\n                position={showChatModal.position}\n              />\n            )}\n            {/* {selectedUser && <UserDetails show={show} handleClose={handleClose} user_id={selectedUser} />} */}\n            <LikeReply\n              key={generateCommentLikeId(commentIndex)}\n              onClick={() => likeComments(commentIndex)}\n            >\n              {/* Display a heart icon depending on whether the comment has been liked */}\n              <div className=\"likeBtn\">\n                {likeComment ? \"♥\" : \"♡\"} {comment.likes} Like\n              </div>\n            </LikeReply>\n            <LikeReply onClick={(e) => showCommentReplies(commentIndex)}>\n              ↳ Reply\n            </LikeReply>\n            <LikeReply onClick={(e) => handleDelete(commentIndex)}>\n              {user_id === comment.user_id && <>&#9746; Delete</>}\n            </LikeReply>\n            <ul>\n              {comment.replies &&\n              Array.isArray(comment.replies) &&\n              comment.replies.length > 0\n                ? comment.replies.map((reply, replyIndex) => (\n                    <Replies\n                      key={generateCommentReplyId(commentIndex, replyIndex)}\n                    >\n                      {reply.reply}\n                    </Replies>\n                  ))\n                : null}\n            </ul>\n            {/* If `showReply[commentIndex]` is truthy, render a form for submitting a reply to the comment */}\n            {showReply[commentIndex] ? (\n              <CommentForm>\n                <TypeReply\n                  type=\"text\"\n                  value={newReply}\n                  onChange={handleReplyChange}\n                  placeholder=\"Write a reply...\"\n                />\n                <PostCommentBtn\n                  className=\"replyBtn\"\n                  type=\"submit\"\n                  onClick={(e) => handleReplySubmit(e, commentIndex)}\n                >\n                  Reply\n                </PostCommentBtn>\n              </CommentForm>\n            ) : null}\n          </div>\n        ))}\n\n      {/* If `showComment` is truthy and there is text on the textarea, render the new comment */}\n      {/* {showComment && newComment && <NewReplyLi key=\"new-comment\">{newComment}</NewReplyLi>} */}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n        />\n        <PostCommentBtn key=\"post-comment\" type=\"submit\">\n          Post\n        </PostCommentBtn>\n      </div>\n    </form>\n    )}\n    </ChatWindowsContext.Consumer>\n  );\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PostCommentBtn = styled.button`\n  width: 60px;\n  height: 35px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n  margin-bottom: 5px;\n`;\n\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}