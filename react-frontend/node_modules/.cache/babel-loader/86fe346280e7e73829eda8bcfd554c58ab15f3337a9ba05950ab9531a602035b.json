{"ast":null,"code":"import React from 'react';\nexport default function Fetch() {\n  return function updateAnimals(e) {\n    e.preventDefault();\n    if (newComment) {\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          comments: [...animal.comments, [newComment]]\n        })\n      }).then(response => response.json()).then(updatedAnimals => {\n        const updatedAnimalsArray = animal.map(currentAnimals => {\n          if (currentAnimals.id === updatedAnimals.id) {\n            return updatedAnimals;\n          } else {\n            return currentAnimals;\n          }\n        });\n        setanimals(updatedAnimalsArray);\n      });\n    }\n    setnewComment(\"\");\n    setshowComment(true);\n  };\n}\n_c = Fetch;\nvar _c;\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"names":["React","Fetch","updateAnimals","e","preventDefault","newComment","fetch","animal","id","method","headers","accept","body","JSON","stringify","comments","then","response","json","updatedAnimals","updatedAnimalsArray","map","currentAnimals","setanimals","setnewComment","setshowComment"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/Fetch.js"],"sourcesContent":["import React from 'react'\n\nexport default function Fetch() {\n  return (\n    function updateAnimals(e) {\n        e.preventDefault()\n        if(newComment) {\n          \n          fetch(`http://localhost:3000/animals/${animal.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"content-type\": \"application/json\",\n              accept: \"application/json\"\n            },\n            body: JSON.stringify({comments: [...animal.comments, [newComment]]})\n          })\n          .then(response => response.json())\n          .then(updatedAnimals => {\n            const updatedAnimalsArray = animal.map(currentAnimals => {\n              if(currentAnimals.id === updatedAnimals.id) {\n                return updatedAnimals\n              } else {\n                return currentAnimals\n              }\n            })\n            setanimals(updatedAnimalsArray)\n          })\n        }\n        setnewComment(\"\")\n        setshowComment(true)\n      }\n  )\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,KAAK,GAAG;EAC9B,OACE,SAASC,aAAa,CAACC,CAAC,EAAE;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGC,UAAU,EAAE;MAEbC,KAAK,CAAE,iCAAgCC,MAAM,CAACC,EAAG,EAAC,EAAE;QAClDC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,MAAM,EAAE;QACV,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,QAAQ,EAAE,CAAC,GAAGR,MAAM,CAACQ,QAAQ,EAAE,CAACV,UAAU,CAAC;QAAC,CAAC;MACrE,CAAC,CAAC,CACDW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,cAAc,IAAI;QACtB,MAAMC,mBAAmB,GAAGb,MAAM,CAACc,GAAG,CAACC,cAAc,IAAI;UACvD,IAAGA,cAAc,CAACd,EAAE,KAAKW,cAAc,CAACX,EAAE,EAAE;YAC1C,OAAOW,cAAc;UACvB,CAAC,MAAM;YACL,OAAOG,cAAc;UACvB;QACF,CAAC,CAAC;QACFC,UAAU,CAACH,mBAAmB,CAAC;MACjC,CAAC,CAAC;IACJ;IACAI,aAAa,CAAC,EAAE,CAAC;IACjBC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;AAEP;AAAC,KA9BuBxB,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}