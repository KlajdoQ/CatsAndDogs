{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentAndReplyForm(_ref) {\n  var _animal$comments;\n  let {\n    handleCommentChange,\n    handleCommentSubmit,\n    animal,\n    setAnimals,\n    likeComments,\n    likeComment,\n    showCommentReplies,\n    showReply,\n    newReply,\n    handleReplyChange,\n    handleReplySubmit,\n    showComment,\n    newComment,\n    handleCommentDelete\n  } = _ref;\n  //const { user} = useContext(UserContext)\n  // Generate unique IDs for each comment\n  const generateCommentId = index => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = commentIndex => `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) => `comment-${commentIndex}-reply-${replyIndex}`;\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n  // This component renders a form that allows the user to submit comments and replies\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCommentSubmit,\n    children: [animal.comments && ((_animal$comments = animal.comments) === null || _animal$comments === void 0 ? void 0 : _animal$comments.map((comment, commentIndex) => {\n      var _comment$user;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          animal: animal,\n          setAnimals: setAnimals,\n          children: [(_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.full_name, \" \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n          onClick: () => likeComments(commentIndex),\n          children: [likeComment[commentIndex] ? \"♥\" : \"♡\", \" \", comment.likes, \" Like\"]\n        }, generateCommentLikeId(commentIndex), true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n          onClick: e => showCommentReplies(commentIndex),\n          children: \"\\u21B3 Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LikeReply, {\n          onClick: e => handleDelete(commentIndex),\n          children: \"\\u2612 Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comment.replies && Array.isArray(comment.replies) && comment.replies.length > 0 ? comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(Replies, {\n            children: reply.reply\n          }, generateCommentReplyId(commentIndex, replyIndex), false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), showReply[commentIndex] ? /*#__PURE__*/_jsxDEV(CommentForm, {\n          children: [/*#__PURE__*/_jsxDEV(TypeReply, {\n            type: \"text\",\n            value: newReply,\n            onChange: handleReplyChange,\n            placeholder: \"Write a reply...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n            className: \"replyBtn\",\n            type: \"submit\",\n            onClick: e => handleReplySubmit(e, commentIndex),\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this) : null]\n      }, generateCommentId(commentIndex), true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleCommentChange,\n        placeholder: \"Write a comment...\",\n        className: \"type-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostCommentBtn, {\n        type: \"submit\",\n        children: \"Post\"\n      }, \"post-comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n_c = CommentAndReplyForm;\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n_c2 = LikeReply;\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n_c3 = Replies;\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c4 = CommentForm;\nconst PostCommentBtn = styled.button`\n  width: 70px;\n  height: 40px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n`;\n_c5 = PostCommentBtn;\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n_c6 = TypeReply;\nconst NewReplyLi = styled.li`\n  list-style: none;\n`;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CommentAndReplyForm\");\n$RefreshReg$(_c2, \"LikeReply\");\n$RefreshReg$(_c3, \"Replies\");\n$RefreshReg$(_c4, \"CommentForm\");\n$RefreshReg$(_c5, \"PostCommentBtn\");\n$RefreshReg$(_c6, \"TypeReply\");","map":{"version":3,"names":["React","styled","useContext","UserContext","CommentAndReplyForm","handleCommentChange","handleCommentSubmit","animal","setAnimals","likeComments","likeComment","showCommentReplies","showReply","newReply","handleReplyChange","handleReplySubmit","showComment","newComment","handleCommentDelete","generateCommentId","index","generateCommentLikeId","commentIndex","generateCommentReplyId","replyIndex","handleDelete","comments","map","comment","user","full_name","likes","e","replies","Array","isArray","length","reply","LikeReply","button","Replies","li","CommentForm","div","PostCommentBtn","TypeReply","textarea","NewReplyLi"],"sources":["/Users/kqasolli/Desktop/CatsAndDogs/react-frontend/src/components/content/CommentAndReplyForm.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\n\nexport default function CommentAndReplyForm({\n  handleCommentChange,\n  handleCommentSubmit,\n  animal,\n  setAnimals,\n  likeComments,\n  likeComment,\n  showCommentReplies,\n  showReply,\n  newReply,\n  handleReplyChange,\n  handleReplySubmit,\n  showComment,\n  newComment,\n  handleCommentDelete\n}) {\n\n  //const { user} = useContext(UserContext)\n  // Generate unique IDs for each comment\n  const generateCommentId = (index) => `comment-${index}`;\n\n  // Generate unique IDs for each comment like\n  const generateCommentLikeId = (commentIndex) =>\n    `comment-${commentIndex}-like`;\n  const generateCommentReplyId = (commentIndex, replyIndex) =>\n    `comment-${commentIndex}-reply-${replyIndex}`;\n\n  function handleDelete(commentIndex) {\n    handleCommentDelete(commentIndex);\n  }\n  // This component renders a form that allows the user to submit comments and replies\n  return (\n    <form onSubmit={handleCommentSubmit}>\n      {/* Map over the comments in the `animal` object and render a `CommentsList` component for each comment */}\n      {animal.comments &&\n        animal.comments?.map((comment, commentIndex) => (\n          <div key={generateCommentId(commentIndex)}>\n             \n            <div className=\"comments-list\" \n            animal={animal} \n            setAnimals={setAnimals}>\n            {comment.user?.full_name} {comment.comment}\n            </div>\n            <LikeReply\n              key={generateCommentLikeId(commentIndex)}\n              onClick={() => likeComments(commentIndex)}\n            >\n              {/* Display a heart icon depending on whether the comment has been liked */}\n              {likeComment[commentIndex] ? \"♥\" : \"♡\"} {comment.likes} Like\n            </LikeReply>\n            <LikeReply onClick={(e) => showCommentReplies(commentIndex)}>\n              ↳ Reply\n            </LikeReply>\n            <LikeReply onClick={(e) => handleDelete(commentIndex)}>\n              &#9746; Delete\n            </LikeReply>\n            <ul>\n              {comment.replies && Array.isArray(comment.replies) && comment.replies.length > 0\n                ? comment.replies.map((reply, replyIndex) => (\n                    <Replies\n                      key={generateCommentReplyId(commentIndex, replyIndex)}\n                    >\n                      {reply.reply}\n                    </Replies>\n                  ))\n                : null}\n            </ul>\n\n            {/* If `showReply[commentIndex]` is truthy, render a form for submitting a reply to the comment */}\n            {showReply[commentIndex] ? (\n              <CommentForm>\n                <TypeReply\n                  type=\"text\"\n                  value={newReply}\n                  onChange={handleReplyChange}\n                  placeholder=\"Write a reply...\"\n                />\n                <PostCommentBtn\n                  className=\"replyBtn\"\n                  type=\"submit\"\n                  onClick={(e) => handleReplySubmit(e, commentIndex)}\n                >\n                  Reply\n                </PostCommentBtn>\n              </CommentForm>\n            ) : null}\n          </div>\n        ))}\n      {/* If `showComment` is truthy and there is text on the textarea, render the new comment */}\n      {/* {showComment && newComment && <NewReplyLi key=\"new-comment\">{newComment}</NewReplyLi>} */}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n        />\n        <PostCommentBtn key=\"post-comment\" type=\"submit\">\n          Post\n        </PostCommentBtn>\n      </div>\n    </form>\n  );\n}\n\n/*******************************\n *   STYLED COMPONENTS          *\n *******************************/\n\n\nconst LikeReply = styled.button`\n  border: none;\n  font-size: 12px;\n  margin-left: 30px;\n  margin-bottom: 10px;\n  background-color: white;\n  font-weight: 500;\n`;\n\nconst Replies = styled.li`\n  list-style: none;\n  border-radius: 20px;\n  padding: 5px 10px;\n  margin: 5px;\n  width: 350px;\n  margin-left: 50px;\n  background-color: rgb(242, 244, 246);\n`;\n\nconst CommentForm = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PostCommentBtn = styled.button`\n  width: 70px;\n  height: 40px;\n  background-color: rgb(104, 104, 201);\n  color: white;\n  border-radius: 5px;\n  border: none;\n`;\n\nconst TypeReply = styled.textarea`\n  margin-left: 100px;\n  font-size: 12px;\n  margin-right: 20px;\n  height: 30px;\n  width: 200px;\n`;\n\nconst NewReplyLi = styled.li`\n  list-style: none;\n`;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,yBAAyB;AAAC;AAGtD,eAAe,SAASC,mBAAmB,OAexC;EAAA;EAAA,IAfyC;IAC1CC,mBAAmB;IACnBC,mBAAmB;IACnBC,MAAM;IACNC,UAAU;IACVC,YAAY;IACZC,WAAW;IACXC,kBAAkB;IAClBC,SAAS;IACTC,QAAQ;IACRC,iBAAiB;IACjBC,iBAAiB;IACjBC,WAAW;IACXC,UAAU;IACVC;EACF,CAAC;EAEC;EACA;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAM,WAAUA,KAAM,EAAC;;EAEvD;EACA,MAAMC,qBAAqB,GAAIC,YAAY,IACxC,WAAUA,YAAa,OAAM;EAChC,MAAMC,sBAAsB,GAAG,CAACD,YAAY,EAAEE,UAAU,KACrD,WAAUF,YAAa,UAASE,UAAW,EAAC;EAE/C,SAASC,YAAY,CAACH,YAAY,EAAE;IAClCJ,mBAAmB,CAACI,YAAY,CAAC;EACnC;EACA;EACA,oBACE;IAAM,QAAQ,EAAEhB,mBAAoB;IAAA,WAEjCC,MAAM,CAACmB,QAAQ,yBACdnB,MAAM,CAACmB,QAAQ,qDAAf,iBAAiBC,GAAG,CAAC,CAACC,OAAO,EAAEN,YAAY;MAAA;MAAA,oBACzC;QAAA,wBAEE;UAAK,SAAS,EAAC,eAAe;UAC9B,MAAM,EAAEf,MAAO;UACf,UAAU,EAAEC,UAAW;UAAA,4BACtBoB,OAAO,CAACC,IAAI,kDAAZ,cAAcC,SAAS,EAAC,GAAC,EAACF,OAAO,CAACA,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QACpC,eACN,QAAC,SAAS;UAER,OAAO,EAAE,MAAMnB,YAAY,CAACa,YAAY,CAAE;UAAA,WAGzCZ,WAAW,CAACY,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC,EAACM,OAAO,CAACG,KAAK,EAAC,OACzD;QAAA,GALOV,qBAAqB,CAACC,YAAY,CAAC;UAAA;UAAA;UAAA;QAAA,QAK9B,eACZ,QAAC,SAAS;UAAC,OAAO,EAAGU,CAAC,IAAKrB,kBAAkB,CAACW,YAAY,CAAE;UAAA,UAAC;QAE7D;UAAA;UAAA;UAAA;QAAA,QAAY,eACZ,QAAC,SAAS;UAAC,OAAO,EAAGU,CAAC,IAAKP,YAAY,CAACH,YAAY,CAAE;UAAA,UAAC;QAEvD;UAAA;UAAA;UAAA;QAAA,QAAY,eACZ;UAAA,UACGM,OAAO,CAACK,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACP,OAAO,CAACK,OAAO,CAAC,IAAIL,OAAO,CAACK,OAAO,CAACG,MAAM,GAAG,CAAC,GAC5ER,OAAO,CAACK,OAAO,CAACN,GAAG,CAAC,CAACU,KAAK,EAAEb,UAAU,kBACpC,QAAC,OAAO;YAAA,UAGLa,KAAK,CAACA;UAAK,GAFPd,sBAAsB,CAACD,YAAY,EAAEE,UAAU,CAAC;YAAA;YAAA;YAAA;UAAA,QAIxD,CAAC,GACF;QAAI;UAAA;UAAA;UAAA;QAAA,QACL,EAGJZ,SAAS,CAACU,YAAY,CAAC,gBACtB,QAAC,WAAW;UAAA,wBACV,QAAC,SAAS;YACR,IAAI,EAAC,MAAM;YACX,KAAK,EAAET,QAAS;YAChB,QAAQ,EAAEC,iBAAkB;YAC5B,WAAW,EAAC;UAAkB;YAAA;YAAA;YAAA;UAAA,QAC9B,eACF,QAAC,cAAc;YACb,SAAS,EAAC,UAAU;YACpB,IAAI,EAAC,QAAQ;YACb,OAAO,EAAGkB,CAAC,IAAKjB,iBAAiB,CAACiB,CAAC,EAAEV,YAAY,CAAE;YAAA,UACpD;UAED;YAAA;YAAA;YAAA;UAAA,QAAiB;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,GACZ,IAAI;MAAA,GAjDAH,iBAAiB,CAACG,YAAY,CAAC;QAAA;QAAA;QAAA;MAAA,QAkDnC;IAAA,CACP,CAAC,gBAGJ;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEL,UAAW;QAClB,QAAQ,EAAEZ,mBAAoB;QAC9B,WAAW,EAAC,oBAAoB;QAChC,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QACxB,eACF,QAAC,cAAc;QAAoB,IAAI,EAAC,QAAQ;QAAA,UAAC;MAEjD,GAFoB,cAAc;QAAA;QAAA;QAAA;MAAA,QAEjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;;AAEA;AACA;AACA;AAFA,KA1GwBD,mBAAmB;AA+G3C,MAAMkC,SAAS,GAAGrC,MAAM,CAACsC,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPID,SAAS;AASf,MAAME,OAAO,GAAGvC,MAAM,CAACwC,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MARID,OAAO;AAUb,MAAME,WAAW,GAAGzC,MAAM,CAAC0C,GAAI;AAC/B;AACA;AACA,CAAC;AAAC,MAHID,WAAW;AAKjB,MAAME,cAAc,GAAG3C,MAAM,CAACsC,MAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPIK,cAAc;AASpB,MAAMC,SAAS,GAAG5C,MAAM,CAAC6C,QAAS;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MANID,SAAS;AAQf,MAAME,UAAU,GAAG9C,MAAM,CAACwC,EAAG;AAC7B;AACA,CAAC;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}