{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport createChatChannel from \"../javascript/channels/chat_channel\";\nimport \"./ChatModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatModal = _ref => {\n  _s();\n  let {\n    currentUser,\n    author,\n    handleClose,\n    handleChatButtonClick,\n    newMessage,\n    setNewMessage\n  } = _ref;\n  const [conversation, setConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [chatChannel, setChatChannel] = useState(null);\n  const [openConversations, setOpenConversations] = useState({});\n  useEffect(() => {\n    if (!conversation && currentUser !== null && currentUser !== void 0 && currentUser.id && author !== null && author !== void 0 && author.id) {\n      // Create or fetch the conversation between the current user and the author\n      fetch(\"http://localhost:3000/conversations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          conversation: {\n            sender_id: currentUser.id,\n            receiver_id: author.id\n          }\n        })\n      }).then(response => response.json()).then(data => {\n        setConversation(data);\n        setMessages(data.messages || []);\n        const channel = createChatChannel(data.id, handleReceivedMessage);\n        setChatChannel(channel);\n      });\n    }\n  }, [conversation, currentUser, author]);\n  useEffect(() => {\n    if (newMessage && conversation && newMessage.conversation_id === conversation.id) {\n      handleReceivedMessage(newMessage);\n    }\n  }, [newMessage, conversation]);\n  useEffect(() => {\n    if (conversation) {\n      fetch(`http://localhost:3000/conversations/${conversation.id}`).then(response => response.json()).then(data => {\n        setMessages(data.messages);\n      });\n    }\n  }, [conversation]);\n  const handleReceivedMessage = message => {\n    console.log(\"Received message:\", message); // Add this line to check if the function is called correctly\n\n    setMessages(prevMessages => [...prevMessages, message]);\n    if (message.user_id !== currentUser.id) {\n      setOpenConversations(prevOpen => ({\n        ...prevOpen,\n        [message.conversation_id]: true\n      }));\n      handleChatButtonClick(author, true);\n      setNewMessage(message);\n    } else {\n      handleChatButtonClick(author, true); // Add this line to open the chat modal for the receiver\n    }\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (inputValue.trim() && chatChannel !== null && chatChannel !== void 0 && chatChannel.sendMessage) {\n      const newSentMessage = {\n        content: inputValue,\n        user_id: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n        conversation_id: conversation === null || conversation === void 0 ? void 0 : conversation.id\n      };\n\n      // Add the new message to the messages state\n      setMessages(prevMessages => [...prevMessages, newSentMessage]);\n      chatChannel.sendMessage(inputValue, currentUser === null || currentUser === void 0 ? void 0 : currentUser.id, conversation === null || conversation === void 0 ? void 0 : conversation.id);\n      setInputValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        backgroundColor: \"#eee\"\n      },\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatModal py-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header d-flex justify-content-between align-items-center p-3\",\n                style: {\n                  borderTop: \"4px solid #ffa900\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-0\",\n                  children: \"Messages \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleClose,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                \"data-mdb-perfect-scrollbar\": \"true\",\n                style: {\n                  position: \"relative\",\n                  height: \"300px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Message 1 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: message.user_id === currentUser.id ? \"currentUserMessage\" : \"authorMessage\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\" \", message.content]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-footer text-muted d-flex justify-content-start align-items-center p-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    placeholder: \"Type message\",\n                    \"aria-label\": \"Recipient's username\",\n                    \"aria-describedby\": \"button-addon2\",\n                    value: inputValue,\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning\",\n                    type: \"button\",\n                    id: \"button-addon2\",\n                    style: {\n                      paddingTop: \".55rem\"\n                    },\n                    onClick: handleSendMessage,\n                    children: \"Send Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChatModal, \"cky1F5MF7kXOLaxuwMsxHLPktIw=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","createChatChannel","ChatModal","currentUser","author","handleClose","handleChatButtonClick","newMessage","setNewMessage","conversation","setConversation","messages","setMessages","inputValue","setInputValue","chatChannel","setChatChannel","openConversations","setOpenConversations","id","fetch","method","headers","Accept","body","JSON","stringify","sender_id","receiver_id","then","response","json","data","channel","handleReceivedMessage","conversation_id","message","console","log","prevMessages","user_id","prevOpen","handleInputChange","event","target","value","handleSendMessage","trim","sendMessage","newSentMessage","content","backgroundColor","borderTop","position","height","map","index","paddingTop"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/ChatModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport createChatChannel from \"../javascript/channels/chat_channel\";\nimport \"./ChatModal.css\";\n\nconst ChatModal = ({\n  currentUser,\n  author,\n  handleClose,\n  handleChatButtonClick,\n  newMessage,\n  setNewMessage,\n}) => {\n  const [conversation, setConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [chatChannel, setChatChannel] = useState(null);\n  const [openConversations, setOpenConversations] = useState({});\n\n  useEffect(() => {\n    if (!conversation && currentUser?.id && author?.id) {\n      // Create or fetch the conversation between the current user and the author\n      fetch(\"http://localhost:3000/conversations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          conversation: {\n            sender_id: currentUser.id,\n            receiver_id: author.id,\n          },\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setConversation(data);\n          setMessages(data.messages || []);\n          const channel = createChatChannel(data.id, handleReceivedMessage);\n          setChatChannel(channel);\n        });\n    }\n  }, [conversation, currentUser, author]);\n\n  useEffect(() => {\n    if (\n      newMessage &&\n      conversation &&\n      newMessage.conversation_id === conversation.id\n    ) {\n      handleReceivedMessage(newMessage);\n    }\n  }, [newMessage, conversation]);\n  useEffect(() => {\n    if (conversation) {\n      fetch(`http://localhost:3000/conversations/${conversation.id}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setMessages(data.messages);\n        });\n    }\n  }, [conversation]);\n\n  const handleReceivedMessage = (message) => {\n    console.log(\"Received message:\", message); // Add this line to check if the function is called correctly\n\n    setMessages((prevMessages) => [...prevMessages, message]);\n    if (message.user_id !== currentUser.id) {\n      setOpenConversations((prevOpen) => ({\n        ...prevOpen,\n        [message.conversation_id]: true,\n      }));\n      handleChatButtonClick(author, true);\n      setNewMessage(message);\n    } else {\n      handleChatButtonClick(author, true); // Add this line to open the chat modal for the receiver\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (inputValue.trim() && chatChannel?.sendMessage) {\n      const newSentMessage = {\n        content: inputValue,\n        user_id: currentUser?.id,\n        conversation_id: conversation?.id,\n      };\n\n      // Add the new message to the messages state\n      setMessages((prevMessages) => [...prevMessages, newSentMessage]);\n\n      chatChannel.sendMessage(inputValue, currentUser?.id, conversation?.id);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <>\n      <section style={{ backgroundColor: \"#eee\" }} className=\"section\">\n        <div className=\"chatModal py-5\">\n          <div className=\"\">\n            <div className=\"\">\n              <div className=\"card\">\n                <div\n                  className=\"card-header d-flex justify-content-between align-items-center p-3\"\n                  style={{ borderTop: \"4px solid #ffa900\" }}\n                >\n                  <h5 className=\"mb-0\">Messages </h5>\n                  <button onClick={handleClose}>Close</button>\n                </div>\n                <div\n                  className=\"card-body\"\n                  data-mdb-perfect-scrollbar=\"true\"\n                  style={{ position: \"relative\", height: \"300px\" }}\n                >\n                  <p>Message 1 </p>\n                  {messages.map((message, index) => (\n                    <div\n                      key={index}\n                      className={\n                        message.user_id === currentUser.id\n                          ? \"currentUserMessage\"\n                          : \"authorMessage\"\n                      }\n                    >\n                      <p> {message.content}</p>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"card-footer text-muted d-flex justify-content-start align-items-center p-3\">\n                  <div className=\"input-group mb-0\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Type message\"\n                      aria-label=\"Recipient's username\"\n                      aria-describedby=\"button-addon2\"\n                      value={inputValue}\n                      onChange={handleInputChange}\n                    />\n                    <button\n                      className=\"btn btn-warning\"\n                      type=\"button\"\n                      id=\"button-addon2\"\n                      style={{ paddingTop: \".55rem\" }}\n                      onClick={handleSendMessage}\n                    >\n                      Send Message\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ChatModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}