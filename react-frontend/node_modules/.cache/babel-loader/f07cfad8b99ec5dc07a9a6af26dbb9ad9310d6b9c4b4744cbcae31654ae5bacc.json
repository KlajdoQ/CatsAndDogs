{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddComment(_ref) {\n  _s();\n  let {\n    animal,\n    setanimals\n  } = _ref;\n  const [newComment, setnewComment] = useState(\"\");\n  const [showComment, setshowComment] = useState(false);\n  const [likeComment, setLikeComment] = useState({});\n  const [isLikeClicked, setIsLikeClicked] = useState(false);\n  const [showReply, setshowReply] = useState({});\n  function updateAnimals(e) {\n    e.preventDefault();\n    if (newComment) {\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          comments: [...animal.comments, [newComment]]\n        })\n      }).then(response => response.json()).then(updatedAnimals => {\n        const updatedAnimalsArray = animal.map(currentAnimals => {\n          if (currentAnimals.id === updatedAnimals.id) {\n            return updatedAnimals;\n          } else {\n            return currentAnimals;\n          }\n        });\n        setanimals(updatedAnimalsArray);\n      });\n    }\n    setnewComment(\"\");\n    setshowComment(true);\n  }\n  function handleCommentChange(event) {\n    setnewComment(event.target.value);\n  }\n  function handleCommentSubmit(e) {\n    e.preventDefault();\n    if (newComment && !isLikeClicked) {\n      updateAnimals();\n    }\n    setIsLikeClicked(false);\n    setnewComment(\"\");\n    setshowComment(true);\n  }\n  function likeComments(index) {\n    setLikeComment(prev => {\n      let newLikeComment = {\n        ...prev\n      };\n      newLikeComment[index] = !newLikeComment[index];\n      return newLikeComment;\n    });\n  }\n  function showCommentReplies(index) {\n    setshowReply(prev => {\n      let isCommentShown = {\n        ...prev\n      };\n      isCommentShown[index] = !isCommentShown[index];\n      return isCommentShown;\n    });\n  }\n  function handleReplyChange(e) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [animal.comments.map((comments, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"comments-list\",\n          animal: animal,\n          setanimals: setanimals,\n          children: comments\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-reply\",\n          onClick: () => likeComments(index),\n          children: [likeComment[index] ? '♥' : '♡', \"Like\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-reply copy-tooltip\",\n          onClick: () => showCommentReplies(index),\n          children: \"\\u2328 Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), showReply[index] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: newComment,\n            onChange: handleReplyChange,\n            placeholder: \"Write a reply...\",\n            className: \"type-comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"post-comment-btn\",\n            type: \"submit\",\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 34\n        }, this) : null]\n      }, void 0, true)), showComment && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"new-reply-li\",\n        children: newComment\n      }, animal.commments, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: newComment,\n          onChange: handleCommentChange,\n          placeholder: \"Write a comment...\",\n          className: \"type-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"post-comment-btn\",\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(AddComment, \"tnB3ZvZJg0BOb32ubvhu1G7GF+k=\");\n_c = AddComment;\nvar _c;\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["React","useState","AddComment","animal","setanimals","newComment","setnewComment","showComment","setshowComment","likeComment","setLikeComment","isLikeClicked","setIsLikeClicked","showReply","setshowReply","updateAnimals","e","preventDefault","fetch","id","method","headers","accept","body","JSON","stringify","comments","then","response","json","updatedAnimals","updatedAnimalsArray","map","currentAnimals","handleCommentChange","event","target","value","handleCommentSubmit","likeComments","index","prev","newLikeComment","showCommentReplies","isCommentShown","handleReplyChange","commments"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js"],"sourcesContent":["import React, { useState } from 'react'\n\n\nexport default function AddComment({animal, setanimals}) {\n  const [newComment, setnewComment] = useState(\"\")\n  const [showComment, setshowComment] = useState(false)\n  const [likeComment, setLikeComment] = useState({})\n  const [isLikeClicked, setIsLikeClicked] = useState(false)\n  const [showReply, setshowReply] = useState({})\n  \n  \n  function updateAnimals(e) {\n    e.preventDefault()\n    if(newComment) {\n      \n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\"\n        },\n        body: JSON.stringify({comments: [...animal.comments, [newComment]]})\n      })\n      .then(response => response.json())\n      .then(updatedAnimals => {\n        const updatedAnimalsArray = animal.map(currentAnimals => {\n          if(currentAnimals.id === updatedAnimals.id) {\n            return updatedAnimals\n          } else {\n            return currentAnimals\n          }\n        })\n        setanimals(updatedAnimalsArray)\n      })\n    }\n    setnewComment(\"\")\n    setshowComment(true)\n  }\n  \n  function handleCommentChange(event) {\n    setnewComment(event.target.value)\n  }\n\n  function handleCommentSubmit(e) {\n    e.preventDefault()\n    if(newComment && !isLikeClicked) {\n      updateAnimals();\n    }\n    setIsLikeClicked(false);\n    setnewComment(\"\")\n    setshowComment(true)\n  }\n  function likeComments(index) {\n    setLikeComment(prev => {\n      let newLikeComment = {...prev}\n      newLikeComment[index] = !newLikeComment[index]\n      return newLikeComment\n    })\n    \n  }\n\n  function showCommentReplies(index) {\n    setshowReply(prev => {\n      let isCommentShown = {...prev}\n      isCommentShown[index] = !isCommentShown[index]\n      return isCommentShown\n    })\n  }\n\n  function handleReplyChange(e) {\n\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleCommentSubmit} >\n          {animal.comments.map((comments, index) => (\n            <>\n            <li className=\"comments-list\" \n            key={index} \n            animal={animal}\n            setanimals={setanimals}>\n              {comments} \n              </li>\n          <button \n          className=\"like-reply\" \n          onClick={() => likeComments(index)}>\n            {likeComment[index]? '♥' :'♡' }  \n             Like\n            </button>\n            <button \n              className=\"like-reply copy-tooltip\"\n              onClick={() =>showCommentReplies(index)}>⌨ Reply</button>\n              {showReply[index]? <div className='comment-form'>\n            <textarea \n              type=\"text\" \n              value={newComment} \n              onChange={handleReplyChange} \n              placeholder=\"Write a reply...\"\n              className=\"type-comment\"\n            />\n            <button className=\"post-comment-btn\" type=\"submit\">Reply</button>\n          </div> : null}\n            </>\n          ))}\n          {showComment && <li className=\"new-reply-li\" key={animal.commments}>{newComment}</li>}\n          <div className='comment-form'>\n            <textarea \n              type=\"text\" \n              value={newComment} \n              onChange={handleCommentChange} \n              placeholder=\"Write a comment...\"\n              className=\"type-comment\"\n            />\n            <button className=\"post-comment-btn\" type=\"submit\">Post</button>\n          </div>\n      </form>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}