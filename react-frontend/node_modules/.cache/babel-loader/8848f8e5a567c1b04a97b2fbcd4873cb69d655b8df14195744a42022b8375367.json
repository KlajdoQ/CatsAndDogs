{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Animal from \"./Animal\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\n// The AnimalDetail component displays the detailed information about a specific animal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimalDetail(_ref) {\n  _s();\n  let {\n    animal,\n    setUser,\n    setAnimals\n  } = _ref;\n  const {\n    likes,\n    id\n  } = animal;\n  const [isLiked, setIsLiked] = useState(false);\n  const [showComments, setshowComments] = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n\n  // Determine the correct wording for the likes count (e.g. 1 like or 2 likes)\n  function likesFunction() {\n    return likes.length === 1 ? \"Like\" : \"Likes\";\n  }\n  function addLikes(updatedAnimal) {\n    setAnimals(prevAnimals => {\n      return prevAnimals.map(prevAnimal => {\n        if (prevAnimal.id === updatedAnimal.id) {\n          return {\n            ...prevAnimal,\n            likes: updatedAnimal.likes || []\n          };\n        } else {\n          return prevAnimal;\n        }\n      });\n    });\n  }\n  function showCom() {\n    // Toggle the show comments state when clicking on the comment button\n    setshowComments(prev => !prev);\n  }\n\n  // Set the styles for the like button based on whether the animal is liked or not\n  const likeButtonStyle = {\n    backgroundColor: isLiked ? \"red\" : \"white\",\n    color: isLiked ? \"white\" : \"red\"\n  };\n  return /*#__PURE__*/_jsxDEV(Animal, {\n    animal: animal,\n    likeButtonStyle: likeButtonStyle\n    // handleClick={handleClick}\n    ,\n    likesFunction: likesFunction,\n    showCom: showCom,\n    showComments: showComments,\n    setShowComments: setshowComments,\n    setAnimals: setAnimals,\n    setUser: setUser,\n    user: user,\n    addLikes: addLikes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimalDetail, \"LzF65krdzRoT0dioSwbkxfQjkt0=\");\n_c = AnimalDetail;\nvar _c;\n$RefreshReg$(_c, \"AnimalDetail\");","map":{"version":3,"names":["React","useState","Animal","useContext","UserContext","AnimalDetail","animal","setUser","setAnimals","likes","id","isLiked","setIsLiked","showComments","setshowComments","user","likesFunction","length","addLikes","updatedAnimal","prevAnimals","map","prevAnimal","showCom","prev","likeButtonStyle","backgroundColor","color"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Animal from \"./Animal\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\n// The AnimalDetail component displays the detailed information about a specific animal\nexport default function AnimalDetail({ animal,setUser ,setAnimals}) {\n  const { likes, id } = animal;\n  const [isLiked, setIsLiked] = useState(false);\n  const [showComments, setshowComments] = useState(false);\n  const { user} = useContext(UserContext); \n\n  \n  // Determine the correct wording for the likes count (e.g. 1 like or 2 likes)\n  function likesFunction() {\n    return likes.length === 1 ? \"Like\" : \"Likes\";\n  }\n\n  function addLikes(updatedAnimal) {\n    setAnimals((prevAnimals) => {\n      return prevAnimals.map((prevAnimal) => {\n        if (prevAnimal.id === updatedAnimal.id) {\n          return { ...prevAnimal, likes: updatedAnimal.likes || [] };\n        } else {\n          return prevAnimal;\n        }\n      });\n    })}\n\n  function showCom() {\n    // Toggle the show comments state when clicking on the comment button\n    setshowComments((prev) => !prev);\n  }\n\n  // Set the styles for the like button based on whether the animal is liked or not\n  const likeButtonStyle = {\n    backgroundColor: isLiked ? \"red\" : \"white\",\n    color: isLiked ? \"white\" : \"red\",\n  };\n\n  return (\n    <Animal\n      animal={animal}\n      likeButtonStyle={likeButtonStyle}\n     // handleClick={handleClick}\n      likesFunction={likesFunction}\n      showCom={showCom}\n      showComments={showComments}\n      setShowComments={setshowComments}\n      setAnimals={setAnimals}\n      setUser={setUser}\n      user={user}\n      addLikes={addLikes}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,yBAAyB;;AAErD;AAAA;AACA,eAAe,SAASC,YAAY,OAAgC;EAAA;EAAA,IAA/B;IAAEC,MAAM;IAACC,OAAO;IAAEC;EAAU,CAAC;EAChE,MAAM;IAAEC,KAAK;IAAEC;EAAG,CAAC,GAAGJ,MAAM;EAC5B,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM;IAAEc;EAAI,CAAC,GAAGZ,UAAU,CAACC,WAAW,CAAC;;EAGvC;EACA,SAASY,aAAa,GAAG;IACvB,OAAOP,KAAK,CAACQ,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO;EAC9C;EAEA,SAASC,QAAQ,CAACC,aAAa,EAAE;IAC/BX,UAAU,CAAEY,WAAW,IAAK;MAC1B,OAAOA,WAAW,CAACC,GAAG,CAAEC,UAAU,IAAK;QACrC,IAAIA,UAAU,CAACZ,EAAE,KAAKS,aAAa,CAACT,EAAE,EAAE;UACtC,OAAO;YAAE,GAAGY,UAAU;YAAEb,KAAK,EAAEU,aAAa,CAACV,KAAK,IAAI;UAAG,CAAC;QAC5D,CAAC,MAAM;UACL,OAAOa,UAAU;QACnB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EAAA;EAEJ,SAASC,OAAO,GAAG;IACjB;IACAT,eAAe,CAAEU,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC;;EAEA;EACA,MAAMC,eAAe,GAAG;IACtBC,eAAe,EAAEf,OAAO,GAAG,KAAK,GAAG,OAAO;IAC1CgB,KAAK,EAAEhB,OAAO,GAAG,OAAO,GAAG;EAC7B,CAAC;EAED,oBACE,QAAC,MAAM;IACL,MAAM,EAAEL,MAAO;IACf,eAAe,EAAEmB;IAClB;IAAA;IACC,aAAa,EAAET,aAAc;IAC7B,OAAO,EAAEO,OAAQ;IACjB,YAAY,EAAEV,YAAa;IAC3B,eAAe,EAAEC,eAAgB;IACjC,UAAU,EAAEN,UAAW;IACvB,OAAO,EAAED,OAAQ;IACjB,IAAI,EAAEQ,IAAK;IACX,QAAQ,EAAEG;EAAS;IAAA;IAAA;IAAA;EAAA,QACnB;AAEN;AAAC,GAjDuBb,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}