{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Animal from \"./Animal\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\n// The AnimalDetail component displays the detailed information about a specific animal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimalDetail(_ref) {\n  _s();\n  let {\n    newMessage,\n    setNewMessage,\n    animal,\n    setUser,\n    setAnimals\n  } = _ref;\n  const {\n    likes\n  } = animal;\n  const [isLiked, setIsLiked] = useState(false);\n  const [showComments, setshowComments] = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n\n  // Determine the correct wording for the likes count (e.g. 1 like or 2 likes)\n  function likesFunction() {\n    return likes.length === 1 ? \"Like\" : \"Likes\";\n  }\n  function addLikes(updatedAnimal) {\n    const likes = updatedAnimal.likes.map(like => like.user_id);\n    const isLiked = likes.includes(user.id);\n    setIsLiked(isLiked);\n    const method = isLiked ? \"DELETE\" : \"POST\";\n    fetch(`http://localhost:3000/animals/${updatedAnimal.id}/likes`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: user.id\n      })\n    }).then(response => response.json()).then(data => {\n      addLikesToAnimals(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  function addLikesToAnimals(updatedAnimal) {\n    setAnimals(prevAnimals => prevAnimals.map(prevAnimal => prevAnimal.id === updatedAnimal.id ? updatedAnimal : prevAnimal));\n  }\n  function showCom() {\n    setshowComments(prev => !prev);\n  }\n\n  // Set the styles for the like button based on whether the animal is liked or not\n  const likeButtonStyle = {\n    backgroundColor: isLiked ? \"red\" : \"white\",\n    color: isLiked ? \"white\" : \"red\"\n  };\n  return /*#__PURE__*/_jsxDEV(Animal, {\n    animal: animal,\n    likeButtonStyle: likeButtonStyle,\n    likesFunction: likesFunction,\n    showCom: showCom,\n    showComments: showComments,\n    setShowComments: setshowComments,\n    setAnimals: setAnimals,\n    setUser: setUser,\n    user: user,\n    addLikes: addLikes,\n    newMessage: newMessage,\n    setNewMessage: setNewMessage,\n    setIsLiked: setIsLiked\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimalDetail, \"LzF65krdzRoT0dioSwbkxfQjkt0=\");\n_c = AnimalDetail;\nvar _c;\n$RefreshReg$(_c, \"AnimalDetail\");","map":{"version":3,"names":["React","useState","Animal","useContext","UserContext","AnimalDetail","newMessage","setNewMessage","animal","setUser","setAnimals","likes","isLiked","setIsLiked","showComments","setshowComments","user","likesFunction","length","addLikes","updatedAnimal","map","like","user_id","includes","id","method","fetch","headers","body","JSON","stringify","then","response","json","data","addLikesToAnimals","catch","error","console","prevAnimals","prevAnimal","showCom","prev","likeButtonStyle","backgroundColor","color"],"sources":["/Users/kqasolli/Desktop/capstone/CatsAndDogs/react-frontend/src/components/content/AnimalDetail.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Animal from \"./Animal\";\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\n\n// The AnimalDetail component displays the detailed information about a specific animal\nexport default function AnimalDetail({ newMessage, setNewMessage, animal,setUser ,setAnimals}) {\n  const { likes} = animal;\n  const [isLiked, setIsLiked] = useState(false);\n  const [showComments, setshowComments] = useState(false);\n  const { user} = useContext(UserContext); \n\n  \n  // Determine the correct wording for the likes count (e.g. 1 like or 2 likes)\n  function likesFunction() {\n    return likes.length === 1 ? \"Like\" : \"Likes\";\n  }\n\n  function addLikes(updatedAnimal) {\n    const likes = updatedAnimal.likes.map((like) => like.user_id);\n    const isLiked = likes.includes(user.id);\n    setIsLiked(isLiked);\n    const method = isLiked ? \"DELETE\" : \"POST\";\n    fetch(`http://localhost:3000/animals/${updatedAnimal.id}/likes`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: user.id }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        addLikesToAnimals(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n  \n  function addLikesToAnimals(updatedAnimal) {\n    setAnimals((prevAnimals) =>\n      prevAnimals.map((prevAnimal) =>\n        prevAnimal.id === updatedAnimal.id ? updatedAnimal : prevAnimal\n      )\n    );\n  }\n  \n\n  function showCom() {\n    setshowComments((prev) => !prev);\n  }\n\n  // Set the styles for the like button based on whether the animal is liked or not\n  const likeButtonStyle = {\n    backgroundColor: isLiked ? \"red\" : \"white\",\n    color: isLiked ? \"white\" : \"red\",\n  };\n\n  return (\n    <Animal\n      animal={animal}\n      likeButtonStyle={likeButtonStyle}\n      likesFunction={likesFunction}\n      showCom={showCom}\n      showComments={showComments}\n      setShowComments={setshowComments}\n      setAnimals={setAnimals}\n      setUser={setUser}\n      user={user}\n      addLikes={addLikes}\n      newMessage={newMessage}\n      setNewMessage={setNewMessage}\n      setIsLiked={setIsLiked}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,yBAAyB;;AAErD;AAAA;AACA,eAAe,SAASC,YAAY,OAA2D;EAAA;EAAA,IAA1D;IAAEC,UAAU;IAAEC,aAAa;IAAEC,MAAM;IAACC,OAAO;IAAEC;EAAU,CAAC;EAC3F,MAAM;IAAEC;EAAK,CAAC,GAAGH,MAAM;EACvB,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM;IAAEe;EAAI,CAAC,GAAGb,UAAU,CAACC,WAAW,CAAC;;EAGvC;EACA,SAASa,aAAa,GAAG;IACvB,OAAON,KAAK,CAACO,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO;EAC9C;EAEA,SAASC,QAAQ,CAACC,aAAa,EAAE;IAC/B,MAAMT,KAAK,GAAGS,aAAa,CAACT,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,CAAC;IAC7D,MAAMX,OAAO,GAAGD,KAAK,CAACa,QAAQ,CAACR,IAAI,CAACS,EAAE,CAAC;IACvCZ,UAAU,CAACD,OAAO,CAAC;IACnB,MAAMc,MAAM,GAAGd,OAAO,GAAG,QAAQ,GAAG,MAAM;IAC1Ce,KAAK,CAAE,iCAAgCP,aAAa,CAACK,EAAG,QAAO,EAAE;MAC/DC,MAAM,EAAEA,MAAM;MACdE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,OAAO,EAAEP,IAAI,CAACS;MAAG,CAAC;IAC3C,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,iBAAiB,CAACD,IAAI,CAAC;IACzB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;EAEA,SAASF,iBAAiB,CAAChB,aAAa,EAAE;IACxCV,UAAU,CAAE8B,WAAW,IACrBA,WAAW,CAACnB,GAAG,CAAEoB,UAAU,IACzBA,UAAU,CAAChB,EAAE,KAAKL,aAAa,CAACK,EAAE,GAAGL,aAAa,GAAGqB,UAAU,CAChE,CACF;EACH;EAGA,SAASC,OAAO,GAAG;IACjB3B,eAAe,CAAE4B,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC;;EAEA;EACA,MAAMC,eAAe,GAAG;IACtBC,eAAe,EAAEjC,OAAO,GAAG,KAAK,GAAG,OAAO;IAC1CkC,KAAK,EAAElC,OAAO,GAAG,OAAO,GAAG;EAC7B,CAAC;EAED,oBACE,QAAC,MAAM;IACL,MAAM,EAAEJ,MAAO;IACf,eAAe,EAAEoC,eAAgB;IACjC,aAAa,EAAE3B,aAAc;IAC7B,OAAO,EAAEyB,OAAQ;IACjB,YAAY,EAAE5B,YAAa;IAC3B,eAAe,EAAEC,eAAgB;IACjC,UAAU,EAAEL,UAAW;IACvB,OAAO,EAAED,OAAQ;IACjB,IAAI,EAAEO,IAAK;IACX,QAAQ,EAAEG,QAAS;IACnB,UAAU,EAAEb,UAAW;IACvB,aAAa,EAAEC,aAAc;IAC7B,UAAU,EAAEM;EAAW;IAAA;IAAA;IAAA;EAAA,QACvB;AAEN;AAAC,GArEuBR,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}