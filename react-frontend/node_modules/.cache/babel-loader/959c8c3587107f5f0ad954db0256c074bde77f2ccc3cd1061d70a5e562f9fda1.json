{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/travel-ed/src/components/content/FetchCommentsForm.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FetchCommentsForm(_ref) {\n  let {\n    animal,\n    setAnimals,\n    newComment,\n    setNewComment\n  } = _ref;\n  function updateAnimals(e) {\n    if (newComment) {\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          comments: [...animal.comments, {\n            comment: newComment,\n            replies: [],\n            likes: 0\n          }]\n        })\n      }).then(response => response.json()).then(updatedAnimals => {\n        setAnimals(prevAnimals => prevAnimals.map(currentAnimals => {\n          if (currentAnimals.id === updatedAnimals.id) {\n            return updatedAnimals;\n          } else {\n            return currentAnimals;\n          }\n        }));\n      });\n    }\n    handleCommentSubmit();\n  }\n  function handleCommentChange(event) {\n    setNewComment(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showComment && /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"new-reply-li\",\n      children: newComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleCommentChange,\n        placeholder: \"Write a comment...\",\n        className: \"type-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-comment-btn\",\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = FetchCommentsForm;\nvar _c;\n$RefreshReg$(_c, \"FetchCommentsForm\");","map":{"version":3,"names":["React","useState","FetchCommentsForm","animal","setAnimals","newComment","setNewComment","updateAnimals","e","fetch","id","method","headers","accept","body","JSON","stringify","comments","comment","replies","likes","then","response","json","updatedAnimals","prevAnimals","map","currentAnimals","handleCommentSubmit","handleCommentChange","event","target","value","showComment"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/FetchCommentsForm.js"],"sourcesContent":["import React,{useState} from 'react'\n\nexport default function FetchCommentsForm({animal, setAnimals,newComment,setNewComment}) {\n  \n \n\n  function updateAnimals(e) {\n  \n    if (newComment) {\n      fetch(`http://localhost:3000/animals/${animal.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          comments: [\n            ...animal.comments,\n            { comment: newComment, replies: [], likes: 0 },\n          ],\n        }),\n      })\n        .then((response) => response.json())\n        .then((updatedAnimals) => {\n          setAnimals((prevAnimals) =>\n            prevAnimals.map((currentAnimals) => {\n              if (currentAnimals.id === updatedAnimals.id) {\n                return updatedAnimals;\n              } else {\n                return currentAnimals;\n              }\n            })\n          )\n        })\n    }\n    handleCommentSubmit();\n  }\n  \n  function handleCommentChange(event) {\n    setNewComment(event.target.value);\n  }\n  \n  \n\n \n  return (\n    <>\n    {showComment && <li className=\"new-reply-li\">{newComment}</li>}\n      <div className=\"comment-form\">\n        <textarea\n          type=\"text\"\n          value={newComment}\n          onChange={handleCommentChange}\n          placeholder=\"Write a comment...\"\n          className=\"type-comment\"\n          />\n        <button className=\"post-comment-btn\" type=\"submit\">\n          Post\n        </button>\n      </div>\n    </>\n  )  \n}  \n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAEpC,eAAe,SAASC,iBAAiB,OAAgD;EAAA,IAA/C;IAACC,MAAM;IAAEC,UAAU;IAACC,UAAU;IAACC;EAAa,CAAC;EAIrF,SAASC,aAAa,CAACC,CAAC,EAAE;IAExB,IAAIH,UAAU,EAAE;MACdI,KAAK,CAAE,iCAAgCN,MAAM,CAACO,EAAG,EAAC,EAAE;QAClDC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,MAAM,EAAE;QACV,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE,CACR,GAAGd,MAAM,CAACc,QAAQ,EAClB;YAAEC,OAAO,EAAEb,UAAU;YAAEc,OAAO,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAE,CAAC;QAElD,CAAC;MACH,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,cAAc,IAAK;QACxBpB,UAAU,CAAEqB,WAAW,IACrBA,WAAW,CAACC,GAAG,CAAEC,cAAc,IAAK;UAClC,IAAIA,cAAc,CAACjB,EAAE,KAAKc,cAAc,CAACd,EAAE,EAAE;YAC3C,OAAOc,cAAc;UACvB,CAAC,MAAM;YACL,OAAOG,cAAc;UACvB;QACF,CAAC,CAAC,CACH;MACH,CAAC,CAAC;IACN;IACAC,mBAAmB,EAAE;EACvB;EAEA,SAASC,mBAAmB,CAACC,KAAK,EAAE;IAClCxB,aAAa,CAACwB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC;EAKA,oBACE;IAAA,WACCC,WAAW,iBAAI;MAAI,SAAS,EAAC,cAAc;MAAA,UAAE5B;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5D;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEA,UAAW;QAClB,QAAQ,EAAEwB,mBAAoB;QAC9B,WAAW,EAAC,oBAAoB;QAChC,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QACtB,eACJ;QAAQ,SAAS,EAAC,kBAAkB;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAEnD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA,gBACL;AAEP;AAAC,KA5DuB3B,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}