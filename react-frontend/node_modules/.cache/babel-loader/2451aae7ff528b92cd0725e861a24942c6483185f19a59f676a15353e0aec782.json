{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/CatsAndDogs/react-frontend/src/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Auth.css\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth(props) {\n  _s();\n  const history = useNavigate();\n  let [authMode, setAuthMode] = useState(\"signin\");\n  let [signInForm, setSignInForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let [signUpForm, setSignUpForm] = useState({\n    full_name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const handleSignInSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: signInForm.email,\n        password: signInForm.password\n      })\n    }).then(response => {\n      if (response.ok) {\n        // User is authenticated - redirect to the content page\n        history.push(\"/\");\n      } else if (response.status === 401) {\n        // Authentication failed - display error message\n        throw new Error(\"Invalid email or password\");\n      } else {\n        // Display other error messages returned by the server\n        throw new Error(response.statusText);\n      }\n    }).catch(error => {\n      console.error(error);\n      // Display error message to the user\n    });\n  };\n\n  const handleSignUpSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: signUpForm\n      })\n    }).then(response => {\n      if (response.ok) {\n        // User is registered - redirect to the content page\n        history.push(\"/\");\n      } else if (response.status === 422) {\n        // Registration failed - display validation errors\n        return response.json().then(data => {\n          throw new Error(data.errors.join(\", \"));\n        });\n      } else {\n        // Display other error messages returned by the server\n        throw new Error(response.statusText);\n      }\n    }).catch(error => {\n      console.error(error);\n      // Display error message to the user\n    });\n  };\n\n  const handleSignInFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSignInForm(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSignUpFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSignUpForm(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const changeAuthMode = () => {\n    setAuthMode(authMode === \"signin\" ? \"signup\" : \"signin\");\n  };\n  if (authMode === \"signin\") {\n    return /*#__PURE__*/_jsxDEV(SignUp, {\n      handleSignUpSubmit: handleSignUpSubmit,\n      changeAuthMode: changeAuthMode,\n      signUpForm: signUpForm,\n      handleSignUpFormChange: handleSignUpFormChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(Login, {\n    handleSignInSubmit: handleSignInSubmit,\n    changeAuthMode: changeAuthMode,\n    signInForm: signInForm,\n    handleSignInFormChange: handleSignInFormChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Auth, \"dEYJfSeG7qOXGUfYUG6Y08Ktl54=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useNavigate","Login","SignUp","Auth","props","history","authMode","setAuthMode","signInForm","setSignInForm","email","password","signUpForm","setSignUpForm","full_name","handleSignInSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","push","status","Error","statusText","catch","error","console","handleSignUpSubmit","user","json","data","errors","join","handleSignInFormChange","name","value","target","prevState","handleSignUpFormChange","changeAuthMode"],"sources":["/Users/kqasolli/CatsAndDogs/react-frontend/src/Auth.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nimport \"./Auth.css\";\nimport Login from \"./Login\"\nimport SignUp from \"./SignUp\"\n\nexport default function Auth(props) {\nconst history = useNavigate()\n  let [authMode, setAuthMode] = useState(\"signin\");\n  let [signInForm, setSignInForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  let [signUpForm, setSignUpForm] = useState({\n    full_name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSignInSubmit = (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: signInForm.email,\n        password: signInForm.password,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          // User is authenticated - redirect to the content page\n          history.push(\"/\");\n        } else if (response.status === 401) {\n          // Authentication failed - display error message\n          throw new Error(\"Invalid email or password\");\n        } else {\n          // Display other error messages returned by the server\n          throw new Error(response.statusText);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        // Display error message to the user\n      });\n  };\n  \n  const handleSignUpSubmit = (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user: signUpForm }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          // User is registered - redirect to the content page\n          history.push(\"/\");\n        } else if (response.status === 422) {\n          // Registration failed - display validation errors\n          return response.json().then((data) => {\n            throw new Error(data.errors.join(\", \"));\n          });\n        } else {\n          // Display other error messages returned by the server\n          throw new Error(response.statusText);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        // Display error message to the user\n      });\n  };\n  \n\n\n  const handleSignInFormChange = (event) => {\n    const { name, value } = event.target;\n    setSignInForm((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSignUpFormChange = (event) => {\n    const { name, value } = event.target;\n    setSignUpForm((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const changeAuthMode = () => {\n    setAuthMode(authMode === \"signin\" ? \"signup\" : \"signin\");\n  };\n\n  if (authMode === \"signin\") {\n    return (\n      <SignUp \n    handleSignUpSubmit={handleSignUpSubmit}\n    changeAuthMode={changeAuthMode}\n    signUpForm={signUpForm}\n    handleSignUpFormChange={handleSignUpFormChange}\n    />\n    );\n  }\nelse \n  return (\n    <Login \n    handleSignInSubmit={handleSignInSubmit}\n    changeAuthMode={changeAuthMode}\n    signInForm={signInForm}\n    handleSignInFormChange={handleSignInFormChange}\n    />\n \n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}