{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Utils_1 = require(\"../util/Utils\");\n/**\n * Static utilities that interface with National Geographic Picture of the Day and Latest News API.\n */\nclass NationalGeographicAPI {\n  /**\n   * Function that returns the latest news from National Geographic. Can retrieve articles in 'pages', not only the\n   * the very latest articles given combination of `pageSize` and `pageNumber`. If no `pageSize` or `pageNumber` is\n   * provided, it returns the latest 3 news articles\n   *\n   * Supports both Promise and callback based returning of result. If no callback is provided, it returns Promise with\n   * result.\n   * @param pageSize - The number of articles to be returned from query. Defaults to 3.\n   * @param pageNumber - The page number to retrieve, works in conjunction with `pageSize` to determine data.\n   * @param cb - Optional callback otherwise Promise based return.\n   * @return {Promise<NewsPayload[]> | void}\n   */\n  static getLatestNews(pageSize, pageNumber, cb) {\n    const callback = this.getCallback(arguments.length, pageSize, pageNumber, cb);\n    const queryPageSize = isNaN(pageSize) ? this.DEFAULT_PAGE_SIZE : pageSize;\n    const queryPageNumber = isNaN(pageNumber) ? this.DEFAULT_PAGE_NUMBER : pageNumber;\n    const url = Utils_1.Utils.getLatestNewsUrl(queryPageSize, queryPageNumber);\n    return Utils_1.Utils.makeRequest(Utils_1.Utils.getRequestPayload(url), callback);\n  }\n  /**\n   * Function that returns the latest Photo of the Day from National Geographic. Can retrieve today's or any day in\n   * the past photo up to January 1st 2009 when Photo of the Day begins. Date can be in millis or UTC string.\n   *\n   * If there is no photo posted for the day yet due to timezone differences, it will retrieve the previous days photo\n   * until today's one is posted.\n   *\n   * Supports both Promise and callback based returning of result. If no callback is provided, it returns Promise with\n   * result.\n   *\n   * @param day - The historical day to retrieve data for. Defaults to retrieving today's photo.\n   * @param cb - Optional callback otherwise Promise based return.\n   * @return {Promise<PhotoPayload | void>}\n   */\n  static getPhotoOfDay(day, cb) {\n    return __awaiter(this, arguments, void 0, function* () {\n      const callback = this.getCallback(arguments.length, day, cb);\n      const url = this.getPhotoUrl(day);\n      const payload = yield this.getPayload(url);\n      if (payload.data.length > 0) {\n        return this.sendResponse(payload, callback);\n        // tslint:disable-next-line\n      } else {\n        return this.getYesterdayPhoto(callback);\n      }\n    });\n  }\n  static sendResponse(result, callback) {\n    if (Object.prototype.toString.call(callback) === '[object Function]') {\n      callback(null, result);\n    } else {\n      return result;\n    }\n  }\n  static getYesterdayPhoto(callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const yesterdayDate = new Date();\n      yesterdayDate.setDate(yesterdayDate.getDate() - 1);\n      const url = this.getPhotoUrl(yesterdayDate.toISOString());\n      const payload = yield this.getPayload(url);\n      return this.sendResponse(payload, callback);\n    });\n  }\n  static getPayload(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const result = yield Utils_1.Utils.makeRequest(Utils_1.Utils.getRequestPayload(url));\n        return result;\n      } catch (e) {\n        throw new Error(`National Geographic API retrieval error: ${e.message}`);\n      }\n    });\n  }\n  static getCallback(numberOfArguments, pageSize, pageNumber, cb) {\n    if (numberOfArguments === 3) {\n      return cb;\n      // tslint:disable-next-line\n    } else if (numberOfArguments === 2) {\n      if (Object.prototype.toString.call(pageNumber) === '[object Function]') {\n        return pageNumber;\n      }\n    } else if (numberOfArguments === 1) {\n      if (Object.prototype.toString.call(pageSize) === '[object Function]') {\n        return pageSize;\n      }\n    }\n  }\n  static getPhotoUrl(day) {\n    let fromDate;\n    let numberOfDays;\n    if (Object.prototype.toString.call(day) !== '[object String]' || isNaN(Date.parse(day))) {\n      const targetDate = new Date().toISOString();\n      fromDate = targetDate.substring(0, targetDate.indexOf('T'));\n      numberOfDays = 1;\n    } else {\n      const targetDate = new Date(day);\n      numberOfDays = Math.floor(Math.abs((Date.now() - targetDate.getTime()) / this.oneDayMillis));\n      const targetDateISO = targetDate.toISOString();\n      fromDate = targetDateISO.substring(0, targetDateISO.indexOf('T'));\n    }\n    return Utils_1.Utils.getPictureOfDayUrl(fromDate, numberOfDays);\n  }\n}\nexports.NationalGeographicAPI = NationalGeographicAPI;\nNationalGeographicAPI.DEFAULT_PAGE_SIZE = 3;\nNationalGeographicAPI.DEFAULT_PAGE_NUMBER = 0;\nNationalGeographicAPI.oneDayMillis = 1000 * 60 * 60 * 24;","map":{"version":3,"mappings":"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","names":["NationalGeographicAPI","getLatestNews","pageSize","pageNumber","cb","callback","getCallback","arguments","length","queryPageSize","isNaN","DEFAULT_PAGE_SIZE","queryPageNumber","DEFAULT_PAGE_NUMBER","url","Utils_1","getLatestNewsUrl","makeRequest","getRequestPayload","getPhotoOfDay","day","getPhotoUrl","payload","getPayload","data","sendResponse","getYesterdayPhoto","result","Object","prototype","toString","call","yesterdayDate","Date","setDate","getDate","toISOString","e","Error","message","numberOfArguments","fromDate","numberOfDays","parse","targetDate","substring","indexOf","Math","floor","abs","now","getTime","oneDayMillis","targetDateISO","getPictureOfDayUrl","exports"],"sources":["../../src/api/NationalGeographicAPI.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}