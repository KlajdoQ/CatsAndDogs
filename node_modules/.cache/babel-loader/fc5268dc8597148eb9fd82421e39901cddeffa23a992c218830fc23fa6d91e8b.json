{"ast":null,"code":"var _jsxFileName = \"/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FetchCommentsForm from './FetchCommentsForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddComment(_ref) {\n  _s();\n  let {\n    animal,\n    setAnimals\n  } = _ref;\n  const [isLikeClicked, setIsLikeClicked] = useState(false);\n  const [likeComment, setLikeComment] = useState({});\n  const [showReply, setShowReply] = useState({});\n  const [newReply, setNewReply] = useState(\"\");\n  const [newComment, setnewComment] = useState(\"\");\n  const [showComment, setshowComment] = useState(false);\n  function likeComments(index) {\n    setLikeComment(prev => {\n      let newLikeComment = {\n        ...prev\n      };\n      newLikeComment[index] = !newLikeComment[index];\n      return newLikeComment;\n    });\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        comments: animal.comments.map((comment, i) => i === index ? {\n          ...comment,\n          likes: comment.likes + 1\n        } : comment)\n      })\n    }).then(response => response.json()).then(updatedAnimals => {\n      setAnimals(prevAnimals => prevAnimals.map(currentAnimals => {\n        if (currentAnimals.id === updatedAnimals.id) {\n          return updatedAnimals;\n        } else {\n          return currentAnimals;\n        }\n      }));\n    });\n  }\n  function showCommentReplies(commentIndex) {\n    setShowReply(prev => {\n      let isCommentShown = {\n        ...prev\n      };\n      isCommentShown[commentIndex] = !isCommentShown[commentIndex];\n      return isCommentShown;\n    });\n  }\n  function handleReplyChange(e) {\n    setNewReply(e.target.value);\n  }\n  function handleReplySubmit(e, commentIndex) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        comments: animal.comments.map((comment, i) => {\n          if (i === commentIndex) {\n            return {\n              ...comment,\n              replies: [...comment.replies, {\n                reply: newReply\n              }]\n            };\n          }\n          return comment;\n        })\n      })\n    }).then(response => response.json()).then(updatedAnimals => {\n      setAnimals(prevAnimals => prevAnimals.map(currentAnimals => {\n        if (currentAnimals.id === updatedAnimals.id) {\n          return updatedAnimals;\n        } else {\n          return currentAnimals;\n        }\n      }));\n    });\n    setNewReply(\"\");\n    setShowReply({});\n  }\n  function handleCommentSubmit(e) {\n    e.preventDefault();\n    if (newComment && !isLikeClicked) {\n      likeComments();\n      setnewComment(\"\");\n      updateAnimals();\n    }\n    setIsLikeClicked(false);\n    setnewComment(\"\");\n    setshowComment(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [animal.comments.map((comments, commentIndex) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"comments-list\",\n          animal: animal,\n          setAnimals: setAnimals,\n          children: comments.comment\n        }, commentIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-reply\",\n          onClick: () => likeComments(commentIndex),\n          children: [likeComment[commentIndex] ? \"â™¥\" : \"â™¡\", \"Like\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-reply\",\n          onClick: e => showCommentReplies(commentIndex),\n          children: \"\\u21B3 Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ul-replies\",\n          children: comments.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"replies\",\n            children: reply.reply\n          }, replyIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), showReply[commentIndex] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: newReply,\n            onChange: handleReplyChange,\n            placeholder: \"Write a reply...\",\n            className: \"type-reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"post-comment-btn replyBtn\",\n            type: \"submit\",\n            onClick: e => handleReplySubmit(e, commentIndex),\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(FetchCommentsForm, {\n        animal: animal,\n        setAnimals: setAnimals,\n        likeComments: likeComments,\n        newComment: newComment,\n        handleCommentSubmit: handleCommentSubmit,\n        set: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(AddComment, \"qIXusNYsKPxZyRCZDXuLDsF39NI=\");\n_c = AddComment;\nvar _c;\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["React","useState","FetchCommentsForm","AddComment","animal","setAnimals","isLikeClicked","setIsLikeClicked","likeComment","setLikeComment","showReply","setShowReply","newReply","setNewReply","newComment","setnewComment","showComment","setshowComment","likeComments","index","prev","newLikeComment","fetch","id","method","headers","accept","body","JSON","stringify","comments","map","comment","i","likes","then","response","json","updatedAnimals","prevAnimals","currentAnimals","showCommentReplies","commentIndex","isCommentShown","handleReplyChange","e","target","value","handleReplySubmit","preventDefault","replies","reply","handleCommentSubmit","updateAnimals","replyIndex"],"sources":["/Users/kqasolli/Desktop/travel-ed/src/components/content/AddComment.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport FetchCommentsForm from './FetchCommentsForm'\n\nexport default function AddComment({ animal, setAnimals }) {\n  \n  const [isLikeClicked, setIsLikeClicked] = useState(false);\n  const [likeComment, setLikeComment] = useState({});\n  const [showReply, setShowReply] = useState({});\n  const [newReply, setNewReply] = useState(\"\");\n  const [newComment, setnewComment] = useState(\"\");\n  const [showComment, setshowComment] = useState(false);\n\n  \n  function likeComments(index) {\n    setLikeComment((prev) => {\n      let newLikeComment = { ...prev };\n      newLikeComment[index] = !newLikeComment[index];\n      return newLikeComment;\n    });\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        comments: animal.comments.map((comment, i) =>\n          i === index ? { ...comment, likes: comment.likes + 1 } : comment\n        ),\n      }),\n    })\n      .then((response) => response.json())\n      .then((updatedAnimals) => {\n        setAnimals((prevAnimals) =>\n          prevAnimals.map((currentAnimals) => {\n            if (currentAnimals.id === updatedAnimals.id) {\n              return updatedAnimals;\n            } else {\n              return currentAnimals;\n            }\n          })\n        );\n      });\n  }\n\n  function showCommentReplies(commentIndex) {\n    setShowReply((prev) => {\n      let isCommentShown = { ...prev };\n      isCommentShown[commentIndex] = !isCommentShown[commentIndex];\n      return isCommentShown;\n    });\n  }\n\n  function handleReplyChange(e) {\n    setNewReply(e.target.value);\n  }\n\n  function handleReplySubmit(e, commentIndex) {\n    e.preventDefault();\n\n    fetch(`http://localhost:3000/animals/${animal.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        comments: animal.comments.map((comment, i) => {\n          if (i === commentIndex) {\n            return {\n              ...comment,\n              replies: [...comment.replies, { reply: newReply }],\n            };\n          }\n          return comment;\n        }),\n      }),\n    })\n      .then((response) => response.json())\n      .then((updatedAnimals) => {\n        setAnimals((prevAnimals) =>\n          prevAnimals.map((currentAnimals) => {\n            if (currentAnimals.id === updatedAnimals.id) {\n              return updatedAnimals;\n            } else {\n              return currentAnimals;\n            }\n          })\n        );\n      });\n\n    setNewReply(\"\");\n    setShowReply({});\n  }\n\n\n  function handleCommentSubmit(e) {\n    e.preventDefault();\n    if (newComment && !isLikeClicked) {\n      likeComments();\n      setnewComment(\"\")\n      updateAnimals();\n    }\n    setIsLikeClicked(false);\n    setnewComment(\"\");\n    setshowComment(true);\n  }\n\n  return (\n    <div>\n    <form onSubmit={handleCommentSubmit}>\n      {animal.comments.map((comments, commentIndex) => (\n        <>\n          <li\n            className=\"comments-list\"\n            key={commentIndex}\n            animal={animal}\n            setAnimals={setAnimals}\n          >\n            {comments.comment}\n          </li>\n          <button className=\"like-reply\" onClick={() => likeComments(commentIndex)}>\n            {likeComment[commentIndex] ? \"â™¥\" : \"â™¡\"}\n            Like\n          </button>\n          <button\n            className=\"like-reply\"\n            onClick={(e) => showCommentReplies(commentIndex)}\n          >\n             â†³ Reply\n          </button>\n          <ul className=\"ul-replies\">\n            {comments.replies.map((reply, replyIndex) => (\n              <li key={replyIndex} className=\"replies\">{reply.reply}</li>\n            ))}\n          </ul>\n          {showReply[commentIndex] ? (\n            <div className=\"comment-form\">\n              <textarea\n                type=\"text\"\n                value={newReply}\n                onChange={handleReplyChange}\n                placeholder=\"Write a reply...\"\n                className=\"type-reply\"\n              />\n              <button\n                className=\"post-comment-btn replyBtn\"\n                type=\"submit\"\n                onClick={(e) => handleReplySubmit(e,commentIndex)}\n              >\n                Reply\n              </button>\n            </div>\n          ) : null}\n        </>\n      ))}\n      <FetchCommentsForm \n        animal={animal}\n        setAnimals={setAnimals}\n        likeComments={likeComments}\n        newComment={newComment}\n        handleCommentSubmit={handleCommentSubmit}\n        set\n      />\n\n    </form>\n  </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}